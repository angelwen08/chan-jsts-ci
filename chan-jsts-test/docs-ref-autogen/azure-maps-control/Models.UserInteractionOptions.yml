### YamlMime:UniversalReference
items:
  - uid: azure-maps-control.Models.UserInteractionOptions
    name: UserInteractionOptions
    fullName: UserInteractionOptions
    children:
      - azure-maps-control.Models.UserInteractionOptions.boxZoomInteraction
      - azure-maps-control.Models.UserInteractionOptions.dblClickZoomInteraction
      - azure-maps-control.Models.UserInteractionOptions.dragPanInteraction
      - azure-maps-control.Models.UserInteractionOptions.dragRotateInteraction
      - azure-maps-control.Models.UserInteractionOptions.interactive
      - azure-maps-control.Models.UserInteractionOptions.keyboardInteraction
      - azure-maps-control.Models.UserInteractionOptions.scrollZoomInteraction
      - azure-maps-control.Models.UserInteractionOptions.touchInteraction
    langs:
      - typeScript
    type: interface
    summary: The options for enabling/disabling user interaction with the map.
    extends:
      name: Options
    package: azure-maps-control
  - uid: azure-maps-control.Models.UserInteractionOptions.boxZoomInteraction
    name: boxZoomInteraction
    fullName: boxZoomInteraction
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether the Shift + left click and drag will draw a zoom box.
    optional: true
    syntax:
      content: 'boxZoomInteraction?: boolean'
      return:
        type:
          - boolean
    package: azure-maps-control
  - uid: azure-maps-control.Models.UserInteractionOptions.dblClickZoomInteraction
    name: dblClickZoomInteraction
    fullName: dblClickZoomInteraction
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether double left click will zoom the map inwards.
    optional: true
    syntax:
      content: 'dblClickZoomInteraction?: boolean'
      return:
        type:
          - boolean
    package: azure-maps-control
  - uid: azure-maps-control.Models.UserInteractionOptions.dragPanInteraction
    name: dragPanInteraction
    fullName: dragPanInteraction
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether left click and drag will pan the map.
    optional: true
    syntax:
      content: 'dragPanInteraction?: boolean'
      return:
        type:
          - boolean
    package: azure-maps-control
  - uid: azure-maps-control.Models.UserInteractionOptions.dragRotateInteraction
    name: dragRotateInteraction
    fullName: dragRotateInteraction
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether right click and drag will rotate and pitch the map.
    optional: true
    syntax:
      content: 'dragRotateInteraction?: boolean'
      return:
        type:
          - boolean
    package: azure-maps-control
  - uid: azure-maps-control.Models.UserInteractionOptions.interactive
    name: interactive
    fullName: interactive
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Whether the map is interactive or static. If false, all user interaction
      is disabled.  If true, only selected

      user interactions will enabled.
    optional: true
    syntax:
      content: 'interactive?: boolean'
      return:
        type:
          - boolean
    package: azure-maps-control
  - uid: azure-maps-control.Models.UserInteractionOptions.keyboardInteraction
    name: keyboardInteraction
    fullName: keyboardInteraction
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Whether the keyboard interactions are enabled.

      <style> .k-key { border: 1px solid grey; border-radius: 6px;
      background-color: #ccc; line-height: 14px;

      font-size: 14px; padding: 2px; } </style>

      <p><span class="k-key">+=</span>: Increase zoom level by 1.</p>

      <p><span class="k-key">Shift</span> + <span class="k-key">+=</span>:
      Increase the zoom level by 2.</p>

      <p><span class="k-key">-</span>: Decrease zoom level by 1.</p>

      <p><span class="k-key">Shift</span> + <span class="k-key">-</span>:
      Decrease zoom level by 2.</p>

      <p><span class="k-key">&gt;</span>: Pan right 100 pixels.</p>

      <p><span class="k-key">&lt;</span>: Pan left 100 pixels.</p>

      <p><span class="k-key">^</span>: Pan up 100 pixels.</p>

      <p><span class="k-key">v</span>: Pan down 100 pixels.</p>

      <p><span class="k-key">Shift</span> + <span class="k-key">⇢</span>: Rotate
      15 degrees clockwise.</p>

      <p><span class="k-key">Shift</span> + <span class="k-key">⇠</span>: Rotate
      15 degrees counter-clockwise.</p>

      <p><span class="k-key">Shift</span> + <span class="k-key">⇡</span>:
      Increase pitch by 10 degrees.</p>

      <p><span class="k-key">Shift</span> + <span class="k-key">⇣</span>:
      Decrease pitch by 10 degrees.</p>
    optional: true
    syntax:
      content: 'keyboardInteraction?: boolean'
      return:
        type:
          - boolean
    package: azure-maps-control
  - uid: azure-maps-control.Models.UserInteractionOptions.scrollZoomInteraction
    name: scrollZoomInteraction
    fullName: scrollZoomInteraction
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether the map should zoom on scroll input.
    optional: true
    syntax:
      content: 'scrollZoomInteraction?: boolean'
      return:
        type:
          - boolean
    package: azure-maps-control
  - uid: azure-maps-control.Models.UserInteractionOptions.touchInteraction
    name: touchInteraction
    fullName: touchInteraction
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether touch interactions are enabled for touch devices.
    optional: true
    syntax:
      content: 'touchInteraction?: boolean'
      return:
        type:
          - boolean
    package: azure-maps-control
references:
  - uid: azure-maps-control.Models.ControlStyle
    spec.typeScript:
      - name: ControlStyle
        fullName: ControlStyle
        uid: azure-maps-control.Models.ControlStyle
  - uid: azure-maps-control.atlas.data.BoundingBox
    spec.typeScript:
      - name: BoundingBox
        fullName: BoundingBox
        uid: azure-maps-control.atlas.data.BoundingBox
  - uid: azure-maps-control.atlas.data.Position
    spec.typeScript:
      - name: Position
        fullName: Position
        uid: azure-maps-control.atlas.data.Position
  - uid: azure-maps-control.Models.LayerOptions
    spec.typeScript:
      - name: LayerOptions
        fullName: LayerOptions
        uid: azure-maps-control.Models.LayerOptions
  - uid: azure-maps-control.atlas.Map
    spec.typeScript:
      - name: Map
        fullName: Map
        uid: azure-maps-control.atlas.Map
  - uid: azure-maps-control.Models.ControlOptions
    spec.typeScript:
      - name: ControlOptions
        fullName: ControlOptions
        uid: azure-maps-control.Models.ControlOptions
  - uid: azure-maps-control.Models.ControlPosition
    spec.typeScript:
      - name: ControlPosition
        fullName: ControlPosition
        uid: azure-maps-control.Models.ControlPosition
  - uid: >-
      Array<azure-maps-control.atlas.data.Feature<azure-maps-control.atlas.data.Geometry,
      any>>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: Feature
        fullName: Feature
        uid: azure-maps-control.atlas.data.Feature
      - name: <
        fullName: <
      - name: Geometry
        fullName: Geometry
        uid: azure-maps-control.atlas.data.Geometry
      - name: ', any>>'
        fullName: ', any>>'
