### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IPanelProps
    name: IPanelProps
    fullName: IPanelProps
    children:
      - office-ui-fabric-react.IPanelProps.className
      - office-ui-fabric-react.IPanelProps.closeButtonAriaLabel
      - office-ui-fabric-react.IPanelProps.componentId
      - office-ui-fabric-react.IPanelProps.componentRef
      - office-ui-fabric-react.IPanelProps.customWidth
      - office-ui-fabric-react.IPanelProps.elementToFocusOnDismiss
      - office-ui-fabric-react.IPanelProps.firstFocusableSelector
      - office-ui-fabric-react.IPanelProps.focusTrapZoneProps
      - office-ui-fabric-react.IPanelProps.forceFocusInsideTrap
      - office-ui-fabric-react.IPanelProps.hasCloseButton
      - office-ui-fabric-react.IPanelProps.headerClassName
      - office-ui-fabric-react.IPanelProps.headerText
      - office-ui-fabric-react.IPanelProps.ignoreExternalFocusing
      - office-ui-fabric-react.IPanelProps.isBlocking
      - office-ui-fabric-react.IPanelProps.isFooterAtBottom
      - office-ui-fabric-react.IPanelProps.isHiddenOnDismiss
      - office-ui-fabric-react.IPanelProps.isLightDismiss
      - office-ui-fabric-react.IPanelProps.isOpen
      - office-ui-fabric-react.IPanelProps.layerProps
      - office-ui-fabric-react.IPanelProps.onDismiss
      - office-ui-fabric-react.IPanelProps.onDismissed
      - office-ui-fabric-react.IPanelProps.onLightDismissClick
      - office-ui-fabric-react.IPanelProps.onOpen
      - office-ui-fabric-react.IPanelProps.onOpened
      - office-ui-fabric-react.IPanelProps.onOuterClick
      - office-ui-fabric-react.IPanelProps.onRenderBody
      - office-ui-fabric-react.IPanelProps.onRenderFooter
      - office-ui-fabric-react.IPanelProps.onRenderFooterContent
      - office-ui-fabric-react.IPanelProps.onRenderHeader
      - office-ui-fabric-react.IPanelProps.onRenderNavigation
      - office-ui-fabric-react.IPanelProps.onRenderNavigationContent
      - office-ui-fabric-react.IPanelProps.styles
      - office-ui-fabric-react.IPanelProps.theme
      - office-ui-fabric-react.IPanelProps.type
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory Panel}'
    extends:
      name: HTMLAttributes<office-ui-fabric-react.PanelBase>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: Additional css class to apply to the Panel
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.closeButtonAriaLabel
    name: closeButtonAriaLabel
    fullName: closeButtonAriaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: Aria label on close button
    optional: true
    syntax:
      content: 'closeButtonAriaLabel?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.componentId
    name: componentId
    fullName: componentId
    children: []
    langs:
      - typeScript
    type: property
    summary: Deprecated property. Serves no function.
    optional: true
    syntax:
      content: 'componentId?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
    deprecated:
      content: Serves no function.
  - uid: office-ui-fabric-react.IPanelProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional callback to access the IPanel interface. Use this instead of ref
      for accessing

      the public methods and properties of the component.
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<IPanel>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.IPanel>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.customWidth
    name: customWidth
    fullName: customWidth
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Custom panel width, used only when `type` is set to `PanelType.custom`.'
    optional: true
    syntax:
      content: 'customWidth?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.elementToFocusOnDismiss
    name: elementToFocusOnDismiss
    fullName: elementToFocusOnDismiss
    children: []
    langs:
      - typeScript
    type: property
    summary: Sets the HTMLElement to focus on when exiting the FocusTrapZone.
    optional: true
    syntax:
      content: 'elementToFocusOnDismiss?: HTMLElement'
      return:
        type:
          - HTMLElement
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.firstFocusableSelector
    name: firstFocusableSelector
    fullName: firstFocusableSelector
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Indicates the selector for first focusable item.
      Deprecated, use `focusTrapZoneProps`.
    optional: true
    syntax:
      content: 'firstFocusableSelector?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
    deprecated:
      content: Use `focusTrapZoneProps`.
  - uid: office-ui-fabric-react.IPanelProps.focusTrapZoneProps
    name: focusTrapZoneProps
    fullName: focusTrapZoneProps
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional props to pass to the FocusTrapZone component to manage focus in
      the panel.
    optional: true
    syntax:
      content: 'focusTrapZoneProps?: IFocusTrapZoneProps'
      return:
        type:
          - office-ui-fabric-react.IFocusTrapZoneProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.forceFocusInsideTrap
    name: forceFocusInsideTrap
    fullName: forceFocusInsideTrap
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Indicates whether Panel should force focus inside the focus trap zone.

      If not explicitly specified, behavior aligns with FocusTrapZone's default
      behavior.

      Deprecated, use `focusTrapZoneProps`.
    optional: true
    syntax:
      content: 'forceFocusInsideTrap?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
    deprecated:
      content: Use `focusTrapZoneProps`.
  - uid: office-ui-fabric-react.IPanelProps.hasCloseButton
    name: hasCloseButton
    fullName: hasCloseButton
    children: []
    langs:
      - typeScript
    type: property
    summary: Has the close button visible.
    optional: true
    syntax:
      content: 'hasCloseButton?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.headerClassName
    name: headerClassName
    fullName: headerClassName
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional parameter to provider the class name for header text
    optional: true
    syntax:
      content: 'headerClassName?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.headerText
    name: headerText
    fullName: headerText
    children: []
    langs:
      - typeScript
    type: property
    summary: Header text for the Panel.
    optional: true
    syntax:
      content: 'headerText?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.ignoreExternalFocusing
    name: ignoreExternalFocusing
    fullName: ignoreExternalFocusing
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Indicates if this Panel will ignore keeping track of HTMLElement that
      activated the Zone.

      Deprecated, use `focusTrapZoneProps`.
    optional: true
    syntax:
      content: 'ignoreExternalFocusing?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
    deprecated:
      content: Use `focusTrapZoneProps`.
  - uid: office-ui-fabric-react.IPanelProps.isBlocking
    name: isBlocking
    fullName: isBlocking
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether the panel uses a modal overlay or not
    optional: true
    syntax:
      content: 'isBlocking?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.isFooterAtBottom
    name: isFooterAtBottom
    fullName: isFooterAtBottom
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Determines if content should stretch to fill available space putting
      footer at the bottom of the page
    optional: true
    syntax:
      content: 'isFooterAtBottom?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.isHiddenOnDismiss
    name: isHiddenOnDismiss
    fullName: isHiddenOnDismiss
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Whether the panel is hidden on dismiss, instead of destroyed in the DOM.
      Protects the contents from being destroyed when the panel is dismissed.
    optional: true
    syntax:
      content: 'isHiddenOnDismiss?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.isLightDismiss
    name: isLightDismiss
    fullName: isLightDismiss
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether the panel can be light dismissed.
    optional: true
    syntax:
      content: 'isLightDismiss?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.isOpen
    name: isOpen
    fullName: isOpen
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether the panel is displayed.
    optional: true
    syntax:
      content: 'isOpen?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.layerProps
    name: layerProps
    fullName: layerProps
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional props to pass to the Layer component hosting the panel.
    optional: true
    syntax:
      content: 'layerProps?: ILayerProps'
      return:
        type:
          - office-ui-fabric-react.ILayerProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.onDismiss
    name: onDismiss
    fullName: onDismiss
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A callback function for when the panel is closed, before the animation
      completes.

      If the panel should NOT be dismissed based on some keyboard event, then
      simply call ev.preventDefault() on it
    optional: true
    syntax:
      content: 'onDismiss?: (ev?: SyntheticEvent<HTMLElement>) => void'
      return:
        type:
          - '(ev?: SyntheticEvent<HTMLElement>) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.onDismissed
    name: onDismissed
    fullName: onDismissed
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A callback function which is called after the Panel is dismissed and the
      animation is complete.
    optional: true
    syntax:
      content: 'onDismissed?: () => void'
      return:
        type:
          - () => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.onLightDismissClick
    name: onLightDismissClick
    fullName: onLightDismissClick
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional custom function to handle clicks outside the panel in
      lightdismiss mode
    optional: true
    syntax:
      content: 'onLightDismissClick?: () => void'
      return:
        type:
          - () => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.onOpen
    name: onOpen
    fullName: onOpen
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A callback function for when the Panel is opened, before the animation
      completes.
    optional: true
    syntax:
      content: 'onOpen?: () => void'
      return:
        type:
          - () => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.onOpened
    name: onOpened
    fullName: onOpened
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A callback function for when the Panel is opened, after the animation
      completes.
    optional: true
    syntax:
      content: 'onOpened?: () => void'
      return:
        type:
          - () => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.onOuterClick
    name: onOuterClick
    fullName: onOuterClick
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional custom function to handle clicks outside this component
    optional: true
    syntax:
      content: 'onOuterClick?: () => void'
      return:
        type:
          - () => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.onRenderBody
    name: onRenderBody
    fullName: onRenderBody
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional custom renderer for body region. Replaces any children passed
      into the component.
    optional: true
    syntax:
      content: 'onRenderBody?: IRenderFunction<IPanelProps>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.IPanelProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.onRenderFooter
    name: onRenderFooter
    fullName: onRenderFooter
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional custom renderer for footer region. Replaces sticky footer.
    optional: true
    syntax:
      content: 'onRenderFooter?: IRenderFunction<IPanelProps>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.IPanelProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.onRenderFooterContent
    name: onRenderFooterContent
    fullName: onRenderFooterContent
    children: []
    langs:
      - typeScript
    type: property
    summary: Custom renderer for content in the sticky footer
    optional: true
    syntax:
      content: 'onRenderFooterContent?: IRenderFunction<IPanelProps>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.IPanelProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.onRenderHeader
    name: onRenderHeader
    fullName: onRenderHeader
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional custom renderer for header region. Replaces current title
    optional: true
    syntax:
      content: 'onRenderHeader?: IPanelHeaderRenderer'
      return:
        type:
          - office-ui-fabric-react.IPanelHeaderRenderer
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.onRenderNavigation
    name: onRenderNavigation
    fullName: onRenderNavigation
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional custom renderer navigation region. Replaces the region that
      contains the close button.
    optional: true
    syntax:
      content: 'onRenderNavigation?: IRenderFunction<IPanelProps>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.IPanelProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.onRenderNavigationContent
    name: onRenderNavigationContent
    fullName: onRenderNavigationContent
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional custom renderer for content in the navigation region. Replaces
      current close button.
    optional: true
    syntax:
      content: 'onRenderNavigationContent?: IRenderFunction<IPanelProps>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.IPanelProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.styles
    name: styles
    fullName: styles
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules.
    optional: true
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IPanelStyleProps, IPanelStyles>'
      return:
        type:
          - >-
            IStyleFunctionOrObject<office-ui-fabric-react.IPanelStyleProps,
            office-ui-fabric-react.IPanelStyles>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.theme
    name: theme
    fullName: theme
    children: []
    langs:
      - typeScript
    type: property
    summary: Theme provided by High-Order Component.
    optional: true
    syntax:
      content: 'theme?: ITheme'
      return:
        type:
          - ITheme
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPanelProps.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: Type of the panel.
    optional: true
    syntax:
      content: 'type?: PanelType'
      return:
        type:
          - office-ui-fabric-react.PanelType
    package: office-ui-fabric-react
references:
  - uid: HTMLAttributes<office-ui-fabric-react.PanelBase>
    name: PanelBase>
    spec.typeScript:
      - name: HTMLAttributes<
        fullName: HTMLAttributes<
      - name: PanelBase
        fullName: PanelBase
        uid: office-ui-fabric-react.PanelBase
      - name: '>'
        fullName: '>'
  - uid: IRefObject<office-ui-fabric-react.IPanel>
    name: IPanel>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: IPanel
        fullName: IPanel
        uid: office-ui-fabric-react.IPanel
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.IFocusTrapZoneProps
    name: IFocusTrapZoneProps
    spec.typeScript:
      - name: IFocusTrapZoneProps
        fullName: IFocusTrapZoneProps
        uid: office-ui-fabric-react.IFocusTrapZoneProps
  - uid: office-ui-fabric-react.ILayerProps
    name: ILayerProps
    spec.typeScript:
      - name: ILayerProps
        fullName: ILayerProps
        uid: office-ui-fabric-react.ILayerProps
  - uid: IRenderFunction<office-ui-fabric-react.IPanelProps>
    name: IPanelProps>
    spec.typeScript:
      - name: IRenderFunction<
        fullName: IRenderFunction<
      - name: IPanelProps
        fullName: IPanelProps
        uid: office-ui-fabric-react.IPanelProps
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.IPanelHeaderRenderer
    name: IPanelHeaderRenderer
    spec.typeScript:
      - name: IPanelHeaderRenderer
        fullName: IPanelHeaderRenderer
        uid: office-ui-fabric-react.IPanelHeaderRenderer
  - uid: >-
      IStyleFunctionOrObject<office-ui-fabric-react.IPanelStyleProps,
      office-ui-fabric-react.IPanelStyles>
    name: IPanelStyles>
    spec.typeScript:
      - name: IStyleFunctionOrObject<
        fullName: IStyleFunctionOrObject<
      - name: IPanelStyleProps
        fullName: IPanelStyleProps
        uid: office-ui-fabric-react.IPanelStyleProps
      - name: ', '
        fullName: ', '
      - name: IPanelStyles
        fullName: IPanelStyles
        uid: office-ui-fabric-react.IPanelStyles
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.PanelType
    name: PanelType
    spec.typeScript:
      - name: PanelType
        fullName: PanelType
        uid: office-ui-fabric-react.PanelType
