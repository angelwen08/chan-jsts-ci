### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.GroupedListBase
    name: GroupedListBase
    fullName: GroupedListBase<SS>
    children:
      - office-ui-fabric-react.GroupedListBase.componentDidMount
      - office-ui-fabric-react.GroupedListBase.componentWillReceiveProps
      - office-ui-fabric-react.GroupedListBase.defaultProps
      - office-ui-fabric-react.GroupedListBase.forceUpdate
      - office-ui-fabric-react.GroupedListBase.getStartItemIndexInView
      - office-ui-fabric-react.GroupedListBase.constructor
      - office-ui-fabric-react.GroupedListBase.refs
      - office-ui-fabric-react.GroupedListBase.render
      - office-ui-fabric-react.GroupedListBase.scrollToIndex
      - office-ui-fabric-react.GroupedListBase.toggleCollapseAll
    syntax:
      content: ''
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: >-
        BaseComponent<office-ui-fabric-react.IGroupedListProps,
        office-ui-fabric-react.IGroupedListState>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.GroupedListBase.componentDidMount
    name: componentDidMount()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function componentDidMount()
      parameters: []
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.GroupedListBase.componentWillReceiveProps
    name: componentWillReceiveProps(IGroupedListProps)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function componentWillReceiveProps(newProps: IGroupedListProps)'
      parameters:
        - id: newProps
          type:
            - office-ui-fabric-react.IGroupedListProps
          description: ''
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.GroupedListBase.defaultProps
    name: defaultProps
    fullName: defaultProps
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static defaultProps: Object'
      return:
        type:
          - Object
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.GroupedListBase.forceUpdate
    name: forceUpdate()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function forceUpdate()
      parameters: []
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.GroupedListBase.getStartItemIndexInView
    name: getStartItemIndexInView()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getStartItemIndexInView()
      parameters: []
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.GroupedListBase.constructor
    name: GroupedListBase(IGroupedListProps)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new GroupedListBase(props: IGroupedListProps)'
      parameters:
        - id: props
          type:
            - office-ui-fabric-react.IGroupedListProps
          description: ''
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.GroupedListBase.refs
    name: refs
    fullName: refs
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'refs: [key: string]: React.ReactInstance'
      return:
        type:
          - '[key: string]: React.ReactInstance'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.GroupedListBase.render
    name: render()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function render()
      parameters: []
      return:
        type:
          - Element
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.GroupedListBase.scrollToIndex
    name: 'scrollToIndex(number, (itemIndex: number) => number, ScrollToMode)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function scrollToIndex(index: number, measureItem?: (itemIndex: number)
        => number, scrollToMode?: ScrollToMode)
      parameters:
        - id: index
          type:
            - number
          description: ''
        - id: measureItem
          type:
            - '(itemIndex: number) => number'
          description: ''
          optional: true
        - id: scrollToMode
          type:
            - ScrollToMode
          description: ''
          optional: true
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.GroupedListBase.toggleCollapseAll
    name: toggleCollapseAll(boolean)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function toggleCollapseAll(allCollapsed: boolean)'
      parameters:
        - id: allCollapsed
          type:
            - boolean
          description: ''
    package: office-ui-fabric-react
references:
  - uid: >-
      BaseComponent<office-ui-fabric-react.IGroupedListProps,
      office-ui-fabric-react.IGroupedListState>
    name: IGroupedListState>
    spec.typeScript:
      - name: BaseComponent<
        fullName: BaseComponent<
      - name: IGroupedListProps
        fullName: IGroupedListProps
        uid: office-ui-fabric-react.IGroupedListProps
      - name: ', '
        fullName: ', '
      - name: IGroupedListState
        fullName: IGroupedListState
        uid: office-ui-fabric-react.IGroupedListState
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.IGroupedListProps
    name: IGroupedListProps
    spec.typeScript:
      - name: IGroupedListProps
        fullName: IGroupedListProps
        uid: office-ui-fabric-react.IGroupedListProps
