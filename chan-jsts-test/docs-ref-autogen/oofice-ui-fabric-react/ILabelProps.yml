### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.ILabelProps
    name: ILabelProps
    fullName: ILabelProps
    children:
      - office-ui-fabric-react.ILabelProps.as
      - office-ui-fabric-react.ILabelProps.componentRef
      - office-ui-fabric-react.ILabelProps.disabled
      - office-ui-fabric-react.ILabelProps.required
      - office-ui-fabric-react.ILabelProps.styles
      - office-ui-fabric-react.ILabelProps.theme
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory Label}'
    extends:
      name: LabelHTMLAttributes<HTMLLabelElement>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ILabelProps.as
    name: as
    fullName: as
    children: []
    langs:
      - typeScript
    type: property
    summary: Render the root element as another type.
    optional: true
    syntax:
      content: 'as?: IComponentAs<AllHTMLAttributes<HTMLElement>>'
      return:
        type:
          - IComponentAs<AllHTMLAttributes<HTMLElement>>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ILabelProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional callback to access the ILabel interface. Use this instead of ref
      for accessing

      the public methods and properties of the component.
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<ILabel>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.ILabel>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ILabelProps.disabled
    name: disabled
    fullName: disabled
    children: []
    langs:
      - typeScript
    type: property
    summary: Renders the label as disabled.
    optional: true
    syntax:
      content: 'disabled?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ILabelProps.required
    name: required
    fullName: required
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether the associated form field is required or not
    optional: true
    syntax:
      content: 'required?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ILabelProps.styles
    name: styles
    fullName: styles
    children: []
    langs:
      - typeScript
    type: property
    summary: Styles for the label.
    optional: true
    syntax:
      content: 'styles?: IStyleFunctionOrObject<ILabelStyleProps, ILabelStyles>'
      return:
        type:
          - >-
            IStyleFunctionOrObject<office-ui-fabric-react.ILabelStyleProps,
            office-ui-fabric-react.ILabelStyles>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ILabelProps.theme
    name: theme
    fullName: theme
    children: []
    langs:
      - typeScript
    type: property
    summary: Theme provided by HOC.
    optional: true
    syntax:
      content: 'theme?: ITheme'
      return:
        type:
          - ITheme
    package: office-ui-fabric-react
references:
  - uid: IRefObject<office-ui-fabric-react.ILabel>
    name: ILabel>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: ILabel
        fullName: ILabel
        uid: office-ui-fabric-react.ILabel
      - name: '>'
        fullName: '>'
  - uid: >-
      IStyleFunctionOrObject<office-ui-fabric-react.ILabelStyleProps,
      office-ui-fabric-react.ILabelStyles>
    name: ILabelStyles>
    spec.typeScript:
      - name: IStyleFunctionOrObject<
        fullName: IStyleFunctionOrObject<
      - name: ILabelStyleProps
        fullName: ILabelStyleProps
        uid: office-ui-fabric-react.ILabelStyleProps
      - name: ', '
        fullName: ', '
      - name: ILabelStyles
        fullName: ILabelStyles
        uid: office-ui-fabric-react.ILabelStyles
      - name: '>'
        fullName: '>'
