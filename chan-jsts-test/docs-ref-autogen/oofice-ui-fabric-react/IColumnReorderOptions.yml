### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IColumnReorderOptions
    name: IColumnReorderOptions
    fullName: IColumnReorderOptions
    children:
      - office-ui-fabric-react.IColumnReorderOptions.frozenColumnCountFromEnd
      - office-ui-fabric-react.IColumnReorderOptions.frozenColumnCountFromStart
      - office-ui-fabric-react.IColumnReorderOptions.handleColumnReorder
      - office-ui-fabric-react.IColumnReorderOptions.onColumnDragStart
      - office-ui-fabric-react.IColumnReorderOptions.onColumnDrop
      - office-ui-fabric-react.IColumnReorderOptions.onDragEnd
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory DetailsList}'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumnReorderOptions.frozenColumnCountFromEnd
    name: frozenColumnCountFromEnd
    fullName: frozenColumnCountFromEnd
    children: []
    langs:
      - typeScript
    type: property
    summary: Specifies the number fixed columns from right
    optional: true
    syntax:
      content: 'frozenColumnCountFromEnd?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumnReorderOptions.frozenColumnCountFromStart
    name: frozenColumnCountFromStart
    fullName: frozenColumnCountFromStart
    children: []
    langs:
      - typeScript
    type: property
    summary: Specifies the number fixed columns from left(0th index)
    optional: true
    syntax:
      content: 'frozenColumnCountFromStart?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumnReorderOptions.handleColumnReorder
    name: handleColumnReorder
    fullName: handleColumnReorder
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Callback to handle the column reorder

      draggedIndex is the source column index, that need to be placed in
      targetIndex

      Deprecated, use `onColumnDrop` instead.
    optional: true
    syntax:
      content: >-
        handleColumnReorder?: (draggedIndex: number, targetIndex: number) =>
        void
      return:
        type:
          - '(draggedIndex: number, targetIndex: number) => void'
    package: office-ui-fabric-react
    deprecated:
      content: Use `onColumnDrop` instead.
  - uid: office-ui-fabric-react.IColumnReorderOptions.onColumnDragStart
    name: onColumnDragStart
    fullName: onColumnDragStart
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Callback to handle the column dragstart

      draggedStarted indicates that the column drag has been started on
      DetailsHeader
    optional: true
    syntax:
      content: 'onColumnDragStart?: (dragStarted: boolean) => void'
      return:
        type:
          - '(dragStarted: boolean) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumnReorderOptions.onColumnDrop
    name: onColumnDrop
    fullName: onColumnDrop
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Callback to handle the column reorder

      draggedIndex is the source column index, that need to be placed in
      targetIndex
    optional: true
    syntax:
      content: 'onColumnDrop?: (dragDropDetails: IColumnDragDropDetails) => void'
      return:
        type:
          - '(dragDropDetails: IColumnDragDropDetails) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumnReorderOptions.onDragEnd
    name: onDragEnd
    fullName: onDragEnd
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback to handle the column reorder
    optional: true
    syntax:
      content: 'onDragEnd?: (columnDropLocationDetails: ColumnDragEndLocation) => void'
      return:
        type:
          - '(columnDropLocationDetails: ColumnDragEndLocation) => void'
    package: office-ui-fabric-react
