### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.ISwatchColorPickerProps
    name: ISwatchColorPickerProps
    fullName: ISwatchColorPickerProps
    children:
      - office-ui-fabric-react.ISwatchColorPickerProps.cellBorderWidth
      - office-ui-fabric-react.ISwatchColorPickerProps.cellHeight
      - office-ui-fabric-react.ISwatchColorPickerProps.cellMargin
      - office-ui-fabric-react.ISwatchColorPickerProps.cellShape
      - office-ui-fabric-react.ISwatchColorPickerProps.cellWidth
      - office-ui-fabric-react.ISwatchColorPickerProps.className
      - office-ui-fabric-react.ISwatchColorPickerProps.colorCells
      - office-ui-fabric-react.ISwatchColorPickerProps.columnCount
      - office-ui-fabric-react.ISwatchColorPickerProps.disabled
      - >-
        office-ui-fabric-react.ISwatchColorPickerProps.doNotContainWithinFocusZone
      - office-ui-fabric-react.ISwatchColorPickerProps.focusOnHover
      - office-ui-fabric-react.ISwatchColorPickerProps.getColorGridCellStyles
      - office-ui-fabric-react.ISwatchColorPickerProps.id
      - office-ui-fabric-react.ISwatchColorPickerProps.isControlled
      - office-ui-fabric-react.ISwatchColorPickerProps.mouseLeaveParentSelector
      - office-ui-fabric-react.ISwatchColorPickerProps.onCellFocused
      - office-ui-fabric-react.ISwatchColorPickerProps.onCellHovered
      - office-ui-fabric-react.ISwatchColorPickerProps.onColorChanged
      - office-ui-fabric-react.ISwatchColorPickerProps.positionInSet
      - office-ui-fabric-react.ISwatchColorPickerProps.selectedId
      - office-ui-fabric-react.ISwatchColorPickerProps.setSize
      - >-
        office-ui-fabric-react.ISwatchColorPickerProps.shouldFocusCircularNavigate
      - office-ui-fabric-react.ISwatchColorPickerProps.styles
      - office-ui-fabric-react.ISwatchColorPickerProps.theme
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory SwatchColorPicker}'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISwatchColorPickerProps.cellBorderWidth
    name: cellBorderWidth
    fullName: cellBorderWidth
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Width of the border indicating a hovered/selected cell, in pixels

      If `cellWidth` is less than 24px, then default value is 2px. Otherwise it
      defaults to 4px.
    optional: true
    syntax:
      content: 'cellBorderWidth?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISwatchColorPickerProps.cellHeight
    name: cellHeight
    fullName: cellHeight
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Height of an individual cell, in pixels'
    optional: true
    syntax:
      content: 'cellHeight?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISwatchColorPickerProps.cellMargin
    name: cellMargin
    fullName: cellMargin
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The distance between cells, in pixels'
    optional: true
    syntax:
      content: 'cellMargin?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISwatchColorPickerProps.cellShape
    name: cellShape
    fullName: cellShape
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The shape of the color cells, defaults to circle'
    optional: true
    syntax:
      content: 'cellShape?: "circle" | "square"'
      return:
        type:
          - '"circle" | "square"'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISwatchColorPickerProps.cellWidth
    name: cellWidth
    fullName: cellWidth
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Width of an individual cell, in pixels'
    optional: true
    syntax:
      content: 'cellWidth?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISwatchColorPickerProps.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: Additional class name to provide on the root element
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISwatchColorPickerProps.colorCells
    name: colorCells
    fullName: colorCells
    children: []
    langs:
      - typeScript
    type: property
    summary: The color cells that will be made available to the user
    syntax:
      content: 'colorCells: IColorCellProps[]'
      return:
        type:
          - 'office-ui-fabric-react.IColorCellProps[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISwatchColorPickerProps.columnCount
    name: columnCount
    fullName: columnCount
    children: []
    langs:
      - typeScript
    type: property
    summary: the number of columns for the swatch color picker
    syntax:
      content: 'columnCount: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISwatchColorPickerProps.disabled
    name: disabled
    fullName: disabled
    children: []
    langs:
      - typeScript
    type: property
    summary: Is this swatch color picker disabled?
    optional: true
    syntax:
      content: 'disabled?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISwatchColorPickerProps.doNotContainWithinFocusZone
    name: doNotContainWithinFocusZone
    fullName: doNotContainWithinFocusZone
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      If true do not contain the grid inside of a FocusZone.
      If false contain the grid inside of a FocusZone.
    optional: true
    syntax:
      content: 'doNotContainWithinFocusZone?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISwatchColorPickerProps.focusOnHover
    name: focusOnHover
    fullName: focusOnHover
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Optional, whether to update focus when a cell is hovered.'
    optional: true
    syntax:
      content: 'focusOnHover?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISwatchColorPickerProps.getColorGridCellStyles
    name: getColorGridCellStyles
    fullName: getColorGridCellStyles
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional styles for the component.
    optional: true
    syntax:
      content: >-
        getColorGridCellStyles?:
        IStyleFunctionOrObject<IColorPickerGridCellStyleProps,
        IColorPickerGridCellStyles>
      return:
        type:
          - >-
            IStyleFunctionOrObject<office-ui-fabric-react.IColorPickerGridCellStyleProps,
            office-ui-fabric-react.IColorPickerGridCellStyles>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISwatchColorPickerProps.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: The id for the swatch color picker
    optional: true
    syntax:
      content: 'id?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISwatchColorPickerProps.isControlled
    name: isControlled
    fullName: isControlled
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Indicates whether the SwatchColorPicker is fully controlled.

      When true, the component will not set its internal state to track the
      selected color.

      Instead, the parent component will be responsible for handling state in
      the callbacks like

      onColorChanged.

      NOTE: This property is a temporary workaround to force the component to be
      fully controllable

      without breaking existing behavior
    optional: true
    syntax:
      content: 'isControlled?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISwatchColorPickerProps.mouseLeaveParentSelector
    name: mouseLeaveParentSelector
    fullName: mouseLeaveParentSelector
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Selector to focus on mouseLeave
      SHOULD ONLY BE USED IN CONJUNCTION WITH focusOnHover
    optional: true
    syntax:
      content: 'mouseLeaveParentSelector?: string | undefined'
      return:
        type:
          - string | undefined
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISwatchColorPickerProps.onCellFocused
    name: onCellFocused
    fullName: onCellFocused
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Callback issued when the user focuses a color cell.
      Note, if no id or color is given, cells are not longer being focused
    optional: true
    syntax:
      content: 'onCellFocused?: (id?: string, color?: string) => void'
      return:
        type:
          - '(id?: string, color?: string) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISwatchColorPickerProps.onCellHovered
    name: onCellHovered
    fullName: onCellHovered
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Callback issued when the user hovers over a color cell.
      Note, if no id or color is given, cells are not longer being hovered
    optional: true
    syntax:
      content: 'onCellHovered?: (id?: string, color?: string) => void'
      return:
        type:
          - '(id?: string, color?: string) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISwatchColorPickerProps.onColorChanged
    name: onColorChanged
    fullName: onColorChanged
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Callback issued when the user changes the color.
      Note, if no id or color is given, there is no selected cell
      (e.g. the user executed the currently selected cell to unselect it)
    optional: true
    syntax:
      content: 'onColorChanged?: (id?: string, color?: string) => void'
      return:
        type:
          - '(id?: string, color?: string) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISwatchColorPickerProps.positionInSet
    name: positionInSet
    fullName: positionInSet
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The optional position this grid is in the parent set (index in a parent
      menu, for example)
    optional: true
    syntax:
      content: 'positionInSet?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISwatchColorPickerProps.selectedId
    name: selectedId
    fullName: selectedId
    children: []
    langs:
      - typeScript
    type: property
    summary: The id of color cell that is currently selected
    optional: true
    syntax:
      content: 'selectedId?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISwatchColorPickerProps.setSize
    name: setSize
    fullName: setSize
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The optional size of the parent set (size of parent menu, for example)'
    optional: true
    syntax:
      content: 'setSize?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISwatchColorPickerProps.shouldFocusCircularNavigate
    name: shouldFocusCircularNavigate
    fullName: shouldFocusCircularNavigate
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Should focus cycle to the beginning of once the user navigates past the
      end (and vice versa).

      This prop is only relevant if doNotcontainWithinFocusZone is not true
    optional: true
    syntax:
      content: 'shouldFocusCircularNavigate?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISwatchColorPickerProps.styles
    name: styles
    fullName: styles
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional styles for the component.
    optional: true
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<ISwatchColorPickerStyleProps,
        ISwatchColorPickerStyles>
      return:
        type:
          - >-
            IStyleFunctionOrObject<office-ui-fabric-react.ISwatchColorPickerStyleProps,
            office-ui-fabric-react.ISwatchColorPickerStyles>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISwatchColorPickerProps.theme
    name: theme
    fullName: theme
    children: []
    langs:
      - typeScript
    type: property
    summary: Theme to apply to the component.
    optional: true
    syntax:
      content: 'theme?: ITheme'
      return:
        type:
          - ITheme
    package: office-ui-fabric-react
references:
  - uid: 'office-ui-fabric-react.IColorCellProps[]'
    name: 'IColorCellProps[]'
    spec.typeScript:
      - name: IColorCellProps
        fullName: IColorCellProps
        uid: office-ui-fabric-react.IColorCellProps
      - name: '[]'
        fullName: '[]'
  - uid: >-
      IStyleFunctionOrObject<office-ui-fabric-react.IColorPickerGridCellStyleProps,
      office-ui-fabric-react.IColorPickerGridCellStyles>
    name: IColorPickerGridCellStyles>
    spec.typeScript:
      - name: IStyleFunctionOrObject<
        fullName: IStyleFunctionOrObject<
      - name: IColorPickerGridCellStyleProps
        fullName: IColorPickerGridCellStyleProps
        uid: office-ui-fabric-react.IColorPickerGridCellStyleProps
      - name: ', '
        fullName: ', '
      - name: IColorPickerGridCellStyles
        fullName: IColorPickerGridCellStyles
        uid: office-ui-fabric-react.IColorPickerGridCellStyles
      - name: '>'
        fullName: '>'
  - uid: >-
      IStyleFunctionOrObject<office-ui-fabric-react.ISwatchColorPickerStyleProps,
      office-ui-fabric-react.ISwatchColorPickerStyles>
    name: ISwatchColorPickerStyles>
    spec.typeScript:
      - name: IStyleFunctionOrObject<
        fullName: IStyleFunctionOrObject<
      - name: ISwatchColorPickerStyleProps
        fullName: ISwatchColorPickerStyleProps
        uid: office-ui-fabric-react.ISwatchColorPickerStyleProps
      - name: ', '
        fullName: ', '
      - name: ISwatchColorPickerStyles
        fullName: ISwatchColorPickerStyles
        uid: office-ui-fabric-react.ISwatchColorPickerStyles
      - name: '>'
        fullName: '>'
