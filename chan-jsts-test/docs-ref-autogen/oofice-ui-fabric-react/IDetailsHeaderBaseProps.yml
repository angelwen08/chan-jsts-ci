### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IDetailsHeaderBaseProps
    name: IDetailsHeaderBaseProps
    fullName: IDetailsHeaderBaseProps
    children:
      - office-ui-fabric-react.IDetailsHeaderBaseProps.ariaLabel
      - >-
        office-ui-fabric-react.IDetailsHeaderBaseProps.ariaLabelForSelectAllCheckbox
      - >-
        office-ui-fabric-react.IDetailsHeaderBaseProps.ariaLabelForSelectionColumn
      - >-
        office-ui-fabric-react.IDetailsHeaderBaseProps.ariaLabelForToggleAllGroupsButton
      - office-ui-fabric-react.IDetailsHeaderBaseProps.className
      - office-ui-fabric-react.IDetailsHeaderBaseProps.collapseAllVisibility
      - office-ui-fabric-react.IDetailsHeaderBaseProps.columnReorderOptions
      - office-ui-fabric-react.IDetailsHeaderBaseProps.columnReorderProps
      - office-ui-fabric-react.IDetailsHeaderBaseProps.componentRef
      - office-ui-fabric-react.IDetailsHeaderBaseProps.isAllCollapsed
      - office-ui-fabric-react.IDetailsHeaderBaseProps.layoutMode
      - office-ui-fabric-react.IDetailsHeaderBaseProps.minimumPixelsForDrag
      - office-ui-fabric-react.IDetailsHeaderBaseProps.onColumnAutoResized
      - office-ui-fabric-react.IDetailsHeaderBaseProps.onColumnClick
      - office-ui-fabric-react.IDetailsHeaderBaseProps.onColumnContextMenu
      - office-ui-fabric-react.IDetailsHeaderBaseProps.onColumnIsSizingChanged
      - office-ui-fabric-react.IDetailsHeaderBaseProps.onColumnResized
      - >-
        office-ui-fabric-react.IDetailsHeaderBaseProps.onRenderColumnHeaderTooltip
      - office-ui-fabric-react.IDetailsHeaderBaseProps.onRenderDetailsCheckbox
      - office-ui-fabric-react.IDetailsHeaderBaseProps.onToggleCollapseAll
      - office-ui-fabric-react.IDetailsHeaderBaseProps.selectAllVisibility
      - office-ui-fabric-react.IDetailsHeaderBaseProps.styles
      - office-ui-fabric-react.IDetailsHeaderBaseProps.theme
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory DetailsList}'
    extends:
      name: ClassAttributes<office-ui-fabric-react.DetailsHeaderBase>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsHeaderBaseProps.ariaLabel
    name: ariaLabel
    fullName: ariaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: ariaLabel for the entire header
    optional: true
    syntax:
      content: 'ariaLabel?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: >-
      office-ui-fabric-react.IDetailsHeaderBaseProps.ariaLabelForSelectAllCheckbox
    name: ariaLabelForSelectAllCheckbox
    fullName: ariaLabelForSelectAllCheckbox
    children: []
    langs:
      - typeScript
    type: property
    summary: ariaLabel for the header checkbox that selects or deselects everything
    optional: true
    syntax:
      content: 'ariaLabelForSelectAllCheckbox?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsHeaderBaseProps.ariaLabelForSelectionColumn
    name: ariaLabelForSelectionColumn
    fullName: ariaLabelForSelectionColumn
    children: []
    langs:
      - typeScript
    type: property
    summary: ariaLabel for the selection column
    optional: true
    syntax:
      content: 'ariaLabelForSelectionColumn?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: >-
      office-ui-fabric-react.IDetailsHeaderBaseProps.ariaLabelForToggleAllGroupsButton
    name: ariaLabelForToggleAllGroupsButton
    fullName: ariaLabelForToggleAllGroupsButton
    children: []
    langs:
      - typeScript
    type: property
    summary: ariaLabel for expand/collapse group button
    optional: true
    syntax:
      content: 'ariaLabelForToggleAllGroupsButton?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsHeaderBaseProps.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: Overriding class name
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsHeaderBaseProps.collapseAllVisibility
    name: collapseAllVisibility
    fullName: collapseAllVisibility
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether to collapse for all visibility
    optional: true
    syntax:
      content: 'collapseAllVisibility?: CollapseAllVisibility'
      return:
        type:
          - office-ui-fabric-react.CollapseAllVisibility
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsHeaderBaseProps.columnReorderOptions
    name: columnReorderOptions
    fullName: columnReorderOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: Column reordering options
    optional: true
    syntax:
      content: 'columnReorderOptions?: IColumnReorderOptions'
      return:
        type:
          - office-ui-fabric-react.IColumnReorderOptions
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsHeaderBaseProps.columnReorderProps
    name: columnReorderProps
    fullName: columnReorderProps
    children: []
    langs:
      - typeScript
    type: property
    summary: Column reordering options
    optional: true
    syntax:
      content: 'columnReorderProps?: IColumnReorderHeaderProps'
      return:
        type:
          - office-ui-fabric-react.IColumnReorderHeaderProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsHeaderBaseProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: Ref to the component itself
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<IDetailsHeader>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.IDetailsHeader>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsHeaderBaseProps.isAllCollapsed
    name: isAllCollapsed
    fullName: isAllCollapsed
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether or not all is collapsed
    optional: true
    syntax:
      content: 'isAllCollapsed?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsHeaderBaseProps.layoutMode
    name: layoutMode
    fullName: layoutMode
    children: []
    langs:
      - typeScript
    type: property
    summary: Layout mode - fixedColumns or justified
    syntax:
      content: 'layoutMode: DetailsListLayoutMode'
      return:
        type:
          - office-ui-fabric-react.DetailsListLayoutMode
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsHeaderBaseProps.minimumPixelsForDrag
    name: minimumPixelsForDrag
    fullName: minimumPixelsForDrag
    children: []
    langs:
      - typeScript
    type: property
    summary: Minimum pixels to be moved before dragging is registered
    optional: true
    syntax:
      content: 'minimumPixelsForDrag?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsHeaderBaseProps.onColumnAutoResized
    name: onColumnAutoResized
    fullName: onColumnAutoResized
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback for when column is automatically resized
    optional: true
    syntax:
      content: 'onColumnAutoResized?: (column: IColumn, columnIndex: number) => void'
      return:
        type:
          - '(column: IColumn, columnIndex: number) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsHeaderBaseProps.onColumnClick
    name: onColumnClick
    fullName: onColumnClick
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback for when the column is clicked
    optional: true
    syntax:
      content: 'onColumnClick?: (ev: MouseEvent<HTMLElement>, column: IColumn) => void'
      return:
        type:
          - '(ev: MouseEvent<HTMLElement>, column: IColumn) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsHeaderBaseProps.onColumnContextMenu
    name: onColumnContextMenu
    fullName: onColumnContextMenu
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback for when the column needs to show a context menu
    optional: true
    syntax:
      content: >-
        onColumnContextMenu?: (column: IColumn, ev: MouseEvent<HTMLElement>) =>
        void
      return:
        type:
          - '(column: IColumn, ev: MouseEvent<HTMLElement>) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsHeaderBaseProps.onColumnIsSizingChanged
    name: onColumnIsSizingChanged
    fullName: onColumnIsSizingChanged
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback for when column sizing has changed
    optional: true
    syntax:
      content: 'onColumnIsSizingChanged?: (column: IColumn, isSizing: boolean) => void'
      return:
        type:
          - '(column: IColumn, isSizing: boolean) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsHeaderBaseProps.onColumnResized
    name: onColumnResized
    fullName: onColumnResized
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback for when column is resized
    optional: true
    syntax:
      content: >-
        onColumnResized?: (column: IColumn, newWidth: number, columnIndex:
        number) => void
      return:
        type:
          - '(column: IColumn, newWidth: number, columnIndex: number) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsHeaderBaseProps.onRenderColumnHeaderTooltip
    name: onRenderColumnHeaderTooltip
    fullName: onRenderColumnHeaderTooltip
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback to render a tooltip for the column header
    optional: true
    syntax:
      content: 'onRenderColumnHeaderTooltip?: IRenderFunction<ITooltipHostProps>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.ITooltipHostProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsHeaderBaseProps.onRenderDetailsCheckbox
    name: onRenderDetailsCheckbox
    fullName: onRenderDetailsCheckbox
    children: []
    langs:
      - typeScript
    type: property
    summary: 'If provided, can be used to render a custom checkbox'
    optional: true
    syntax:
      content: 'onRenderDetailsCheckbox?: IRenderFunction<IDetailsCheckboxProps>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.IDetailsCheckboxProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsHeaderBaseProps.onToggleCollapseAll
    name: onToggleCollapseAll
    fullName: onToggleCollapseAll
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback for when collapse all is toggled
    optional: true
    syntax:
      content: 'onToggleCollapseAll?: (isAllCollapsed: boolean) => void'
      return:
        type:
          - '(isAllCollapsed: boolean) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsHeaderBaseProps.selectAllVisibility
    name: selectAllVisibility
    fullName: selectAllVisibility
    children: []
    langs:
      - typeScript
    type: property
    summary: Select all button visibility
    optional: true
    syntax:
      content: 'selectAllVisibility?: SelectAllVisibility'
      return:
        type:
          - office-ui-fabric-react.SelectAllVisibility
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsHeaderBaseProps.styles
    name: styles
    fullName: styles
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules.
    optional: true
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<IDetailsHeaderStyleProps,
        IDetailsHeaderStyles>
      return:
        type:
          - >-
            IStyleFunctionOrObject<office-ui-fabric-react.IDetailsHeaderStyleProps,
            office-ui-fabric-react.IDetailsHeaderStyles>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsHeaderBaseProps.theme
    name: theme
    fullName: theme
    children: []
    langs:
      - typeScript
    type: property
    summary: Theme from the Higher Order Component
    optional: true
    syntax:
      content: 'theme?: ITheme'
      return:
        type:
          - ITheme
    package: office-ui-fabric-react
references:
  - uid: ClassAttributes<office-ui-fabric-react.DetailsHeaderBase>
    name: DetailsHeaderBase>
    spec.typeScript:
      - name: ClassAttributes<
        fullName: ClassAttributes<
      - name: DetailsHeaderBase
        fullName: DetailsHeaderBase
        uid: office-ui-fabric-react.DetailsHeaderBase
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.CollapseAllVisibility
    name: CollapseAllVisibility
    spec.typeScript:
      - name: CollapseAllVisibility
        fullName: CollapseAllVisibility
        uid: office-ui-fabric-react.CollapseAllVisibility
  - uid: office-ui-fabric-react.IColumnReorderOptions
    name: IColumnReorderOptions
    spec.typeScript:
      - name: IColumnReorderOptions
        fullName: IColumnReorderOptions
        uid: office-ui-fabric-react.IColumnReorderOptions
  - uid: office-ui-fabric-react.IColumnReorderHeaderProps
    name: IColumnReorderHeaderProps
    spec.typeScript:
      - name: IColumnReorderHeaderProps
        fullName: IColumnReorderHeaderProps
        uid: office-ui-fabric-react.IColumnReorderHeaderProps
  - uid: IRefObject<office-ui-fabric-react.IDetailsHeader>
    name: IDetailsHeader>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: IDetailsHeader
        fullName: IDetailsHeader
        uid: office-ui-fabric-react.IDetailsHeader
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.DetailsListLayoutMode
    name: DetailsListLayoutMode
    spec.typeScript:
      - name: DetailsListLayoutMode
        fullName: DetailsListLayoutMode
        uid: office-ui-fabric-react.DetailsListLayoutMode
  - uid: IRenderFunction<office-ui-fabric-react.ITooltipHostProps>
    name: ITooltipHostProps>
    spec.typeScript:
      - name: IRenderFunction<
        fullName: IRenderFunction<
      - name: ITooltipHostProps
        fullName: ITooltipHostProps
        uid: office-ui-fabric-react.ITooltipHostProps
      - name: '>'
        fullName: '>'
  - uid: IRenderFunction<office-ui-fabric-react.IDetailsCheckboxProps>
    name: IDetailsCheckboxProps>
    spec.typeScript:
      - name: IRenderFunction<
        fullName: IRenderFunction<
      - name: IDetailsCheckboxProps
        fullName: IDetailsCheckboxProps
        uid: office-ui-fabric-react.IDetailsCheckboxProps
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.SelectAllVisibility
    name: SelectAllVisibility
    spec.typeScript:
      - name: SelectAllVisibility
        fullName: SelectAllVisibility
        uid: office-ui-fabric-react.SelectAllVisibility
  - uid: >-
      IStyleFunctionOrObject<office-ui-fabric-react.IDetailsHeaderStyleProps,
      office-ui-fabric-react.IDetailsHeaderStyles>
    name: IDetailsHeaderStyles>
    spec.typeScript:
      - name: IStyleFunctionOrObject<
        fullName: IStyleFunctionOrObject<
      - name: IDetailsHeaderStyleProps
        fullName: IDetailsHeaderStyleProps
        uid: office-ui-fabric-react.IDetailsHeaderStyleProps
      - name: ', '
        fullName: ', '
      - name: IDetailsHeaderStyles
        fullName: IDetailsHeaderStyles
        uid: office-ui-fabric-react.IDetailsHeaderStyles
      - name: '>'
        fullName: '>'
