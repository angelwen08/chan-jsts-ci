### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IColumn
    name: IColumn
    fullName: IColumn
    children:
      - office-ui-fabric-react.IColumn.ariaLabel
      - office-ui-fabric-react.IColumn.calculatedWidth
      - office-ui-fabric-react.IColumn.className
      - office-ui-fabric-react.IColumn.columnActionsMode
      - office-ui-fabric-react.IColumn.currentWidth
      - office-ui-fabric-react.IColumn.data
      - office-ui-fabric-react.IColumn.fieldName
      - office-ui-fabric-react.IColumn.filterAriaLabel
      - office-ui-fabric-react.IColumn.groupAriaLabel
      - office-ui-fabric-react.IColumn.headerClassName
      - office-ui-fabric-react.IColumn.iconClassName
      - office-ui-fabric-react.IColumn.iconName
      - office-ui-fabric-react.IColumn.isCollapsable
      - office-ui-fabric-react.IColumn.isCollapsible
      - office-ui-fabric-react.IColumn.isFiltered
      - office-ui-fabric-react.IColumn.isGrouped
      - office-ui-fabric-react.IColumn.isIconOnly
      - office-ui-fabric-react.IColumn.isMenuOpen
      - office-ui-fabric-react.IColumn.isMultiline
      - office-ui-fabric-react.IColumn.isPadded
      - office-ui-fabric-react.IColumn.isResizable
      - office-ui-fabric-react.IColumn.isRowHeader
      - office-ui-fabric-react.IColumn.isSorted
      - office-ui-fabric-react.IColumn.isSortedDescending
      - office-ui-fabric-react.IColumn.key
      - office-ui-fabric-react.IColumn.maxWidth
      - office-ui-fabric-react.IColumn.minWidth
      - office-ui-fabric-react.IColumn.name
      - office-ui-fabric-react.IColumn.onColumnClick
      - office-ui-fabric-react.IColumn.onColumnContextMenu
      - office-ui-fabric-react.IColumn.onColumnResize
      - office-ui-fabric-react.IColumn.onRender
      - office-ui-fabric-react.IColumn.onRenderDivider
      - office-ui-fabric-react.IColumn.sortAscendingAriaLabel
      - office-ui-fabric-react.IColumn.sortDescendingAriaLabel
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory DetailsList}'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.ariaLabel
    name: ariaLabel
    fullName: ariaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional accessibility label (aria-label) attribute that will be stamped
      on to the element.

      If none is specified, the arai-label attribute will contain the column
      name
    optional: true
    syntax:
      content: 'ariaLabel?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.calculatedWidth
    name: calculatedWidth
    fullName: calculatedWidth
    children: []
    langs:
      - typeScript
    type: property
    summary: Internal only value.
    optional: true
    syntax:
      content: 'calculatedWidth?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: An optional class name to stick on the column cell within each row.
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.columnActionsMode
    name: columnActionsMode
    fullName: columnActionsMode
    children: []
    langs:
      - typeScript
    type: property
    summary: Defines how the column's header should render.
    optional: true
    syntax:
      content: 'columnActionsMode?: ColumnActionsMode'
      return:
        type:
          - office-ui-fabric-react.ColumnActionsMode
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.currentWidth
    name: currentWidth
    fullName: currentWidth
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Internal only value.

      Remembers the actual witdh of the column on any case.

      On the other hand, calculatedWidth is only saved when it's defined by
      user, not for justified calculations.
    optional: true
    syntax:
      content: 'currentWidth?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.data
    name: data
    fullName: data
    children: []
    langs:
      - typeScript
    type: property
    summary: Arbitrary data passthrough which can be used by the caller.
    optional: true
    syntax:
      content: 'data?: any'
      return:
        type:
          - any
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.fieldName
    name: fieldName
    fullName: fieldName
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The field to pull the text value from for the column. This can be null if
      a custom

      onRender method is provided.
    optional: true
    syntax:
      content: 'fieldName?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.filterAriaLabel
    name: filterAriaLabel
    fullName: filterAriaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: ARIA label for the status of this column when filtered.
    optional: true
    syntax:
      content: 'filterAriaLabel?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.groupAriaLabel
    name: groupAriaLabel
    fullName: groupAriaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: ARIA label for the status of this column when grouped.
    optional: true
    syntax:
      content: 'groupAriaLabel?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.headerClassName
    name: headerClassName
    fullName: headerClassName
    children: []
    langs:
      - typeScript
    type: property
    summary: An optional class name to stick on the column cell within each header.
    optional: true
    syntax:
      content: 'headerClassName?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.iconClassName
    name: iconClassName
    fullName: iconClassName
    children: []
    langs:
      - typeScript
    type: property
    summary: Class name to add to the Icon component.
    optional: true
    syntax:
      content: 'iconClassName?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.iconName
    name: iconName
    fullName: iconName
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional iconName to use for the column header.
    optional: true
    syntax:
      content: 'iconName?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.isCollapsable
    name: isCollapsable
    fullName: isCollapsable
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If specified will allow the column to be collapsed when rendered in
      justified layout.
    optional: true
    syntax:
      content: 'isCollapsable?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
    deprecated:
      content: Use `isCollapsible`
  - uid: office-ui-fabric-react.IColumn.isCollapsible
    name: isCollapsible
    fullName: isCollapsible
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If specified will allow the column to be collapsed when rendered in
      justified layout.
    optional: true
    syntax:
      content: 'isCollapsible?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.isFiltered
    name: isFiltered
    fullName: isFiltered
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Determines if the column is filtered, and if so shows a filter icon.'
    optional: true
    syntax:
      content: 'isFiltered?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.isGrouped
    name: isGrouped
    fullName: isGrouped
    children: []
    langs:
      - typeScript
    type: property
    summary: If set will show a grouped icon next to the column header name.
    optional: true
    syntax:
      content: 'isGrouped?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.isIconOnly
    name: isIconOnly
    fullName: isIconOnly
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Whether or not only the icon is used in the column header.

      Set this to true so the column name and dropdown chevron are not
      displayed.
    optional: true
    syntax:
      content: 'isIconOnly?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.isMenuOpen
    name: isMenuOpen
    fullName: isMenuOpen
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Indicates whether a dropdown menu is open so that the appropriate ARIA
      attributes are rendered.
    optional: true
    syntax:
      content: 'isMenuOpen?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.isMultiline
    name: isMultiline
    fullName: isMultiline
    children: []
    langs:
      - typeScript
    type: property
    summary: Determines if the column can render multi-line text.
    optional: true
    syntax:
      content: 'isMultiline?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.isPadded
    name: isPadded
    fullName: isPadded
    children: []
    langs:
      - typeScript
    type: property
    summary: 'If set, will add additional LTR padding-right to column and cells.'
    optional: true
    syntax:
      content: 'isPadded?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.isResizable
    name: isResizable
    fullName: isResizable
    children: []
    langs:
      - typeScript
    type: property
    summary: Determines if the column can be resized.
    optional: true
    syntax:
      content: 'isResizable?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.isRowHeader
    name: isRowHeader
    fullName: isRowHeader
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional flag on whether the column is a header for the given row. There
      should be only one column with

      row header set to true.
    optional: true
    syntax:
      content: 'isRowHeader?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.isSorted
    name: isSorted
    fullName: isSorted
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Determines if the column is currently sorted. Renders a sort arrow in the
      column header.
    optional: true
    syntax:
      content: 'isSorted?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.isSortedDescending
    name: isSortedDescending
    fullName: isSortedDescending
    children: []
    langs:
      - typeScript
    type: property
    summary: Determines if the arrow is pointed down (descending) or up.
    optional: true
    syntax:
      content: 'isSortedDescending?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.key
    name: key
    fullName: key
    children: []
    langs:
      - typeScript
    type: property
    summary: A unique key for identifying the column.
    syntax:
      content: 'key: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.maxWidth
    name: maxWidth
    fullName: maxWidth
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Maximum width for the column, if stretching is allowed in justified
      scenarios.
    optional: true
    syntax:
      content: 'maxWidth?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.minWidth
    name: minWidth
    fullName: minWidth
    children: []
    langs:
      - typeScript
    type: property
    summary: Minimum width for the column.
    syntax:
      content: 'minWidth: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.name
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: Name to render on the column header.
    syntax:
      content: 'name: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.onColumnClick
    name: onColumnClick
    fullName: onColumnClick
    children: []
    langs:
      - typeScript
    type: property
    summary: 'If provided, will be executed when the user clicks on the column header.'
    optional: true
    syntax:
      content: 'onColumnClick?: (ev: MouseEvent<HTMLElement>, column: IColumn) => void'
      return:
        type:
          - '(ev: MouseEvent<HTMLElement>, column: IColumn) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.onColumnContextMenu
    name: onColumnContextMenu
    fullName: onColumnContextMenu
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If provided, will be executed when the user accesses the contextmenu on a
      column header.
    optional: true
    syntax:
      content: >-
        onColumnContextMenu?: (column?: IColumn, ev?: MouseEvent<HTMLElement>)
        => void
      return:
        type:
          - '(column?: IColumn, ev?: MouseEvent<HTMLElement>) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.onColumnResize
    name: onColumnResize
    fullName: onColumnResize
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If provided, will be executed when the column is resized with the column's
      current width.

      Prefer this callback over `DetailsList` `onColumnResize` if you require
      the `IColumn` to

      report its width after every resize event. Consider debouncing the
      callback if resize events

      occur frequently.
    optional: true
    syntax:
      content: 'onColumnResize?: (width?: number) => void'
      return:
        type:
          - '(width?: number) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.onRender
    name: onRender
    fullName: onRender
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If provided uses this method to render custom cell content, rather than
      the default text rendering.
    optional: true
    syntax:
      content: 'onRender?: (item?: any, index?: number, column?: IColumn) => any'
      return:
        type:
          - '(item?: any, index?: number, column?: IColumn) => any'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.onRenderDivider
    name: onRenderDivider
    fullName: onRenderDivider
    children: []
    langs:
      - typeScript
    type: property
    summary: 'If provider, can be used to render a custom column header divider'
    optional: true
    syntax:
      content: 'onRenderDivider?: IRenderFunction<IDetailsColumnProps>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.IDetailsColumnProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.sortAscendingAriaLabel
    name: sortAscendingAriaLabel
    fullName: sortAscendingAriaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: ARIA label for the sort order of this column when sorted ascending.
    optional: true
    syntax:
      content: 'sortAscendingAriaLabel?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColumn.sortDescendingAriaLabel
    name: sortDescendingAriaLabel
    fullName: sortDescendingAriaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: ARIA label for the sort order of this column when sorted descending.
    optional: true
    syntax:
      content: 'sortDescendingAriaLabel?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
references:
  - uid: office-ui-fabric-react.ColumnActionsMode
    name: ColumnActionsMode
    spec.typeScript:
      - name: ColumnActionsMode
        fullName: ColumnActionsMode
        uid: office-ui-fabric-react.ColumnActionsMode
  - uid: IRenderFunction<office-ui-fabric-react.IDetailsColumnProps>
    name: IDetailsColumnProps>
    spec.typeScript:
      - name: IRenderFunction<
        fullName: IRenderFunction<
      - name: IDetailsColumnProps
        fullName: IDetailsColumnProps
        uid: office-ui-fabric-react.IDetailsColumnProps
      - name: '>'
        fullName: '>'
