### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.BaseSelectedItemsList
    name: BaseSelectedItemsList
    fullName: BaseSelectedItemsList<T>
    children:
      - office-ui-fabric-react.BaseSelectedItemsList.addItems
      - office-ui-fabric-react.BaseSelectedItemsList.constructor
      - office-ui-fabric-react.BaseSelectedItemsList.componentDidMount
      - office-ui-fabric-react.BaseSelectedItemsList.componentWillReceiveProps
      - office-ui-fabric-react.BaseSelectedItemsList.componentWillUpdate
      - office-ui-fabric-react.BaseSelectedItemsList.hasSelectedItems
      - office-ui-fabric-react.BaseSelectedItemsList.highlightedItems
      - office-ui-fabric-react.BaseSelectedItemsList.items
      - office-ui-fabric-react.BaseSelectedItemsList.onCopy
      - office-ui-fabric-react.BaseSelectedItemsList.removeItem
      - office-ui-fabric-react.BaseSelectedItemsList.removeItemAt
      - office-ui-fabric-react.BaseSelectedItemsList.removeItems
      - office-ui-fabric-react.BaseSelectedItemsList.removeSelectedItems
      - office-ui-fabric-react.BaseSelectedItemsList.render
      - office-ui-fabric-react.BaseSelectedItemsList.replaceItem
      - office-ui-fabric-react.BaseSelectedItemsList.unselectAll
      - office-ui-fabric-react.BaseSelectedItemsList.updateItems
    syntax:
      content: ''
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: 'BaseComponent<P, office-ui-fabric-react.IBaseSelectedItemsListState<T>>'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseSelectedItemsList.addItems
    name: addItems
    fullName: addItems
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'addItems: (items: T[]) => void'
      return:
        type:
          - '(items: T[]) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseSelectedItemsList.constructor
    name: BaseSelectedItemsList(P)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new BaseSelectedItemsList(basePickerProps: P)'
      parameters:
        - id: basePickerProps
          type:
            - P
          description: ''
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseSelectedItemsList.componentDidMount
    name: componentDidMount()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function componentDidMount()
      parameters: []
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseSelectedItemsList.componentWillReceiveProps
    name: componentWillReceiveProps(P)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function componentWillReceiveProps(newProps: P)'
      parameters:
        - id: newProps
          type:
            - P
          description: ''
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseSelectedItemsList.componentWillUpdate
    name: 'componentWillUpdate(P, IBaseSelectedItemsListState)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function componentWillUpdate(newProps: P, newState:
        IBaseSelectedItemsListState)
      parameters:
        - id: newProps
          type:
            - P
          description: ''
        - id: newState
          type:
            - office-ui-fabric-react.IBaseSelectedItemsListState
          description: ''
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseSelectedItemsList.hasSelectedItems
    name: hasSelectedItems()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function hasSelectedItems()
      parameters: []
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseSelectedItemsList.highlightedItems
    name: highlightedItems()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function highlightedItems()
      parameters: []
      return:
        type:
          - 'T[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseSelectedItemsList.items
    name: items
    fullName: items
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'items: T[]'
      return:
        type:
          - 'T[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseSelectedItemsList.onCopy
    name: onCopy
    fullName: onCopy
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onCopy: (ev: ClipboardEvent<HTMLElement>) => void'
      return:
        type:
          - '(ev: ClipboardEvent<HTMLElement>) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseSelectedItemsList.removeItem
    name: removeItem
    fullName: removeItem
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'removeItem: (item: T) => void'
      return:
        type:
          - '(item: T) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseSelectedItemsList.removeItemAt
    name: removeItemAt
    fullName: removeItemAt
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'removeItemAt: (index: number) => void'
      return:
        type:
          - '(index: number) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseSelectedItemsList.removeItems
    name: removeItems
    fullName: removeItems
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'removeItems: (itemsToRemove: any[]) => void'
      return:
        type:
          - '(itemsToRemove: any[]) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseSelectedItemsList.removeSelectedItems
    name: removeSelectedItems()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function removeSelectedItems()
      parameters: []
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseSelectedItemsList.render
    name: render()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function render()
      parameters: []
      return:
        type:
          - any
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseSelectedItemsList.replaceItem
    name: replaceItem
    fullName: replaceItem
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'replaceItem: (itemToReplace: T, itemsToReplaceWith: T[]) => void'
      return:
        type:
          - '(itemToReplace: T, itemsToReplaceWith: T[]) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseSelectedItemsList.unselectAll
    name: unselectAll()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function unselectAll()
      parameters: []
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseSelectedItemsList.updateItems
    name: 'updateItems(T[], number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Controls what happens whenever there is an action that impacts the
      selected items.

      If selectedItems is provided as a property then this will act as a
      controlled component and it will not update it's own state.
    syntax:
      content: 'function updateItems(items: T[], focusIndex?: number)'
      parameters:
        - id: items
          type:
            - 'T[]'
          description: ''
        - id: focusIndex
          type:
            - number
          description: ''
          optional: true
    package: office-ui-fabric-react
references:
  - uid: 'BaseComponent<P, office-ui-fabric-react.IBaseSelectedItemsListState<T>>'
    name: IBaseSelectedItemsListState<T>>
    spec.typeScript:
      - name: 'BaseComponent<P, '
        fullName: 'BaseComponent<P, '
      - name: IBaseSelectedItemsListState
        fullName: IBaseSelectedItemsListState
        uid: office-ui-fabric-react.IBaseSelectedItemsListState
      - name: <T>>
        fullName: <T>>
  - uid: office-ui-fabric-react.IBaseSelectedItemsListState
    name: IBaseSelectedItemsListState
    spec.typeScript:
      - name: IBaseSelectedItemsListState
        fullName: IBaseSelectedItemsListState
        uid: office-ui-fabric-react.IBaseSelectedItemsListState
