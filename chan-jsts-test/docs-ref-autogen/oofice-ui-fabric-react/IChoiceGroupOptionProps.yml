### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IChoiceGroupOptionProps
    name: IChoiceGroupOptionProps
    fullName: IChoiceGroupOptionProps
    children:
      - office-ui-fabric-react.IChoiceGroupOptionProps.componentRef
      - office-ui-fabric-react.IChoiceGroupOptionProps.focused
      - office-ui-fabric-react.IChoiceGroupOptionProps.name
      - office-ui-fabric-react.IChoiceGroupOptionProps.onBlur
      - office-ui-fabric-react.IChoiceGroupOptionProps.onChange
      - office-ui-fabric-react.IChoiceGroupOptionProps.onFocus
      - office-ui-fabric-react.IChoiceGroupOptionProps.required
      - office-ui-fabric-react.IChoiceGroupOptionProps.theme
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory ChoiceGroup}'
    extends:
      name: office-ui-fabric-react.IChoiceGroupOption
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IChoiceGroupOptionProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional callback to access the IChoiceGroup interface. Use this instead
      of ref for accessing

      the public methods and properties of the component.
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<IChoiceGroupOption>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.IChoiceGroupOption>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IChoiceGroupOptionProps.focused
    name: focused
    fullName: focused
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Indicates if the ChoiceGroupOption should appear focused, visually'
    optional: true
    syntax:
      content: 'focused?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IChoiceGroupOptionProps.name
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      This value is used to group each ChoiceGroupOption into the same logical
      ChoiceGroup
    optional: true
    syntax:
      content: 'name?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IChoiceGroupOptionProps.onBlur
    name: onBlur
    fullName: onBlur
    children: []
    langs:
      - typeScript
    type: property
    summary: A callback for receiving a notification when the choice has lost focus.
    optional: true
    syntax:
      content: >-
        onBlur?: (ev: FocusEvent<HTMLElement>, props?: IChoiceGroupOption) =>
        void
      return:
        type:
          - '(ev: FocusEvent<HTMLElement>, props?: IChoiceGroupOption) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IChoiceGroupOptionProps.onChange
    name: onChange
    fullName: onChange
    children: []
    langs:
      - typeScript
    type: property
    summary: A callback for receiving a notification when the choice has been changed.
    optional: true
    syntax:
      content: 'onChange?: OnChangeCallback'
      return:
        type:
          - office-ui-fabric-react.OnChangeCallback
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IChoiceGroupOptionProps.onFocus
    name: onFocus
    fullName: onFocus
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A callback for receiving a notification when the choice has received
      focus.
    optional: true
    syntax:
      content: 'onFocus?: OnFocusCallback'
      return:
        type:
          - office-ui-fabric-react.OnFocusCallback
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IChoiceGroupOptionProps.required
    name: required
    fullName: required
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If true, it specifies that an option must be selected in the ChoiceGroup
      before submitting the form
    optional: true
    syntax:
      content: 'required?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IChoiceGroupOptionProps.theme
    name: theme
    fullName: theme
    children: []
    langs:
      - typeScript
    type: property
    summary: Theme (provided through customization.)
    optional: true
    syntax:
      content: 'theme?: ITheme'
      return:
        type:
          - ITheme
    package: office-ui-fabric-react
references:
  - uid: office-ui-fabric-react.IChoiceGroupOption
    name: IChoiceGroupOption
    spec.typeScript:
      - name: IChoiceGroupOption
        fullName: IChoiceGroupOption
        uid: office-ui-fabric-react.IChoiceGroupOption
  - uid: IRefObject<office-ui-fabric-react.IChoiceGroupOption>
    name: IChoiceGroupOption>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: IChoiceGroupOption
        fullName: IChoiceGroupOption
        uid: office-ui-fabric-react.IChoiceGroupOption
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.OnChangeCallback
    name: OnChangeCallback
    spec.typeScript:
      - name: OnChangeCallback
        fullName: OnChangeCallback
        uid: office-ui-fabric-react.OnChangeCallback
  - uid: office-ui-fabric-react.OnFocusCallback
    name: OnFocusCallback
    spec.typeScript:
      - name: OnFocusCallback
        fullName: OnFocusCallback
        uid: office-ui-fabric-react.OnFocusCallback
