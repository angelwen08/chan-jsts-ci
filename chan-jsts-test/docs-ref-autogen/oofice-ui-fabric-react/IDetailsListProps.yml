### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IDetailsListProps
    name: IDetailsListProps
    fullName: IDetailsListProps
    children:
      - office-ui-fabric-react.IDetailsListProps.ariaLabel
      - office-ui-fabric-react.IDetailsListProps.ariaLabelForGrid
      - office-ui-fabric-react.IDetailsListProps.ariaLabelForListHeader
      - office-ui-fabric-react.IDetailsListProps.ariaLabelForSelectAllCheckbox
      - office-ui-fabric-react.IDetailsListProps.ariaLabelForSelectionColumn
      - office-ui-fabric-react.IDetailsListProps.cellStyleProps
      - office-ui-fabric-react.IDetailsListProps.checkboxCellClassName
      - office-ui-fabric-react.IDetailsListProps.checkboxVisibility
      - office-ui-fabric-react.IDetailsListProps.checkButtonAriaLabel
      - office-ui-fabric-react.IDetailsListProps.className
      - office-ui-fabric-react.IDetailsListProps.columnReorderOptions
      - office-ui-fabric-react.IDetailsListProps.columns
      - office-ui-fabric-react.IDetailsListProps.compact
      - office-ui-fabric-react.IDetailsListProps.componentRef
      - office-ui-fabric-react.IDetailsListProps.constrainMode
      - office-ui-fabric-react.IDetailsListProps.disableSelectionZone
      - office-ui-fabric-react.IDetailsListProps.dragDropEvents
      - office-ui-fabric-react.IDetailsListProps.enableShimmer
      - office-ui-fabric-react.IDetailsListProps.enterModalSelectionOnTouch
      - office-ui-fabric-react.IDetailsListProps.getGroupHeight
      - office-ui-fabric-react.IDetailsListProps.getKey
      - office-ui-fabric-react.IDetailsListProps.getRowAriaDescribedBy
      - office-ui-fabric-react.IDetailsListProps.getRowAriaLabel
      - office-ui-fabric-react.IDetailsListProps.groupProps
      - office-ui-fabric-react.IDetailsListProps.groups
      - office-ui-fabric-react.IDetailsListProps.indentWidth
      - office-ui-fabric-react.IDetailsListProps.initialFocusedIndex
      - office-ui-fabric-react.IDetailsListProps.isHeaderVisible
      - office-ui-fabric-react.IDetailsListProps.items
      - office-ui-fabric-react.IDetailsListProps.layoutMode
      - office-ui-fabric-react.IDetailsListProps.listProps
      - office-ui-fabric-react.IDetailsListProps.minimumPixelsForDrag
      - office-ui-fabric-react.IDetailsListProps.onActiveItemChanged
      - office-ui-fabric-react.IDetailsListProps.onColumnHeaderClick
      - office-ui-fabric-react.IDetailsListProps.onColumnHeaderContextMenu
      - office-ui-fabric-react.IDetailsListProps.onColumnResize
      - office-ui-fabric-react.IDetailsListProps.onDidUpdate
      - office-ui-fabric-react.IDetailsListProps.onItemContextMenu
      - office-ui-fabric-react.IDetailsListProps.onItemInvoked
      - office-ui-fabric-react.IDetailsListProps.onRenderCheckbox
      - office-ui-fabric-react.IDetailsListProps.onRenderDetailsFooter
      - office-ui-fabric-react.IDetailsListProps.onRenderDetailsHeader
      - office-ui-fabric-react.IDetailsListProps.onRenderItemColumn
      - office-ui-fabric-react.IDetailsListProps.onRenderMissingItem
      - office-ui-fabric-react.IDetailsListProps.onRenderRow
      - office-ui-fabric-react.IDetailsListProps.onRowDidMount
      - office-ui-fabric-react.IDetailsListProps.onRowWillUnmount
      - office-ui-fabric-react.IDetailsListProps.onShouldVirtualize
      - office-ui-fabric-react.IDetailsListProps.rowElementEventMap
      - office-ui-fabric-react.IDetailsListProps.selection
      - office-ui-fabric-react.IDetailsListProps.selectionMode
      - office-ui-fabric-react.IDetailsListProps.selectionPreservedOnEmptyClick
      - office-ui-fabric-react.IDetailsListProps.selectionZoneProps
      - office-ui-fabric-react.IDetailsListProps.setKey
      - office-ui-fabric-react.IDetailsListProps.shouldApplyApplicationRole
      - office-ui-fabric-react.IDetailsListProps.styles
      - office-ui-fabric-react.IDetailsListProps.theme
      - office-ui-fabric-react.IDetailsListProps.usePageCache
      - office-ui-fabric-react.IDetailsListProps.useReducedRowRenderer
      - office-ui-fabric-react.IDetailsListProps.viewport
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory DetailsList}'
    extends:
      name: IBaseProps<office-ui-fabric-react.IDetailsList>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.ariaLabel
    name: ariaLabel
    fullName: ariaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: A text summary of the table set via aria-label.
    optional: true
    syntax:
      content: 'ariaLabel?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.ariaLabelForGrid
    name: ariaLabelForGrid
    fullName: ariaLabelForGrid
    children: []
    langs:
      - typeScript
    type: property
    summary: Aria label for grid in details list.
    optional: true
    syntax:
      content: 'ariaLabelForGrid?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.ariaLabelForListHeader
    name: ariaLabelForListHeader
    fullName: ariaLabelForListHeader
    children: []
    langs:
      - typeScript
    type: property
    summary: The aria-label attribute to stamp out on the list header
    optional: true
    syntax:
      content: 'ariaLabelForListHeader?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.ariaLabelForSelectAllCheckbox
    name: ariaLabelForSelectAllCheckbox
    fullName: ariaLabelForSelectAllCheckbox
    children: []
    langs:
      - typeScript
    type: property
    summary: The aria-label attribute to stamp out on select all checkbox for the list
    optional: true
    syntax:
      content: 'ariaLabelForSelectAllCheckbox?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.ariaLabelForSelectionColumn
    name: ariaLabelForSelectionColumn
    fullName: ariaLabelForSelectionColumn
    children: []
    langs:
      - typeScript
    type: property
    summary: 'An ARIA label for the name of the selection column, for localization.'
    optional: true
    syntax:
      content: 'ariaLabelForSelectionColumn?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.cellStyleProps
    name: cellStyleProps
    fullName: cellStyleProps
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Props impacting the render style of cells. Since these have an impact on
      calculated column widths, they are

      handled separately from normal theme styling, but they are passed to the
      styling system.
    optional: true
    syntax:
      content: 'cellStyleProps?: ICellStyleProps'
      return:
        type:
          - office-ui-fabric-react.ICellStyleProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.checkboxCellClassName
    name: checkboxCellClassName
    fullName: checkboxCellClassName
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional class name to add to the cell of a checkbox
    optional: true
    syntax:
      content: 'checkboxCellClassName?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.checkboxVisibility
    name: checkboxVisibility
    fullName: checkboxVisibility
    children: []
    langs:
      - typeScript
    type: property
    summary: Controls the visibility of selection check box.
    optional: true
    syntax:
      content: 'checkboxVisibility?: CheckboxVisibility'
      return:
        type:
          - office-ui-fabric-react.CheckboxVisibility
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.checkButtonAriaLabel
    name: checkButtonAriaLabel
    fullName: checkButtonAriaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: Check button aria label for details list.
    optional: true
    syntax:
      content: 'checkButtonAriaLabel?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional class name to add to the root element.
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.columnReorderOptions
    name: columnReorderOptions
    fullName: columnReorderOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: Options for column re-order using drag and drop
    optional: true
    syntax:
      content: 'columnReorderOptions?: IColumnReorderOptions'
      return:
        type:
          - office-ui-fabric-react.IColumnReorderOptions
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.columns
    name: columns
    fullName: columns
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Given column defitions. If none are provided, default columns will be
      created based on the item's properties.
    optional: true
    syntax:
      content: 'columns?: IColumn[]'
      return:
        type:
          - 'office-ui-fabric-react.IColumn[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.compact
    name: compact
    fullName: compact
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Boolean value to indicate if the component should render in compact mode.
      Set to false by default
    optional: true
    syntax:
      content: 'compact?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional callback to access the IDetailsList interface. Use this instead
      of ref for accessing

      the public methods and properties of the component.
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<IDetailsList>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.IDetailsList>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.constrainMode
    name: constrainMode
    fullName: constrainMode
    children: []
    langs:
      - typeScript
    type: property
    summary: Controls how the list contrains overflow.
    optional: true
    syntax:
      content: 'constrainMode?: ConstrainMode'
      return:
        type:
          - office-ui-fabric-react.ConstrainMode
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.disableSelectionZone
    name: disableSelectionZone
    fullName: disableSelectionZone
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Whether or not to disable the built-in SelectionZone, so the host
      component can provide its own.
    optional: true
    syntax:
      content: 'disableSelectionZone?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.dragDropEvents
    name: dragDropEvents
    fullName: dragDropEvents
    children: []
    langs:
      - typeScript
    type: property
    summary: Map of callback functions related to row drag and drop functionality.
    optional: true
    syntax:
      content: 'dragDropEvents?: IDragDropEvents'
      return:
        type:
          - office-ui-fabric-react.IDragDropEvents
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.enableShimmer
    name: enableShimmer
    fullName: enableShimmer
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If set to true and we provide an empty array, it will render 10 lines of
      whatever provided in onRenderMissingItem.
    optional: true
    syntax:
      content: 'enableShimmer?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
    deprecated:
      content: >-
        Use `ShimmeredDetailsList` pass-through component instead which supports
        this prop. Will be removed in Fabric 7.0
  - uid: office-ui-fabric-react.IDetailsListProps.enterModalSelectionOnTouch
    name: enterModalSelectionOnTouch
    fullName: enterModalSelectionOnTouch
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether or not the selection zone should enter modal state on touch.
    optional: true
    syntax:
      content: 'enterModalSelectionOnTouch?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.getGroupHeight
    name: getGroupHeight
    fullName: getGroupHeight
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional function to override default group height calculation used by
      list virtualization.
    optional: true
    syntax:
      content: 'getGroupHeight?: (group: IGroup, groupIndex: number) => number'
      return:
        type:
          - '(group: IGroup, groupIndex: number) => number'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.getKey
    name: getKey
    fullName: getKey
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional callback to get the item key, to be used in the selection and on
      render.
    optional: true
    syntax:
      content: 'getKey?: (item: any, index?: number) => string'
      return:
        type:
          - '(item: any, index?: number) => string'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.getRowAriaDescribedBy
    name: getRowAriaDescribedBy
    fullName: getRowAriaDescribedBy
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional callback to get the aria-describedby IDs (space separated
      strings) of the elements that describe the item.
    optional: true
    syntax:
      content: 'getRowAriaDescribedBy?: (item: any) => string'
      return:
        type:
          - '(item: any) => string'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.getRowAriaLabel
    name: getRowAriaLabel
    fullName: getRowAriaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional callback to get the aria-label string for a given item.
    optional: true
    syntax:
      content: 'getRowAriaLabel?: (item: any) => string'
      return:
        type:
          - '(item: any) => string'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.groupProps
    name: groupProps
    fullName: groupProps
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional override properties to render groups. The definition for
      IGroupRenderProps can be found under the GroupedList component.
    optional: true
    syntax:
      content: 'groupProps?: IDetailsGroupRenderProps'
      return:
        type:
          - office-ui-fabric-react.IDetailsGroupRenderProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.groups
    name: groups
    fullName: groups
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional grouping instructions. The definition for IGroup can be found
      under the GroupedList component.
    optional: true
    syntax:
      content: 'groups?: IGroup[]'
      return:
        type:
          - 'office-ui-fabric-react.IGroup[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.indentWidth
    name: indentWidth
    fullName: indentWidth
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional override for the indent width used for group nesting.
    optional: true
    syntax:
      content: 'indentWidth?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.initialFocusedIndex
    name: initialFocusedIndex
    fullName: initialFocusedIndex
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional default focused index to set focus to once the items have
      rendered and the index exists.
    optional: true
    syntax:
      content: 'initialFocusedIndex?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.isHeaderVisible
    name: isHeaderVisible
    fullName: isHeaderVisible
    children: []
    langs:
      - typeScript
    type: property
    summary: Controls the visibility of the details header.
    optional: true
    syntax:
      content: 'isHeaderVisible?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.items
    name: items
    fullName: items
    children: []
    langs:
      - typeScript
    type: property
    summary: The items to render.
    syntax:
      content: 'items: any[]'
      return:
        type:
          - 'any[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.layoutMode
    name: layoutMode
    fullName: layoutMode
    children: []
    langs:
      - typeScript
    type: property
    summary: Controls how the columns are adjusted.
    optional: true
    syntax:
      content: 'layoutMode?: DetailsListLayoutMode'
      return:
        type:
          - office-ui-fabric-react.DetailsListLayoutMode
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.listProps
    name: listProps
    fullName: listProps
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional properties to pass through to the list components being rendered.
    optional: true
    syntax:
      content: 'listProps?: IListProps'
      return:
        type:
          - office-ui-fabric-react.IListProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.minimumPixelsForDrag
    name: minimumPixelsForDrag
    fullName: minimumPixelsForDrag
    children: []
    langs:
      - typeScript
    type: property
    summary: The minimum mouse move distance to interpret the action as drag event.
    optional: true
    syntax:
      content: 'minimumPixelsForDrag?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.onActiveItemChanged
    name: onActiveItemChanged
    fullName: onActiveItemChanged
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Callback for when an item in the list becomes active by clicking anywhere
      inside the row or navigating to it with keyboard.
    optional: true
    syntax:
      content: >-
        onActiveItemChanged?: (item?: any, index?: number, ev?:
        FocusEvent<HTMLElement>) => void
      return:
        type:
          - '(item?: any, index?: number, ev?: FocusEvent<HTMLElement>) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.onColumnHeaderClick
    name: onColumnHeaderClick
    fullName: onColumnHeaderClick
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback for when the user clicks on the column header.
    optional: true
    syntax:
      content: >-
        onColumnHeaderClick?: (ev?: MouseEvent<HTMLElement>, column?: IColumn)
        => void
      return:
        type:
          - '(ev?: MouseEvent<HTMLElement>, column?: IColumn) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.onColumnHeaderContextMenu
    name: onColumnHeaderContextMenu
    fullName: onColumnHeaderContextMenu
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Callback for when the user asks for a contextual menu (usually via right
      click) from a column header.
    optional: true
    syntax:
      content: >-
        onColumnHeaderContextMenu?: (column?: IColumn, ev?:
        MouseEvent<HTMLElement>) => void
      return:
        type:
          - '(column?: IColumn, ev?: MouseEvent<HTMLElement>) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.onColumnResize
    name: onColumnResize
    fullName: onColumnResize
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback fired on column resize
    optional: true
    syntax:
      content: >-
        onColumnResize?: (column?: IColumn, newWidth?: number, columnIndex?:
        number) => void
      return:
        type:
          - '(column?: IColumn, newWidth?: number, columnIndex?: number) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.onDidUpdate
    name: onDidUpdate
    fullName: onDidUpdate
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Callback for when the details list has been updated. Useful for telemetry
      tracking externally.
    optional: true
    syntax:
      content: 'onDidUpdate?: (detailsList?: DetailsListBase) => void'
      return:
        type:
          - '(detailsList?: DetailsListBase) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.onItemContextMenu
    name: onItemContextMenu
    fullName: onItemContextMenu
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Callback for when the context menu of an item has been accessed.
      If undefined or false are returned, ev.preventDefault() will be called.
    optional: true
    syntax:
      content: >-
        onItemContextMenu?: (item?: any, index?: number, ev?: Event) => void |
        boolean
      return:
        type:
          - '(item?: any, index?: number, ev?: Event) => void | boolean'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.onItemInvoked
    name: onItemInvoked
    fullName: onItemInvoked
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Callback for when a given row has been invoked (by pressing enter while it
      is selected.)
    optional: true
    syntax:
      content: 'onItemInvoked?: (item?: any, index?: number, ev?: Event) => void'
      return:
        type:
          - '(item?: any, index?: number, ev?: Event) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.onRenderCheckbox
    name: onRenderCheckbox
    fullName: onRenderCheckbox
    children: []
    langs:
      - typeScript
    type: property
    summary: 'If provided, can be used to render a custom checkbox'
    optional: true
    syntax:
      content: 'onRenderCheckbox?: IRenderFunction<IDetailsListCheckboxProps>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.IDetailsListCheckboxProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.onRenderDetailsFooter
    name: onRenderDetailsFooter
    fullName: onRenderDetailsFooter
    children: []
    langs:
      - typeScript
    type: property
    summary: An override to render the details footer.
    optional: true
    syntax:
      content: 'onRenderDetailsFooter?: IRenderFunction<IDetailsFooterProps>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.IDetailsFooterProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.onRenderDetailsHeader
    name: onRenderDetailsHeader
    fullName: onRenderDetailsHeader
    children: []
    langs:
      - typeScript
    type: property
    summary: An override to render the details header.
    optional: true
    syntax:
      content: 'onRenderDetailsHeader?: IRenderFunction<IDetailsHeaderProps>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.IDetailsHeaderProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.onRenderItemColumn
    name: onRenderItemColumn
    fullName: onRenderItemColumn
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If provided, will be the "default" item column renderer method. This
      affects cells within the rows; not the rows themselves.

      If a column definition provides its own onRender method, that will be used
      instead of this.
    optional: true
    syntax:
      content: >-
        onRenderItemColumn?: (item?: any, index?: number, column?: IColumn) =>
        React.ReactNode
      return:
        type:
          - '(item?: any, index?: number, column?: IColumn) => React.ReactNode'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.onRenderMissingItem
    name: onRenderMissingItem
    fullName: onRenderMissingItem
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback for what to render when the item is missing.
    optional: true
    syntax:
      content: >-
        onRenderMissingItem?: (index?: number, rowProps?: IDetailsRowProps) =>
        React.ReactNode
      return:
        type:
          - '(index?: number, rowProps?: IDetailsRowProps) => React.ReactNode'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.onRenderRow
    name: onRenderRow
    fullName: onRenderRow
    children: []
    langs:
      - typeScript
    type: property
    summary: 'If provided, will allow the caller to override the default row rendering.'
    optional: true
    syntax:
      content: 'onRenderRow?: IRenderFunction<IDetailsRowProps>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.IDetailsRowProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.onRowDidMount
    name: onRowDidMount
    fullName: onRowDidMount
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Callback for when a given row has been mounted. Useful for identifying
      when a row has been rendered on the page.
    optional: true
    syntax:
      content: 'onRowDidMount?: (item?: any, index?: number) => void'
      return:
        type:
          - '(item?: any, index?: number) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.onRowWillUnmount
    name: onRowWillUnmount
    fullName: onRowWillUnmount
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Callback for when a given row has been unmounted. Useful for identifying
      when a row has been removed from the page.
    optional: true
    syntax:
      content: 'onRowWillUnmount?: (item?: any, index?: number) => void'
      return:
        type:
          - '(item?: any, index?: number) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.onShouldVirtualize
    name: onShouldVirtualize
    fullName: onShouldVirtualize
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional callback to determine whether the list should be rendered in
      full, or virtualized.

      Virtualization will add and remove pages of items as the user scrolls them
      into the visible range.

      This benefits larger list scenarios by reducing the DOM on the screen, but
      can negatively affect performance for smaller lists.

      The default implementation will virtualize when this callback is not
      provided.
    optional: true
    syntax:
      content: 'onShouldVirtualize?: (props: IListProps) => boolean'
      return:
        type:
          - '(props: IListProps) => boolean'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.rowElementEventMap
    name: rowElementEventMap
    fullName: rowElementEventMap
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Event names and corresponding callbacks that will be registered to
      rendered row elements.
    optional: true
    syntax:
      content: 'rowElementEventMap?: Object[]'
      return:
        type:
          - 'Object[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.selection
    name: selection
    fullName: selection
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional selection model to track selection state.
    optional: true
    syntax:
      content: 'selection?: ISelection'
      return:
        type:
          - office-ui-fabric-react.ISelection
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.selectionMode
    name: selectionMode
    fullName: selectionMode
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Controls how/if the details list manages selection. Options include none,
      single, multiple
    optional: true
    syntax:
      content: 'selectionMode?: SelectionMode'
      return:
        type:
          - office-ui-fabric-react.SelectionMode
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.selectionPreservedOnEmptyClick
    name: selectionPreservedOnEmptyClick
    fullName: selectionPreservedOnEmptyClick
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      By default, selection is cleared when clicking on an empty (non-focusable)
      section of the screen. Setting this value to true

      overrides that behavior and maintains selection.
    optional: true
    syntax:
      content: 'selectionPreservedOnEmptyClick?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.selectionZoneProps
    name: selectionZoneProps
    fullName: selectionZoneProps
    children: []
    langs:
      - typeScript
    type: property
    summary: Addition props to pass through to the selection zone created by default.
    optional: true
    syntax:
      content: 'selectionZoneProps?: ISelectionZoneProps'
      return:
        type:
          - office-ui-fabric-react.ISelectionZoneProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.setKey
    name: setKey
    fullName: setKey
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A key that uniquely identifies the given items. If provided, the selection
      will be reset when the key changes.
    optional: true
    syntax:
      content: 'setKey?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.shouldApplyApplicationRole
    name: shouldApplyApplicationRole
    fullName: shouldApplyApplicationRole
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Boolean value to indicate if the role application should be applied on
      details list. Set to false by default
    optional: true
    syntax:
      content: 'shouldApplyApplicationRole?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.styles
    name: styles
    fullName: styles
    children: []
    langs:
      - typeScript
    type: property
    summary: Style function to be passed in to override the themed or default styles
    optional: true
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<IDetailsListStyleProps,
        IDetailsListStyles>
      return:
        type:
          - >-
            IStyleFunctionOrObject<office-ui-fabric-react.IDetailsListStyleProps,
            office-ui-fabric-react.IDetailsListStyles>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.theme
    name: theme
    fullName: theme
    children: []
    langs:
      - typeScript
    type: property
    summary: Theme provided by the Higher Order Component
    optional: true
    syntax:
      content: 'theme?: ITheme'
      return:
        type:
          - ITheme
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.usePageCache
    name: usePageCache
    fullName: usePageCache
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Boolean value to enable render page caching. This is an experimental
      performance optimization

      that is off by default.
    optional: true
    syntax:
      content: 'usePageCache?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.useReducedRowRenderer
    name: useReducedRowRenderer
    fullName: useReducedRowRenderer
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Rerender DetailsRow only when props changed. Might cause regression when
      depending on external updates.
    optional: true
    syntax:
      content: 'useReducedRowRenderer?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDetailsListProps.viewport
    name: viewport
    fullName: viewport
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Viewport, provided by the withViewport decorator.'
    optional: true
    syntax:
      content: 'viewport?: IViewport'
      return:
        type:
          - office-ui-fabric-react.IViewport
    package: office-ui-fabric-react
references:
  - uid: IBaseProps<office-ui-fabric-react.IDetailsList>
    name: IDetailsList>
    spec.typeScript:
      - name: IBaseProps<
        fullName: IBaseProps<
      - name: IDetailsList
        fullName: IDetailsList
        uid: office-ui-fabric-react.IDetailsList
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.ICellStyleProps
    name: ICellStyleProps
    spec.typeScript:
      - name: ICellStyleProps
        fullName: ICellStyleProps
        uid: office-ui-fabric-react.ICellStyleProps
  - uid: office-ui-fabric-react.CheckboxVisibility
    name: CheckboxVisibility
    spec.typeScript:
      - name: CheckboxVisibility
        fullName: CheckboxVisibility
        uid: office-ui-fabric-react.CheckboxVisibility
  - uid: office-ui-fabric-react.IColumnReorderOptions
    name: IColumnReorderOptions
    spec.typeScript:
      - name: IColumnReorderOptions
        fullName: IColumnReorderOptions
        uid: office-ui-fabric-react.IColumnReorderOptions
  - uid: 'office-ui-fabric-react.IColumn[]'
    name: 'IColumn[]'
    spec.typeScript:
      - name: IColumn
        fullName: IColumn
        uid: office-ui-fabric-react.IColumn
      - name: '[]'
        fullName: '[]'
  - uid: IRefObject<office-ui-fabric-react.IDetailsList>
    name: IDetailsList>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: IDetailsList
        fullName: IDetailsList
        uid: office-ui-fabric-react.IDetailsList
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.ConstrainMode
    name: ConstrainMode
    spec.typeScript:
      - name: ConstrainMode
        fullName: ConstrainMode
        uid: office-ui-fabric-react.ConstrainMode
  - uid: office-ui-fabric-react.IDragDropEvents
    name: IDragDropEvents
    spec.typeScript:
      - name: IDragDropEvents
        fullName: IDragDropEvents
        uid: office-ui-fabric-react.IDragDropEvents
  - uid: office-ui-fabric-react.IDetailsGroupRenderProps
    name: IDetailsGroupRenderProps
    spec.typeScript:
      - name: IDetailsGroupRenderProps
        fullName: IDetailsGroupRenderProps
        uid: office-ui-fabric-react.IDetailsGroupRenderProps
  - uid: 'office-ui-fabric-react.IGroup[]'
    name: 'IGroup[]'
    spec.typeScript:
      - name: IGroup
        fullName: IGroup
        uid: office-ui-fabric-react.IGroup
      - name: '[]'
        fullName: '[]'
  - uid: office-ui-fabric-react.DetailsListLayoutMode
    name: DetailsListLayoutMode
    spec.typeScript:
      - name: DetailsListLayoutMode
        fullName: DetailsListLayoutMode
        uid: office-ui-fabric-react.DetailsListLayoutMode
  - uid: office-ui-fabric-react.IListProps
    name: IListProps
    spec.typeScript:
      - name: IListProps
        fullName: IListProps
        uid: office-ui-fabric-react.IListProps
  - uid: IRenderFunction<office-ui-fabric-react.IDetailsListCheckboxProps>
    name: IDetailsListCheckboxProps>
    spec.typeScript:
      - name: IRenderFunction<
        fullName: IRenderFunction<
      - name: IDetailsListCheckboxProps
        fullName: IDetailsListCheckboxProps
        uid: office-ui-fabric-react.IDetailsListCheckboxProps
      - name: '>'
        fullName: '>'
  - uid: IRenderFunction<office-ui-fabric-react.IDetailsFooterProps>
    name: IDetailsFooterProps>
    spec.typeScript:
      - name: IRenderFunction<
        fullName: IRenderFunction<
      - name: IDetailsFooterProps
        fullName: IDetailsFooterProps
        uid: office-ui-fabric-react.IDetailsFooterProps
      - name: '>'
        fullName: '>'
  - uid: IRenderFunction<office-ui-fabric-react.IDetailsHeaderProps>
    name: IDetailsHeaderProps>
    spec.typeScript:
      - name: IRenderFunction<
        fullName: IRenderFunction<
      - name: IDetailsHeaderProps
        fullName: IDetailsHeaderProps
        uid: office-ui-fabric-react.IDetailsHeaderProps
      - name: '>'
        fullName: '>'
  - uid: IRenderFunction<office-ui-fabric-react.IDetailsRowProps>
    name: IDetailsRowProps>
    spec.typeScript:
      - name: IRenderFunction<
        fullName: IRenderFunction<
      - name: IDetailsRowProps
        fullName: IDetailsRowProps
        uid: office-ui-fabric-react.IDetailsRowProps
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.ISelection
    name: ISelection
    spec.typeScript:
      - name: ISelection
        fullName: ISelection
        uid: office-ui-fabric-react.ISelection
  - uid: office-ui-fabric-react.SelectionMode
    name: SelectionMode
    spec.typeScript:
      - name: SelectionMode
        fullName: SelectionMode
        uid: office-ui-fabric-react.SelectionMode
  - uid: office-ui-fabric-react.ISelectionZoneProps
    name: ISelectionZoneProps
    spec.typeScript:
      - name: ISelectionZoneProps
        fullName: ISelectionZoneProps
        uid: office-ui-fabric-react.ISelectionZoneProps
  - uid: >-
      IStyleFunctionOrObject<office-ui-fabric-react.IDetailsListStyleProps,
      office-ui-fabric-react.IDetailsListStyles>
    name: IDetailsListStyles>
    spec.typeScript:
      - name: IStyleFunctionOrObject<
        fullName: IStyleFunctionOrObject<
      - name: IDetailsListStyleProps
        fullName: IDetailsListStyleProps
        uid: office-ui-fabric-react.IDetailsListStyleProps
      - name: ', '
        fullName: ', '
      - name: IDetailsListStyles
        fullName: IDetailsListStyles
        uid: office-ui-fabric-react.IDetailsListStyles
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.IViewport
    name: IViewport
    spec.typeScript:
      - name: IViewport
        fullName: IViewport
        uid: office-ui-fabric-react.IViewport
