### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.ITooltipProps
    name: ITooltipProps
    fullName: ITooltipProps
    children:
      - office-ui-fabric-react.ITooltipProps.calloutProps
      - office-ui-fabric-react.ITooltipProps.componentRef
      - office-ui-fabric-react.ITooltipProps.content
      - office-ui-fabric-react.ITooltipProps.delay
      - office-ui-fabric-react.ITooltipProps.directionalHint
      - office-ui-fabric-react.ITooltipProps.directionalHintForRTL
      - office-ui-fabric-react.ITooltipProps.maxWidth
      - office-ui-fabric-react.ITooltipProps.onRenderContent
      - office-ui-fabric-react.ITooltipProps.styles
      - office-ui-fabric-react.ITooltipProps.targetElement
      - office-ui-fabric-react.ITooltipProps.theme
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: |-
      Tooltip component props.
      {@docCategory Tooltip}
    extends:
      name: HTMLAttributes<HTMLDivElement | office-ui-fabric-react.TooltipBase>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITooltipProps.calloutProps
    name: calloutProps
    fullName: calloutProps
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Properties to pass through for Callout, reference detail properties in
      ICalloutProps
    optional: true
    syntax:
      content: 'calloutProps?: ICalloutProps'
      return:
        type:
          - office-ui-fabric-react.ICalloutProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITooltipProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional callback to access the ITooltip interface. Use this instead of
      ref for accessing

      the public methods and properties of the component.
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<ITooltip>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.ITooltip>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITooltipProps.content
    name: content
    fullName: content
    children: []
    langs:
      - typeScript
    type: property
    summary: Content to be passed to the tooltip
    optional: true
    syntax:
      content: 'content?: string | Element | Element[]'
      return:
        type:
          - 'string | Element | Element[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITooltipProps.delay
    name: delay
    fullName: delay
    children: []
    langs:
      - typeScript
    type: property
    summary: Length of delay. Can be set to zero if you do not want a delay.
    optional: true
    syntax:
      content: 'delay?: TooltipDelay'
      return:
        type:
          - office-ui-fabric-react.TooltipDelay
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITooltipProps.directionalHint
    name: directionalHint
    fullName: directionalHint
    children: []
    langs:
      - typeScript
    type: property
    summary: Indicator of how the tooltip should be anchored to its targetElement.
    optional: true
    syntax:
      content: 'directionalHint?: DirectionalHint'
      return:
        type:
          - DirectionalHint
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITooltipProps.directionalHintForRTL
    name: directionalHintForRTL
    fullName: directionalHintForRTL
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      How the element should be positioned in RTL layouts.
      If not specified, a mirror of `directionalHint` will be used instead
    optional: true
    syntax:
      content: 'directionalHintForRTL?: DirectionalHint'
      return:
        type:
          - DirectionalHint
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITooltipProps.maxWidth
    name: maxWidth
    fullName: maxWidth
    children: []
    langs:
      - typeScript
    type: property
    summary: Max width of tooltip
    optional: true
    syntax:
      content: 'maxWidth?: string | null'
      return:
        type:
          - string | null
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITooltipProps.onRenderContent
    name: onRenderContent
    fullName: onRenderContent
    children: []
    langs:
      - typeScript
    type: property
    summary: Render function to populate content area
    optional: true
    syntax:
      content: 'onRenderContent?: IRenderFunction<ITooltipProps>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.ITooltipProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITooltipProps.styles
    name: styles
    fullName: styles
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules.
    optional: true
    syntax:
      content: 'styles?: IStyleFunctionOrObject<ITooltipStyleProps, ITooltipStyles>'
      return:
        type:
          - >-
            IStyleFunctionOrObject<office-ui-fabric-react.ITooltipStyleProps,
            office-ui-fabric-react.ITooltipStyles>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITooltipProps.targetElement
    name: targetElement
    fullName: targetElement
    children: []
    langs:
      - typeScript
    type: property
    summary: Element to anchor the Tooltip to.
    optional: true
    syntax:
      content: 'targetElement?: HTMLElement'
      return:
        type:
          - HTMLElement
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITooltipProps.theme
    name: theme
    fullName: theme
    children: []
    langs:
      - typeScript
    type: property
    summary: Theme to apply to the component.
    optional: true
    syntax:
      content: 'theme?: ITheme'
      return:
        type:
          - ITheme
    package: office-ui-fabric-react
references:
  - uid: HTMLAttributes<HTMLDivElement | office-ui-fabric-react.TooltipBase>
    name: TooltipBase>
    spec.typeScript:
      - name: 'HTMLAttributes<HTMLDivElement | '
        fullName: 'HTMLAttributes<HTMLDivElement | '
      - name: TooltipBase
        fullName: TooltipBase
        uid: office-ui-fabric-react.TooltipBase
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.ICalloutProps
    name: ICalloutProps
    spec.typeScript:
      - name: ICalloutProps
        fullName: ICalloutProps
        uid: office-ui-fabric-react.ICalloutProps
  - uid: IRefObject<office-ui-fabric-react.ITooltip>
    name: ITooltip>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: ITooltip
        fullName: ITooltip
        uid: office-ui-fabric-react.ITooltip
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.TooltipDelay
    name: TooltipDelay
    spec.typeScript:
      - name: TooltipDelay
        fullName: TooltipDelay
        uid: office-ui-fabric-react.TooltipDelay
  - uid: IRenderFunction<office-ui-fabric-react.ITooltipProps>
    name: ITooltipProps>
    spec.typeScript:
      - name: IRenderFunction<
        fullName: IRenderFunction<
      - name: ITooltipProps
        fullName: ITooltipProps
        uid: office-ui-fabric-react.ITooltipProps
      - name: '>'
        fullName: '>'
  - uid: >-
      IStyleFunctionOrObject<office-ui-fabric-react.ITooltipStyleProps,
      office-ui-fabric-react.ITooltipStyles>
    name: ITooltipStyles>
    spec.typeScript:
      - name: IStyleFunctionOrObject<
        fullName: IStyleFunctionOrObject<
      - name: ITooltipStyleProps
        fullName: ITooltipStyleProps
        uid: office-ui-fabric-react.ITooltipStyleProps
      - name: ', '
        fullName: ', '
      - name: ITooltipStyles
        fullName: ITooltipStyles
        uid: office-ui-fabric-react.ITooltipStyles
      - name: '>'
        fullName: '>'
