### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IOverlayProps
    name: IOverlayProps
    fullName: IOverlayProps
    children:
      - office-ui-fabric-react.IOverlayProps.className
      - office-ui-fabric-react.IOverlayProps.componentRef
      - office-ui-fabric-react.IOverlayProps.isDarkThemed
      - office-ui-fabric-react.IOverlayProps.onClick
      - office-ui-fabric-react.IOverlayProps.styles
      - office-ui-fabric-react.IOverlayProps.theme
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory Overlay}'
    extends:
      name: HTMLAttributes<HTMLElement>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IOverlayProps.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: Additional css class to apply to the Overlay
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IOverlayProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets the component ref.
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<IOverlay>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.IOverlay>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IOverlayProps.isDarkThemed
    name: isDarkThemed
    fullName: isDarkThemed
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether to use the dark-themed overlay.
    optional: true
    syntax:
      content: 'isDarkThemed?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IOverlayProps.onClick
    name: onClick
    fullName: onClick
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'onClick?: () => void'
      return:
        type:
          - () => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IOverlayProps.styles
    name: styles
    fullName: styles
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules
    optional: true
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IOverlayStyleProps, IOverlayStyles>'
      return:
        type:
          - >-
            IStyleFunctionOrObject<office-ui-fabric-react.IOverlayStyleProps,
            office-ui-fabric-react.IOverlayStyles>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IOverlayProps.theme
    name: theme
    fullName: theme
    children: []
    langs:
      - typeScript
    type: property
    summary: Theme provided by HOC.
    optional: true
    syntax:
      content: 'theme?: ITheme'
      return:
        type:
          - ITheme
    package: office-ui-fabric-react
references:
  - uid: IRefObject<office-ui-fabric-react.IOverlay>
    name: IOverlay>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: IOverlay
        fullName: IOverlay
        uid: office-ui-fabric-react.IOverlay
      - name: '>'
        fullName: '>'
  - uid: >-
      IStyleFunctionOrObject<office-ui-fabric-react.IOverlayStyleProps,
      office-ui-fabric-react.IOverlayStyles>
    name: IOverlayStyles>
    spec.typeScript:
      - name: IStyleFunctionOrObject<
        fullName: IStyleFunctionOrObject<
      - name: IOverlayStyleProps
        fullName: IOverlayStyleProps
        uid: office-ui-fabric-react.IOverlayStyleProps
      - name: ', '
        fullName: ', '
      - name: IOverlayStyles
        fullName: IOverlayStyles
        uid: office-ui-fabric-react.IOverlayStyles
      - name: '>'
        fullName: '>'
