### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.ICalloutDirectionalExampleState
    name: ICalloutDirectionalExampleState
    fullName: ICalloutDirectionalExampleState
    children:
      - office-ui-fabric-react.ICalloutDirectionalExampleState.beakWidth
      - office-ui-fabric-react.ICalloutDirectionalExampleState.directionalHint
      - office-ui-fabric-react.ICalloutDirectionalExampleState.gapSpace
      - office-ui-fabric-react.ICalloutDirectionalExampleState.isBeakVisible
      - office-ui-fabric-react.ICalloutDirectionalExampleState.isCalloutVisible
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: ''
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalloutDirectionalExampleState.beakWidth
    name: beakWidth
    fullName: beakWidth
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'beakWidth?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalloutDirectionalExampleState.directionalHint
    name: directionalHint
    fullName: directionalHint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'directionalHint?: DirectionalHint'
      return:
        type:
          - DirectionalHint
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalloutDirectionalExampleState.gapSpace
    name: gapSpace
    fullName: gapSpace
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'gapSpace?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalloutDirectionalExampleState.isBeakVisible
    name: isBeakVisible
    fullName: isBeakVisible
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'isBeakVisible?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalloutDirectionalExampleState.isCalloutVisible
    name: isCalloutVisible
    fullName: isCalloutVisible
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'isCalloutVisible?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
