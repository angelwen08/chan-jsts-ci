### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IEditingSelectedPeopleItemProps
    name: IEditingSelectedPeopleItemProps
    fullName: IEditingSelectedPeopleItemProps
    children:
      - >-
        office-ui-fabric-react.IEditingSelectedPeopleItemProps.floatingPickerProps
      - >-
        office-ui-fabric-react.IEditingSelectedPeopleItemProps.getEditingItemText
      - office-ui-fabric-react.IEditingSelectedPeopleItemProps.onEditingComplete
      - >-
        office-ui-fabric-react.IEditingSelectedPeopleItemProps.onRenderFloatingPicker
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: office-ui-fabric-react.ISelectedPeopleItemProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IEditingSelectedPeopleItemProps.floatingPickerProps
    name: floatingPickerProps
    fullName: floatingPickerProps
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'floatingPickerProps?: IBaseFloatingPickerProps<IPersonaProps>'
      return:
        type:
          - >-
            office-ui-fabric-react.IBaseFloatingPickerProps<office-ui-fabric-react.IPersonaProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IEditingSelectedPeopleItemProps.getEditingItemText
    name: getEditingItemText
    fullName: getEditingItemText
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'getEditingItemText?: (item: IExtendedPersonaProps) => string'
      return:
        type:
          - '(item: IExtendedPersonaProps) => string'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IEditingSelectedPeopleItemProps.onEditingComplete
    name: onEditingComplete
    fullName: onEditingComplete
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onEditingComplete: (oldItem: any, newItem: any) => void'
      return:
        type:
          - '(oldItem: any, newItem: any) => void'
    package: office-ui-fabric-react
  - uid: >-
      office-ui-fabric-react.IEditingSelectedPeopleItemProps.onRenderFloatingPicker
    name: onRenderFloatingPicker
    fullName: onRenderFloatingPicker
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: >-
        onRenderFloatingPicker?:
        React.ComponentType<IBaseFloatingPickerProps<IPersonaProps>>
      return:
        type:
          - >-
            React.ComponentType<office-ui-fabric-react.IBaseFloatingPickerProps<office-ui-fabric-react.IPersonaProps>>
    package: office-ui-fabric-react
references:
  - uid: office-ui-fabric-react.ISelectedPeopleItemProps
    name: ISelectedPeopleItemProps
    spec.typeScript:
      - name: ISelectedPeopleItemProps
        fullName: ISelectedPeopleItemProps
        uid: office-ui-fabric-react.ISelectedPeopleItemProps
  - uid: >-
      office-ui-fabric-react.IBaseFloatingPickerProps<office-ui-fabric-react.IPersonaProps>
    name: IPersonaProps>
    spec.typeScript:
      - name: IBaseFloatingPickerProps
        fullName: IBaseFloatingPickerProps
        uid: office-ui-fabric-react.IBaseFloatingPickerProps
      - name: <
        fullName: <
      - name: IPersonaProps
        fullName: IPersonaProps
        uid: office-ui-fabric-react.IPersonaProps
      - name: '>'
        fullName: '>'
  - uid: >-
      React.ComponentType<office-ui-fabric-react.IBaseFloatingPickerProps<office-ui-fabric-react.IPersonaProps>>
    name: IPersonaProps>>
    spec.typeScript:
      - name: React.ComponentType<
        fullName: React.ComponentType<
      - name: IBaseFloatingPickerProps
        fullName: IBaseFloatingPickerProps
        uid: office-ui-fabric-react.IBaseFloatingPickerProps
      - name: <
        fullName: <
      - name: IPersonaProps
        fullName: IPersonaProps
        uid: office-ui-fabric-react.IPersonaProps
      - name: '>>'
        fullName: '>>'
