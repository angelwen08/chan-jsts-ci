### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.ISuggestions
    name: ISuggestions
    fullName: ISuggestions<T>
    children:
      - office-ui-fabric-react.ISuggestions.executeSelectedAction
      - office-ui-fabric-react.ISuggestions.focusAboveSuggestions
      - office-ui-fabric-react.ISuggestions.focusBelowSuggestions
      - office-ui-fabric-react.ISuggestions.focusSearchForMoreButton
      - office-ui-fabric-react.ISuggestions.hasSuggestedAction
      - office-ui-fabric-react.ISuggestions.hasSuggestedActionSelected
      - office-ui-fabric-react.ISuggestions.tryHandleKeyDown
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: |-
      Suggestions component.
      {@docCategory Pickers}
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestions.executeSelectedAction
    name: executeSelectedAction
    fullName: executeSelectedAction
    children: []
    langs:
      - typeScript
    type: property
    summary: Execute the action selected. Can be SearchMore or ForceResolve actions.
    syntax:
      content: 'executeSelectedAction: () => void'
      return:
        type:
          - () => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestions.focusAboveSuggestions
    name: focusAboveSuggestions
    fullName: focusAboveSuggestions
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Focus on the ForceResolve action above the suggestions. If not available
      then focus on SearchMore action.
    syntax:
      content: 'focusAboveSuggestions: () => void'
      return:
        type:
          - () => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestions.focusBelowSuggestions
    name: focusBelowSuggestions
    fullName: focusBelowSuggestions
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Focus on the SearchMore action below the suggestions. If not available
      then focus on ForceResolve action.
    syntax:
      content: 'focusBelowSuggestions: () => void'
      return:
        type:
          - () => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestions.focusSearchForMoreButton
    name: focusSearchForMoreButton
    fullName: focusSearchForMoreButton
    children: []
    langs:
      - typeScript
    type: property
    summary: Focus the SearchMore action button.
    syntax:
      content: 'focusSearchForMoreButton: () => void'
      return:
        type:
          - () => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestions.hasSuggestedAction
    name: hasSuggestedAction
    fullName: hasSuggestedAction
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether it has any suggested actions like ForceResolve or SearchMore.
    syntax:
      content: 'hasSuggestedAction: () => boolean'
      return:
        type:
          - () => boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestions.hasSuggestedActionSelected
    name: hasSuggestedActionSelected
    fullName: hasSuggestedActionSelected
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Whether any of the suggested actions (ForceResolve or SearchMore) is
      selected.
    syntax:
      content: 'hasSuggestedActionSelected: () => boolean'
      return:
        type:
          - () => boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestions.tryHandleKeyDown
    name: tryHandleKeyDown
    fullName: tryHandleKeyDown
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Returns true if the event was handled, false otherwise.'
    syntax:
      content: >-
        tryHandleKeyDown: (keyCode: number, currentSuggestionIndex: number) =>
        boolean
      return:
        type:
          - '(keyCode: number, currentSuggestionIndex: number) => boolean'
    package: office-ui-fabric-react
