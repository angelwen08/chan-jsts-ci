### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IColorSliderProps
    name: IColorSliderProps
    fullName: IColorSliderProps
    children:
      - office-ui-fabric-react.IColorSliderProps.className
      - office-ui-fabric-react.IColorSliderProps.componentRef
      - office-ui-fabric-react.IColorSliderProps.isAlpha
      - office-ui-fabric-react.IColorSliderProps.maxValue
      - office-ui-fabric-react.IColorSliderProps.minValue
      - office-ui-fabric-react.IColorSliderProps.onChange
      - office-ui-fabric-react.IColorSliderProps.onChanged
      - office-ui-fabric-react.IColorSliderProps.overlayStyle
      - office-ui-fabric-react.IColorSliderProps.styles
      - office-ui-fabric-react.IColorSliderProps.theme
      - office-ui-fabric-react.IColorSliderProps.thumbColor
      - office-ui-fabric-react.IColorSliderProps.value
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory ColorPicker}'
    extends:
      name: IBaseProps<office-ui-fabric-react.IColorSlider>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColorSliderProps.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: Additional CSS class(es) to apply to the ColorSlider.
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColorSliderProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets the component ref.
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<IColorSlider>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.IColorSlider>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColorSliderProps.isAlpha
    name: isAlpha
    fullName: isAlpha
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      If true, the slider represents an alpha slider.
      Otherwise, the slider represents a hue slider.
    optional: true
    syntax:
      content: 'isAlpha?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColorSliderProps.maxValue
    name: maxValue
    fullName: maxValue
    children: []
    langs:
      - typeScript
    type: property
    summary: Maximum value of the slider.
    optional: true
    syntax:
      content: 'maxValue?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColorSliderProps.minValue
    name: minValue
    fullName: minValue
    children: []
    langs:
      - typeScript
    type: property
    summary: Minimum value of the slider.
    optional: true
    syntax:
      content: 'minValue?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColorSliderProps.onChange
    name: onChange
    fullName: onChange
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback issued when the value changes.
    optional: true
    syntax:
      content: 'onChange?: (event: MouseEvent<HTMLElement>, newValue?: number) => void'
      return:
        type:
          - '(event: MouseEvent<HTMLElement>, newValue?: number) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColorSliderProps.onChanged
    name: onChanged
    fullName: onChanged
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Deprecated, use `onChange` instead.'
    optional: true
    syntax:
      content: 'onChanged?: (newValue: number) => void'
      return:
        type:
          - '(newValue: number) => void'
    package: office-ui-fabric-react
    deprecated:
      content: Use `onChange` instead.
  - uid: office-ui-fabric-react.IColorSliderProps.overlayStyle
    name: overlayStyle
    fullName: overlayStyle
    children: []
    langs:
      - typeScript
    type: property
    summary: Custom style for the overlay element.
    optional: true
    syntax:
      content: 'overlayStyle?: any'
      return:
        type:
          - any
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColorSliderProps.styles
    name: styles
    fullName: styles
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules.
    optional: true
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<IColorSliderStyleProps,
        IColorSliderStyles>
      return:
        type:
          - >-
            IStyleFunctionOrObject<office-ui-fabric-react.IColorSliderStyleProps,
            office-ui-fabric-react.IColorSliderStyles>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColorSliderProps.theme
    name: theme
    fullName: theme
    children: []
    langs:
      - typeScript
    type: property
    summary: Theme (provided through customization).
    optional: true
    syntax:
      content: 'theme?: ITheme'
      return:
        type:
          - ITheme
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColorSliderProps.thumbColor
    name: thumbColor
    fullName: thumbColor
    children: []
    langs:
      - typeScript
    type: property
    summary: CSS-compatible string for the color of the thumb element.
    optional: true
    syntax:
      content: 'thumbColor?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColorSliderProps.value
    name: value
    fullName: value
    children: []
    langs:
      - typeScript
    type: property
    summary: Current value of the slider.
    optional: true
    syntax:
      content: 'value?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
references:
  - uid: IBaseProps<office-ui-fabric-react.IColorSlider>
    name: IColorSlider>
    spec.typeScript:
      - name: IBaseProps<
        fullName: IBaseProps<
      - name: IColorSlider
        fullName: IColorSlider
        uid: office-ui-fabric-react.IColorSlider
      - name: '>'
        fullName: '>'
  - uid: IRefObject<office-ui-fabric-react.IColorSlider>
    name: IColorSlider>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: IColorSlider
        fullName: IColorSlider
        uid: office-ui-fabric-react.IColorSlider
      - name: '>'
        fullName: '>'
  - uid: >-
      IStyleFunctionOrObject<office-ui-fabric-react.IColorSliderStyleProps,
      office-ui-fabric-react.IColorSliderStyles>
    name: IColorSliderStyles>
    spec.typeScript:
      - name: IStyleFunctionOrObject<
        fullName: IStyleFunctionOrObject<
      - name: IColorSliderStyleProps
        fullName: IColorSliderStyleProps
        uid: office-ui-fabric-react.IColorSliderStyleProps
      - name: ', '
        fullName: ', '
      - name: IColorSliderStyles
        fullName: IColorSliderStyles
        uid: office-ui-fabric-react.IColorSliderStyles
      - name: '>'
        fullName: '>'
