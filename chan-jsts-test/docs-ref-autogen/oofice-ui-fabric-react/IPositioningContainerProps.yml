### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IPositioningContainerProps
    name: IPositioningContainerProps
    fullName: IPositioningContainerProps
    children:
      - office-ui-fabric-react.IPositioningContainerProps.ariaDescribedBy
      - office-ui-fabric-react.IPositioningContainerProps.ariaLabel
      - office-ui-fabric-react.IPositioningContainerProps.ariaLabelledBy
      - office-ui-fabric-react.IPositioningContainerProps.backgroundColor
      - office-ui-fabric-react.IPositioningContainerProps.bounds
      - office-ui-fabric-react.IPositioningContainerProps.className
      - office-ui-fabric-react.IPositioningContainerProps.componentRef
      - office-ui-fabric-react.IPositioningContainerProps.coverTarget
      - office-ui-fabric-react.IPositioningContainerProps.directionalHint
      - office-ui-fabric-react.IPositioningContainerProps.directionalHintFixed
      - office-ui-fabric-react.IPositioningContainerProps.directionalHintForRTL
      - office-ui-fabric-react.IPositioningContainerProps.doNotLayer
      - office-ui-fabric-react.IPositioningContainerProps.finalHeight
      - office-ui-fabric-react.IPositioningContainerProps.minPagePadding
      - office-ui-fabric-react.IPositioningContainerProps.offsetFromTarget
      - office-ui-fabric-react.IPositioningContainerProps.onDismiss
      - office-ui-fabric-react.IPositioningContainerProps.onLayerMounted
      - office-ui-fabric-react.IPositioningContainerProps.onPositioned
      - >-
        office-ui-fabric-react.IPositioningContainerProps.positioningContainerMaxHeight
      - >-
        office-ui-fabric-react.IPositioningContainerProps.positioningContainerWidth
      - office-ui-fabric-react.IPositioningContainerProps.preventDismissOnScroll
      - office-ui-fabric-react.IPositioningContainerProps.role
      - office-ui-fabric-react.IPositioningContainerProps.setInitialFocus
      - office-ui-fabric-react.IPositioningContainerProps.target
      - office-ui-fabric-react.IPositioningContainerProps.targetPoint
      - office-ui-fabric-react.IPositioningContainerProps.useTargetPoint
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory PositioningContainer}'
    extends:
      name: IBaseProps<office-ui-fabric-react.IPositioningContainer>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPositioningContainerProps.ariaDescribedBy
    name: ariaDescribedBy
    fullName: ariaDescribedBy
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Defines the element id referencing the element containing the description
      for the positioningContainer.
    optional: true
    syntax:
      content: 'ariaDescribedBy?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPositioningContainerProps.ariaLabel
    name: ariaLabel
    fullName: ariaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: Accessible label text for positioningContainer.
    optional: true
    syntax:
      content: 'ariaLabel?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPositioningContainerProps.ariaLabelledBy
    name: ariaLabelledBy
    fullName: ariaLabelledBy
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Defines the element id referencing the element containing label text for
      positioningContainer.
    optional: true
    syntax:
      content: 'ariaLabelledBy?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPositioningContainerProps.backgroundColor
    name: backgroundColor
    fullName: backgroundColor
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The background color of the positioningContainer in hex format ie.
      #ffffff.
    optional: true
    syntax:
      content: 'backgroundColor?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPositioningContainerProps.bounds
    name: bounds
    fullName: bounds
    children: []
    langs:
      - typeScript
    type: property
    summary: The bounding rectangle for which the contextual menu can appear in.
    optional: true
    syntax:
      content: 'bounds?: IRectangle'
      return:
        type:
          - IRectangle
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPositioningContainerProps.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: CSS class to apply to the positioningContainer.
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPositioningContainerProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: All props for your component are to be defined here.
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<IPositioningContainer>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.IPositioningContainer>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPositioningContainerProps.coverTarget
    name: coverTarget
    fullName: coverTarget
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      If true the position returned will have the menu element cover the target.
      If false then it will position next to the target;
    optional: true
    syntax:
      content: 'coverTarget?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPositioningContainerProps.directionalHint
    name: directionalHint
    fullName: directionalHint
    children: []
    langs:
      - typeScript
    type: property
    summary: How the element should be positioned
    optional: true
    syntax:
      content: 'directionalHint?: DirectionalHint'
      return:
        type:
          - DirectionalHint
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPositioningContainerProps.directionalHintFixed
    name: directionalHintFixed
    fullName: directionalHintFixed
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If true the position will not change sides in an attempt to fit the
      positioningContainer within bounds.

      It will still attempt to align it to whatever bounds are given.
    optional: true
    syntax:
      content: 'directionalHintFixed?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPositioningContainerProps.directionalHintForRTL
    name: directionalHintForRTL
    fullName: directionalHintForRTL
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      How the element should be positioned in RTL layouts.
      If not specified, a mirror of `directionalHint` will be used instead
    optional: true
    syntax:
      content: 'directionalHintForRTL?: DirectionalHint'
      return:
        type:
          - DirectionalHint
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPositioningContainerProps.doNotLayer
    name: doNotLayer
    fullName: doNotLayer
    children: []
    langs:
      - typeScript
    type: property
    summary: If true do not render on a new layer. If false render on a new layer.
    optional: true
    syntax:
      content: 'doNotLayer?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPositioningContainerProps.finalHeight
    name: finalHeight
    fullName: finalHeight
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Specify the final height of the content.

      To be used when expanding the content dynamically so that
      positioningContainer can adjust its position.
    optional: true
    syntax:
      content: 'finalHeight?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPositioningContainerProps.minPagePadding
    name: minPagePadding
    fullName: minPagePadding
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The minimum distance the positioningContainer will be away from the edge
      of the screen.
       @defaultvalue 8
    optional: true
    syntax:
      content: 'minPagePadding?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPositioningContainerProps.offsetFromTarget
    name: offsetFromTarget
    fullName: offsetFromTarget
    children: []
    langs:
      - typeScript
    type: property
    summary: The gap between the positioningContainer and the target
    optional: true
    syntax:
      content: 'offsetFromTarget?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPositioningContainerProps.onDismiss
    name: onDismiss
    fullName: onDismiss
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback when the positioningContainer tries to close.
    optional: true
    syntax:
      content: 'onDismiss?: (ev?: any) => void'
      return:
        type:
          - '(ev?: any) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPositioningContainerProps.onLayerMounted
    name: onLayerMounted
    fullName: onLayerMounted
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional callback when the layer content has mounted.
    optional: true
    syntax:
      content: 'onLayerMounted?: () => void'
      return:
        type:
          - () => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPositioningContainerProps.onPositioned
    name: onPositioned
    fullName: onPositioned
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional callback that is called once the positioningContainer has been
      correctly positioned.
    optional: true
    syntax:
      content: 'onPositioned?: (positions?: IPositionedData) => void'
      return:
        type:
          - '(positions?: IPositionedData) => void'
    package: office-ui-fabric-react
  - uid: >-
      office-ui-fabric-react.IPositioningContainerProps.positioningContainerMaxHeight
    name: positioningContainerMaxHeight
    fullName: positioningContainerMaxHeight
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Set max height of positioningContainer

      When not set the positioningContainer will expand with contents up to the
      bottom of the screen
    optional: true
    syntax:
      content: 'positioningContainerMaxHeight?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: >-
      office-ui-fabric-react.IPositioningContainerProps.positioningContainerWidth
    name: positioningContainerWidth
    fullName: positioningContainerWidth
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Custom width for positioningContainer including borders. If value is 0, no
      width is applied.
    optional: true
    syntax:
      content: 'positioningContainerWidth?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPositioningContainerProps.preventDismissOnScroll
    name: preventDismissOnScroll
    fullName: preventDismissOnScroll
    children: []
    langs:
      - typeScript
    type: property
    summary: If true then the onClose will not not dismiss on scroll
    optional: true
    syntax:
      content: 'preventDismissOnScroll?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPositioningContainerProps.role
    name: role
    fullName: role
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Aria role assigned to the positioningContainer (Eg. dialog, alertdialog).'
    optional: true
    syntax:
      content: 'role?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPositioningContainerProps.setInitialFocus
    name: setInitialFocus
    fullName: setInitialFocus
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If true then the positioningContainer will attempt to focus the first
      focusable element that it contains.

      If it doesn't find an element, no focus will be set and the method will
      return false.

      This means that it's the contents responsibility to either set focus or
      have

      focusable items.
    optional: true
    syntax:
      content: 'setInitialFocus?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPositioningContainerProps.target
    name: target
    fullName: target
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The target that the positioningContainer should try to position itself
      based on.

      It can be either an HTMLElement a querySelector string of a valid
      HTMLElement

      or a MouseEvent. If MouseEvent is given then the origin point of the event
      will be used.
    optional: true
    syntax:
      content: 'target?: HTMLElement | string | MouseEvent | IPoint | null'
      return:
        type:
          - HTMLElement | string | MouseEvent | IPoint | null
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPositioningContainerProps.targetPoint
    name: targetPoint
    fullName: targetPoint
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Point used to position the positioningContainer.
      Deprecated, use `target` instead.
    optional: true
    syntax:
      content: 'targetPoint?: IPoint'
      return:
        type:
          - IPoint
    package: office-ui-fabric-react
    deprecated:
      content: Use `target` instead.
  - uid: office-ui-fabric-react.IPositioningContainerProps.useTargetPoint
    name: useTargetPoint
    fullName: useTargetPoint
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If true use a point rather than rectangle to position the
      positioningContainer.

      For example it can be used to position based on a click.
    optional: true
    syntax:
      content: 'useTargetPoint?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
    deprecated:
      content: Do not use.
references:
  - uid: IBaseProps<office-ui-fabric-react.IPositioningContainer>
    name: IPositioningContainer>
    spec.typeScript:
      - name: IBaseProps<
        fullName: IBaseProps<
      - name: IPositioningContainer
        fullName: IPositioningContainer
        uid: office-ui-fabric-react.IPositioningContainer
      - name: '>'
        fullName: '>'
  - uid: IRefObject<office-ui-fabric-react.IPositioningContainer>
    name: IPositioningContainer>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: IPositioningContainer
        fullName: IPositioningContainer
        uid: office-ui-fabric-react.IPositioningContainer
      - name: '>'
        fullName: '>'
