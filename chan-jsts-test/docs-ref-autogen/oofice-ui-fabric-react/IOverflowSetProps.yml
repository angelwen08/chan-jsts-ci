### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IOverflowSetProps
    name: IOverflowSetProps
    fullName: IOverflowSetProps
    children:
      - office-ui-fabric-react.IOverflowSetProps.className
      - office-ui-fabric-react.IOverflowSetProps.componentRef
      - office-ui-fabric-react.IOverflowSetProps.doNotContainWithinFocusZone
      - office-ui-fabric-react.IOverflowSetProps.focusZoneProps
      - office-ui-fabric-react.IOverflowSetProps.items
      - office-ui-fabric-react.IOverflowSetProps.itemSubMenuProvider
      - office-ui-fabric-react.IOverflowSetProps.keytipSequences
      - office-ui-fabric-react.IOverflowSetProps.onRenderItem
      - office-ui-fabric-react.IOverflowSetProps.onRenderOverflowButton
      - office-ui-fabric-react.IOverflowSetProps.overflowItems
      - office-ui-fabric-react.IOverflowSetProps.role
      - office-ui-fabric-react.IOverflowSetProps.styles
      - office-ui-fabric-react.IOverflowSetProps.vertical
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory OverflowSet}'
    extends:
      name: ClassAttributes<office-ui-fabric-react.OverflowSetBase>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IOverflowSetProps.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: Class name
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IOverflowSetProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets the component ref.
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<IOverflowSet>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.IOverflowSet>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IOverflowSetProps.doNotContainWithinFocusZone
    name: doNotContainWithinFocusZone
    fullName: doNotContainWithinFocusZone
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      If true do not contain the OverflowSet inside of a FocusZone,
      otherwise the OverflowSet will contain a FocusZone.
      If this is set to true focusZoneProps will be ignored.
      Use one or the other.
    optional: true
    syntax:
      content: 'doNotContainWithinFocusZone?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IOverflowSetProps.focusZoneProps
    name: focusZoneProps
    fullName: focusZoneProps
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Custom properties for OverflowSet's FocusZone.

      If doNotContainWithinFocusZone is set to true focusZoneProps will be
      ignored.

      Use one or the other.
    optional: true
    syntax:
      content: 'focusZoneProps?: IFocusZoneProps'
      return:
        type:
          - office-ui-fabric-react.IFocusZoneProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IOverflowSetProps.items
    name: items
    fullName: items
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An array of items to be rendered by your onRenderItem function in the
      primary content area
    optional: true
    syntax:
      content: 'items?: IOverflowSetItemProps[]'
      return:
        type:
          - 'office-ui-fabric-react.IOverflowSetItemProps[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IOverflowSetProps.itemSubMenuProvider
    name: itemSubMenuProvider
    fullName: itemSubMenuProvider
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Function that will take in an IOverflowSetItemProps and return the subMenu
      for that item.

      If not provided, will use 'item.subMenuProps.items' by default.

      This is only used if your overflow set has keytips.
    optional: true
    syntax:
      content: 'itemSubMenuProvider?: (item: IOverflowSetItemProps) => any[] | undefined'
      return:
        type:
          - '(item: IOverflowSetItemProps) => any[] | undefined'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IOverflowSetProps.keytipSequences
    name: keytipSequences
    fullName: keytipSequences
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional full keytip sequence for the overflow button, if it will have a
      keytip.
    optional: true
    syntax:
      content: 'keytipSequences?: string[]'
      return:
        type:
          - 'string[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IOverflowSetProps.onRenderItem
    name: onRenderItem
    fullName: onRenderItem
    children: []
    langs:
      - typeScript
    type: property
    summary: Method to call when trying to render an item.
    syntax:
      content: 'onRenderItem: (item: IOverflowSetItemProps) => any'
      return:
        type:
          - '(item: IOverflowSetItemProps) => any'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IOverflowSetProps.onRenderOverflowButton
    name: onRenderOverflowButton
    fullName: onRenderOverflowButton
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Rendering method for overflow button and contextual menu. The argument to
      the function is

      the overflowItems passed in as props to this function.
    syntax:
      content: 'onRenderOverflowButton: IRenderFunction<any[]>'
      return:
        type:
          - 'IRenderFunction<any[]>'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IOverflowSetProps.overflowItems
    name: overflowItems
    fullName: overflowItems
    children: []
    langs:
      - typeScript
    type: property
    summary: An array of items to be passed to overflow contextual menu
    optional: true
    syntax:
      content: 'overflowItems?: IOverflowSetItemProps[]'
      return:
        type:
          - 'office-ui-fabric-react.IOverflowSetItemProps[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IOverflowSetProps.role
    name: role
    fullName: role
    children: []
    langs:
      - typeScript
    type: property
    summary: The role for the OverflowSet.
    optional: true
    syntax:
      content: 'role?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IOverflowSetProps.styles
    name: styles
    fullName: styles
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules.
    optional: true
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IOverflowSetProps, IOverflowSetStyles>'
      return:
        type:
          - >-
            IStyleFunctionOrObject<office-ui-fabric-react.IOverflowSetProps,
            office-ui-fabric-react.IOverflowSetStyles>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IOverflowSetProps.vertical
    name: vertical
    fullName: vertical
    children: []
    langs:
      - typeScript
    type: property
    summary: Change item layout direction to vertical/stacked.
    optional: true
    syntax:
      content: 'vertical?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
references:
  - uid: ClassAttributes<office-ui-fabric-react.OverflowSetBase>
    name: OverflowSetBase>
    spec.typeScript:
      - name: ClassAttributes<
        fullName: ClassAttributes<
      - name: OverflowSetBase
        fullName: OverflowSetBase
        uid: office-ui-fabric-react.OverflowSetBase
      - name: '>'
        fullName: '>'
  - uid: IRefObject<office-ui-fabric-react.IOverflowSet>
    name: IOverflowSet>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: IOverflowSet
        fullName: IOverflowSet
        uid: office-ui-fabric-react.IOverflowSet
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.IFocusZoneProps
    name: IFocusZoneProps
    spec.typeScript:
      - name: IFocusZoneProps
        fullName: IFocusZoneProps
        uid: office-ui-fabric-react.IFocusZoneProps
  - uid: 'office-ui-fabric-react.IOverflowSetItemProps[]'
    name: 'IOverflowSetItemProps[]'
    spec.typeScript:
      - name: IOverflowSetItemProps
        fullName: IOverflowSetItemProps
        uid: office-ui-fabric-react.IOverflowSetItemProps
      - name: '[]'
        fullName: '[]'
  - uid: >-
      IStyleFunctionOrObject<office-ui-fabric-react.IOverflowSetProps,
      office-ui-fabric-react.IOverflowSetStyles>
    name: IOverflowSetStyles>
    spec.typeScript:
      - name: IStyleFunctionOrObject<
        fullName: IStyleFunctionOrObject<
      - name: IOverflowSetProps
        fullName: IOverflowSetProps
        uid: office-ui-fabric-react.IOverflowSetProps
      - name: ', '
        fullName: ', '
      - name: IOverflowSetStyles
        fullName: IOverflowSetStyles
        uid: office-ui-fabric-react.IOverflowSetStyles
      - name: '>'
        fullName: '>'
