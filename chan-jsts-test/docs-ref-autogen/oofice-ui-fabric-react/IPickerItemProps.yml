### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IPickerItemProps
    name: IPickerItemProps
    fullName: IPickerItemProps<T>
    children:
      - office-ui-fabric-react.IPickerItemProps.componentRef
      - office-ui-fabric-react.IPickerItemProps.index
      - office-ui-fabric-react.IPickerItemProps.item
      - office-ui-fabric-react.IPickerItemProps.key
      - office-ui-fabric-react.IPickerItemProps.onItemChange
      - office-ui-fabric-react.IPickerItemProps.onRemoveItem
      - office-ui-fabric-react.IPickerItemProps.removeButtonAriaLabel
      - office-ui-fabric-react.IPickerItemProps.selected
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: |-
      PickerItem props common for any type of items.
      {@docCategory Pickers}
    extends:
      name: AllHTMLAttributes<HTMLElement>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPickerItemProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional callback to access the IPickerItem interface. Use this instead of
      ref for accessing

      the public methods and properties of the component.
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<IPickerItem>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.IPickerItem>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPickerItemProps.index
    name: index
    fullName: index
    children: []
    langs:
      - typeScript
    type: property
    summary: Index number of the item in the array of picked items.
    syntax:
      content: 'index: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPickerItemProps.item
    name: item
    fullName: item
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The item of Type T (Persona, Tag, or any other custom item provided).'
    syntax:
      content: 'item: T'
      return:
        type:
          - T
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPickerItemProps.key
    name: key
    fullName: key
    children: []
    langs:
      - typeScript
    type: property
    summary: Unique key for each picked item.
    optional: true
    syntax:
      content: 'key?: string | number'
      return:
        type:
          - string | number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPickerItemProps.onItemChange
    name: onItemChange
    fullName: onItemChange
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Internal Use only, gives a callback to the renderer to call when an item
      has changed.

      This allows the base picker to keep track of changes in the items.
    optional: true
    syntax:
      content: 'onItemChange?: (item: T, index: number) => void'
      return:
        type:
          - '(item: T, index: number) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPickerItemProps.onRemoveItem
    name: onRemoveItem
    fullName: onRemoveItem
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback issued when the item is removed from the array of picked items.
    optional: true
    syntax:
      content: 'onRemoveItem?: () => void'
      return:
        type:
          - () => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPickerItemProps.removeButtonAriaLabel
    name: removeButtonAriaLabel
    fullName: removeButtonAriaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: Aria-label for the picked item remove button.
    optional: true
    syntax:
      content: 'removeButtonAriaLabel?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IPickerItemProps.selected
    name: selected
    fullName: selected
    children: []
    langs:
      - typeScript
    type: property
    summary: Wether the picked item is selected or not.
    optional: true
    syntax:
      content: 'selected?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
references:
  - uid: IRefObject<office-ui-fabric-react.IPickerItem>
    name: IPickerItem>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: IPickerItem
        fullName: IPickerItem
        uid: office-ui-fabric-react.IPickerItem
      - name: '>'
        fullName: '>'
