### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.ITextFieldProps
    name: ITextFieldProps
    fullName: ITextFieldProps
    children:
      - office-ui-fabric-react.ITextFieldProps.addonString
      - office-ui-fabric-react.ITextFieldProps.ariaLabel
      - office-ui-fabric-react.ITextFieldProps.autoAdjustHeight
      - office-ui-fabric-react.ITextFieldProps.autoComplete
      - office-ui-fabric-react.ITextFieldProps.borderless
      - office-ui-fabric-react.ITextFieldProps.className
      - office-ui-fabric-react.ITextFieldProps.componentId
      - office-ui-fabric-react.ITextFieldProps.componentRef
      - office-ui-fabric-react.ITextFieldProps.defaultValue
      - office-ui-fabric-react.ITextFieldProps.deferredValidationTime
      - office-ui-fabric-react.ITextFieldProps.description
      - office-ui-fabric-react.ITextFieldProps.disabled
      - office-ui-fabric-react.ITextFieldProps.errorMessage
      - office-ui-fabric-react.ITextFieldProps.iconClass
      - office-ui-fabric-react.ITextFieldProps.iconProps
      - office-ui-fabric-react.ITextFieldProps.inputClassName
      - office-ui-fabric-react.ITextFieldProps.label
      - office-ui-fabric-react.ITextFieldProps.mask
      - office-ui-fabric-react.ITextFieldProps.maskChar
      - office-ui-fabric-react.ITextFieldProps.maskFormat
      - office-ui-fabric-react.ITextFieldProps.multiline
      - office-ui-fabric-react.ITextFieldProps.onBeforeChange
      - office-ui-fabric-react.ITextFieldProps.onChange
      - office-ui-fabric-react.ITextFieldProps.onChanged
      - office-ui-fabric-react.ITextFieldProps.onGetErrorMessage
      - office-ui-fabric-react.ITextFieldProps.onNotifyValidationResult
      - office-ui-fabric-react.ITextFieldProps.onRenderAddon
      - office-ui-fabric-react.ITextFieldProps.onRenderDescription
      - office-ui-fabric-react.ITextFieldProps.onRenderLabel
      - office-ui-fabric-react.ITextFieldProps.onRenderPrefix
      - office-ui-fabric-react.ITextFieldProps.onRenderSuffix
      - office-ui-fabric-react.ITextFieldProps.prefix
      - office-ui-fabric-react.ITextFieldProps.readOnly
      - office-ui-fabric-react.ITextFieldProps.resizable
      - office-ui-fabric-react.ITextFieldProps.styles
      - office-ui-fabric-react.ITextFieldProps.suffix
      - office-ui-fabric-react.ITextFieldProps.theme
      - office-ui-fabric-react.ITextFieldProps.underlined
      - office-ui-fabric-react.ITextFieldProps.validateOnFocusIn
      - office-ui-fabric-react.ITextFieldProps.validateOnFocusOut
      - office-ui-fabric-react.ITextFieldProps.validateOnLoad
      - office-ui-fabric-react.ITextFieldProps.value
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: |-
      TextField component props.
      {@docCategory TextField}
    extends:
      name: AllHTMLAttributes<HTMLInputElement | HTMLTextAreaElement>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.addonString
    name: addonString
    fullName: addonString
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'addonString?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
    deprecated:
      content: Use `prefix` instead.
  - uid: office-ui-fabric-react.ITextFieldProps.ariaLabel
    name: ariaLabel
    fullName: ariaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: Aria label for the text field.
    optional: true
    syntax:
      content: 'ariaLabel?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.autoAdjustHeight
    name: autoAdjustHeight
    fullName: autoAdjustHeight
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      For multiline text fields, whether or not to auto adjust text field
      height.
    optional: true
    syntax:
      content: 'autoAdjustHeight?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.autoComplete
    name: autoComplete
    fullName: autoComplete
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Whether the input field should have autocomplete enabled.

      This tells the browser to display options based on earlier typed values.

      Common values are 'on' and 'off' but for all possible values see the
      following links:

      https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete#Values

      https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill
    optional: true
    syntax:
      content: 'autoComplete?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.borderless
    name: borderless
    fullName: borderless
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether or not the text field is borderless.
    optional: true
    syntax:
      content: 'borderless?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional class name that is added to the container of the component.
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.componentId
    name: componentId
    fullName: componentId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'componentId?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
    deprecated:
      content: Serves no function.
  - uid: office-ui-fabric-react.ITextFieldProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional callback to access the ITextField component. Use this instead of
      ref for accessing

      the public methods and properties of the component.
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<ITextField>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.ITextField>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.defaultValue
    name: defaultValue
    fullName: defaultValue
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Default value of the text field. Only provide this if the text field is an
      uncontrolled component;

      otherwise, use the `value` property.
    optional: true
    syntax:
      content: 'defaultValue?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.deferredValidationTime
    name: deferredValidationTime
    fullName: deferredValidationTime
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Text field will start to validate after users stop typing for
      `deferredValidationTime` milliseconds.
    optional: true
    syntax:
      content: 'deferredValidationTime?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.description
    name: description
    fullName: description
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Description displayed below the text field to provide additional details
      about what text to enter.
    optional: true
    syntax:
      content: 'description?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.disabled
    name: disabled
    fullName: disabled
    children: []
    langs:
      - typeScript
    type: property
    summary: Disabled state of the text field.
    optional: true
    syntax:
      content: 'disabled?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.errorMessage
    name: errorMessage
    fullName: errorMessage
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Static error message displayed below the text field. Use
      `onGetErrorMessage` to dynamically

      change the error message displayed (if any) based on the current value.
      `errorMessage` and

      `onGetErrorMessage` are mutually exclusive (`errorMessage` takes
      precedence).
    optional: true
    syntax:
      content: 'errorMessage?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.iconClass
    name: iconClass
    fullName: iconClass
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'iconClass?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
    deprecated:
      content: Use `iconProps` instead.
  - uid: office-ui-fabric-react.ITextFieldProps.iconProps
    name: iconProps
    fullName: iconProps
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Props for an optional icon, displayed in the far right end of the text
      field.
    optional: true
    syntax:
      content: 'iconProps?: IIconProps'
      return:
        type:
          - office-ui-fabric-react.IIconProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.inputClassName
    name: inputClassName
    fullName: inputClassName
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional class name that is added specifically to the input/textarea
      element.
    optional: true
    syntax:
      content: 'inputClassName?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.label
    name: label
    fullName: label
    children: []
    langs:
      - typeScript
    type: property
    summary: Label displayed above the text field (and read by screen readers).
    optional: true
    syntax:
      content: 'label?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.mask
    name: mask
    fullName: mask
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The masking string that defines the mask's behavior.
      A backslash will escape any character.
      Special format characters are:
      '9': [0-9]
      'a': [a-zA-Z]
      '*': [a-zA-Z0-9]
    optional: true
    syntax:
      content: 'mask?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.maskChar
    name: maskChar
    fullName: maskChar
    children: []
    langs:
      - typeScript
    type: property
    summary: The character to show in place of unfilled characters of the mask.
    optional: true
    syntax:
      content: 'maskChar?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.maskFormat
    name: maskFormat
    fullName: maskFormat
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      An object defining the format characters and corresponding regexp values.
      Default format characters: \{
       '9': /[0-9]/,
       'a': /[a-zA-Z]/,
       '*': /[a-zA-Z0-9]/
      \}
    optional: true
    syntax:
      content: 'maskFormat?: [key: string]: RegExp'
      return:
        type:
          - '[key: string]: RegExp'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.multiline
    name: multiline
    fullName: multiline
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether or not the text field is a multiline text field.
    optional: true
    syntax:
      content: 'multiline?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.onBeforeChange
    name: onBeforeChange
    fullName: onBeforeChange
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Called after the input's value updates but before re-rendering.

      Unlike `onChange`, this is also called when the value is updated via
      props.

      NOTE: This should be used *very* rarely. `onChange` is more appropriate
      for most situations.
    optional: true
    syntax:
      content: 'onBeforeChange?: (newValue?: string) => void'
      return:
        type:
          - '(newValue?: string) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.onChange
    name: onChange
    fullName: onChange
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Callback for when the input value changes.
      This is called on both `input` and `change` native events.
    optional: true
    syntax:
      content: >-
        onChange?: (event: FormEvent<HTMLInputElement | HTMLTextAreaElement>,
        newValue?: string) => void
      return:
        type:
          - >-
            (event: FormEvent<HTMLInputElement | HTMLTextAreaElement>,
            newValue?: string) => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.onChanged
    name: onChanged
    fullName: onChanged
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'onChanged?: (newValue: any) => void'
      return:
        type:
          - '(newValue: any) => void'
    package: office-ui-fabric-react
    deprecated:
      content: Use `onChange` instead.
  - uid: office-ui-fabric-react.ITextFieldProps.onGetErrorMessage
    name: onGetErrorMessage
    fullName: onGetErrorMessage
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Function used to determine whether the input value is valid and get an
      error message if not.

      Mutually exclusive with the static string `errorMessage` (it will take
      precedence over this).

      When it returns string:

      - If valid, it returns empty string.

      - If invalid, it returns the error message string and the text field will
        show a red border and show an error message below the text field.

      When it returns Promise<string>:

      - The resolved value is displayed as the error message.

      - If rejected, the value is thrown away.
    optional: true
    syntax:
      content: >-
        onGetErrorMessage?: (value: string) => string | PromiseLike<string> |
        undefined
      return:
        type:
          - '(value: string) => string | PromiseLike<string> | undefined'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.onNotifyValidationResult
    name: onNotifyValidationResult
    fullName: onNotifyValidationResult
    children: []
    langs:
      - typeScript
    type: property
    summary: Function called after validation completes.
    optional: true
    syntax:
      content: >-
        onNotifyValidationResult?: (errorMessage: string, value: string |
        undefined) => void
      return:
        type:
          - '(errorMessage: string, value: string | undefined) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.onRenderAddon
    name: onRenderAddon
    fullName: onRenderAddon
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'onRenderAddon?: IRenderFunction<ITextFieldProps>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.ITextFieldProps>
    package: office-ui-fabric-react
    deprecated:
      content: Use `onRenderPrefix` instead.
  - uid: office-ui-fabric-react.ITextFieldProps.onRenderDescription
    name: onRenderDescription
    fullName: onRenderDescription
    children: []
    langs:
      - typeScript
    type: property
    summary: Custom renderer for the description.
    optional: true
    syntax:
      content: 'onRenderDescription?: IRenderFunction<ITextFieldProps>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.ITextFieldProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.onRenderLabel
    name: onRenderLabel
    fullName: onRenderLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: Custom renderer for the label.
    optional: true
    syntax:
      content: 'onRenderLabel?: IRenderFunction<ITextFieldProps>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.ITextFieldProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.onRenderPrefix
    name: onRenderPrefix
    fullName: onRenderPrefix
    children: []
    langs:
      - typeScript
    type: property
    summary: Custom render function for prefix.
    optional: true
    syntax:
      content: 'onRenderPrefix?: IRenderFunction<ITextFieldProps>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.ITextFieldProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.onRenderSuffix
    name: onRenderSuffix
    fullName: onRenderSuffix
    children: []
    langs:
      - typeScript
    type: property
    summary: Custom render function for suffix.
    optional: true
    syntax:
      content: 'onRenderSuffix?: IRenderFunction<ITextFieldProps>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.ITextFieldProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.prefix
    name: prefix
    fullName: prefix
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Prefix displayed before the text field contents. This is not included in
      the value.

      Ensure a descriptive label is present to assist screen readers, as the
      value does not include the prefix.
    optional: true
    syntax:
      content: 'prefix?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.readOnly
    name: readOnly
    fullName: readOnly
    children: []
    langs:
      - typeScript
    type: property
    summary: 'If true, the text field is readonly.'
    optional: true
    syntax:
      content: 'readOnly?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.resizable
    name: resizable
    fullName: resizable
    children: []
    langs:
      - typeScript
    type: property
    summary: 'For multiline text fields, whether or not the field is resizable.'
    optional: true
    syntax:
      content: 'resizable?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.styles
    name: styles
    fullName: styles
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules.
    optional: true
    syntax:
      content: 'styles?: IStyleFunctionOrObject<ITextFieldStyleProps, ITextFieldStyles>'
      return:
        type:
          - >-
            IStyleFunctionOrObject<office-ui-fabric-react.ITextFieldStyleProps,
            office-ui-fabric-react.ITextFieldStyles>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.suffix
    name: suffix
    fullName: suffix
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Suffix displayed after the text field contents. This is not included in
      the value.

      Ensure a descriptive label is present to assist screen readers, as the
      value does not include the suffix.
    optional: true
    syntax:
      content: 'suffix?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.theme
    name: theme
    fullName: theme
    children: []
    langs:
      - typeScript
    type: property
    summary: Theme (provided through customization).
    optional: true
    syntax:
      content: 'theme?: ITheme'
      return:
        type:
          - ITheme
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.underlined
    name: underlined
    fullName: underlined
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether or not the text field is underlined.
    optional: true
    syntax:
      content: 'underlined?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.validateOnFocusIn
    name: validateOnFocusIn
    fullName: validateOnFocusIn
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Run validation when focus moves into the input, and **do not** validate on
      change.

      (Unless this prop and/or `validateOnFocusOut` is set to true, validation
      will run on every change.)
    optional: true
    syntax:
      content: 'validateOnFocusIn?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.validateOnFocusOut
    name: validateOnFocusOut
    fullName: validateOnFocusOut
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Run validation when focus moves out of the input, and **do not** validate
      on change.

      (Unless this prop and/or `validateOnFocusIn` is set to true, validation
      will run on every change.)
    optional: true
    syntax:
      content: 'validateOnFocusOut?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.validateOnLoad
    name: validateOnLoad
    fullName: validateOnLoad
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether validation should run when the input is initially rendered.
    optional: true
    syntax:
      content: 'validateOnLoad?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ITextFieldProps.value
    name: value
    fullName: value
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Current value of the text field. Only provide this if the text field is a
      controlled component where you

      are maintaining its current state; otherwise, use the `defaultValue`
      property.
    optional: true
    syntax:
      content: 'value?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
references:
  - uid: IRefObject<office-ui-fabric-react.ITextField>
    name: ITextField>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: ITextField
        fullName: ITextField
        uid: office-ui-fabric-react.ITextField
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.IIconProps
    name: IIconProps
    spec.typeScript:
      - name: IIconProps
        fullName: IIconProps
        uid: office-ui-fabric-react.IIconProps
  - uid: IRenderFunction<office-ui-fabric-react.ITextFieldProps>
    name: ITextFieldProps>
    spec.typeScript:
      - name: IRenderFunction<
        fullName: IRenderFunction<
      - name: ITextFieldProps
        fullName: ITextFieldProps
        uid: office-ui-fabric-react.ITextFieldProps
      - name: '>'
        fullName: '>'
  - uid: >-
      IStyleFunctionOrObject<office-ui-fabric-react.ITextFieldStyleProps,
      office-ui-fabric-react.ITextFieldStyles>
    name: ITextFieldStyles>
    spec.typeScript:
      - name: IStyleFunctionOrObject<
        fullName: IStyleFunctionOrObject<
      - name: ITextFieldStyleProps
        fullName: ITextFieldStyleProps
        uid: office-ui-fabric-react.ITextFieldStyleProps
      - name: ', '
        fullName: ', '
      - name: ITextFieldStyles
        fullName: ITextFieldStyles
        uid: office-ui-fabric-react.ITextFieldStyles
      - name: '>'
        fullName: '>'
