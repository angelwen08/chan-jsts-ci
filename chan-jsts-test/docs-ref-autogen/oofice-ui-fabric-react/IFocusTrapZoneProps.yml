### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IFocusTrapZoneProps
    name: IFocusTrapZoneProps
    fullName: IFocusTrapZoneProps
    children:
      - office-ui-fabric-react.IFocusTrapZoneProps.ariaLabelledBy
      - office-ui-fabric-react.IFocusTrapZoneProps.componentRef
      - office-ui-fabric-react.IFocusTrapZoneProps.disabled
      - office-ui-fabric-react.IFocusTrapZoneProps.disableFirstFocus
      - office-ui-fabric-react.IFocusTrapZoneProps.elementToFocusOnDismiss
      - office-ui-fabric-react.IFocusTrapZoneProps.firstFocusableSelector
      - >-
        office-ui-fabric-react.IFocusTrapZoneProps.focusPreviouslyFocusedInnerElement
      - office-ui-fabric-react.IFocusTrapZoneProps.forceFocusInsideTrap
      - office-ui-fabric-react.IFocusTrapZoneProps.ignoreExternalFocusing
      - office-ui-fabric-react.IFocusTrapZoneProps.isClickableOutsideFocusTrap
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory FocusTrapZone}'
    extends:
      name: HTMLAttributes<HTMLDivElement>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFocusTrapZoneProps.ariaLabelledBy
    name: ariaLabelledBy
    fullName: ariaLabelledBy
    children: []
    langs:
      - typeScript
    type: property
    summary: Sets the aria-labelledby attribute.
    optional: true
    syntax:
      content: 'ariaLabelledBy?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFocusTrapZoneProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional callback to access the IFocusTrapZone interface. Use this instead
      of ref for accessing

      the public methods and properties of the component.
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<IFocusTrapZone>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.IFocusTrapZone>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFocusTrapZoneProps.disabled
    name: disabled
    fullName: disabled
    children: []
    langs:
      - typeScript
    type: property
    summary: Disables the FocusTrapZone's focus trapping behavior when set.
    optional: true
    syntax:
      content: 'disabled?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFocusTrapZoneProps.disableFirstFocus
    name: disableFirstFocus
    fullName: disableFirstFocus
    children: []
    langs:
      - typeScript
    type: property
    summary: Do not put focus onto first element when render focus trap zone
    optional: true
    syntax:
      content: 'disableFirstFocus?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFocusTrapZoneProps.elementToFocusOnDismiss
    name: elementToFocusOnDismiss
    fullName: elementToFocusOnDismiss
    children: []
    langs:
      - typeScript
    type: property
    summary: Sets the HTMLElement to focus on when exiting the FocusTrapZone.
    optional: true
    syntax:
      content: 'elementToFocusOnDismiss?: HTMLElement'
      return:
        type:
          - HTMLElement
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFocusTrapZoneProps.firstFocusableSelector
    name: firstFocusableSelector
    fullName: firstFocusableSelector
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Class name for first focusable item (do not append a dot).
      Only applies if `focusPreviouslyFocusedInnerElement` is false.
    optional: true
    syntax:
      content: 'firstFocusableSelector?: string | () => string'
      return:
        type:
          - string | () => string
    package: office-ui-fabric-react
  - uid: >-
      office-ui-fabric-react.IFocusTrapZoneProps.focusPreviouslyFocusedInnerElement
    name: focusPreviouslyFocusedInnerElement
    fullName: focusPreviouslyFocusedInnerElement
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Specifies the algorithm used to determine which descendant element to
      focus when focus() is called.

      If false, the first focusable descendant, filtered by the
      firstFocusableSelector property if present, is chosen.

      If true, the element that was focused when the Trap Zone last had a
      focused descendant is chosen.

      If it has never had a focused descendant before, behavior falls back to
      the first focused descendant.
    optional: true
    syntax:
      content: 'focusPreviouslyFocusedInnerElement?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFocusTrapZoneProps.forceFocusInsideTrap
    name: forceFocusInsideTrap
    fullName: forceFocusInsideTrap
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Indicates whether focus trap zone should force focus inside the focus trap
      zone
    optional: true
    syntax:
      content: 'forceFocusInsideTrap?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFocusTrapZoneProps.ignoreExternalFocusing
    name: ignoreExternalFocusing
    fullName: ignoreExternalFocusing
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Indicates if this Trap Zone will ignore keeping track of HTMLElement that
      activated the Zone.
    optional: true
    syntax:
      content: 'ignoreExternalFocusing?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFocusTrapZoneProps.isClickableOutsideFocusTrap
    name: isClickableOutsideFocusTrap
    fullName: isClickableOutsideFocusTrap
    children: []
    langs:
      - typeScript
    type: property
    summary: Indicates if this Trap Zone will allow clicks outside the FocusTrapZone
    optional: true
    syntax:
      content: 'isClickableOutsideFocusTrap?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
references:
  - uid: IRefObject<office-ui-fabric-react.IFocusTrapZone>
    name: IFocusTrapZone>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: IFocusTrapZone
        fullName: IFocusTrapZone
        uid: office-ui-fabric-react.IFocusTrapZone
      - name: '>'
        fullName: '>'
