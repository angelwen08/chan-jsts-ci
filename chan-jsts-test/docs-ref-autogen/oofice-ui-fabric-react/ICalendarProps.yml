### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.ICalendarProps
    name: ICalendarProps
    fullName: ICalendarProps
    children:
      - office-ui-fabric-react.ICalendarProps.allFocusable
      - office-ui-fabric-react.ICalendarProps.autoNavigateOnSelection
      - office-ui-fabric-react.ICalendarProps.className
      - office-ui-fabric-react.ICalendarProps.componentRef
      - office-ui-fabric-react.ICalendarProps.dateRangeType
      - office-ui-fabric-react.ICalendarProps.dateTimeFormatter
      - office-ui-fabric-react.ICalendarProps.firstDayOfWeek
      - office-ui-fabric-react.ICalendarProps.firstWeekOfYear
      - office-ui-fabric-react.ICalendarProps.highlightCurrentMonth
      - office-ui-fabric-react.ICalendarProps.highlightSelectedMonth
      - office-ui-fabric-react.ICalendarProps.isDayPickerVisible
      - office-ui-fabric-react.ICalendarProps.isMonthPickerVisible
      - office-ui-fabric-react.ICalendarProps.maxDate
      - office-ui-fabric-react.ICalendarProps.minDate
      - office-ui-fabric-react.ICalendarProps.navigationIcons
      - office-ui-fabric-react.ICalendarProps.onDismiss
      - office-ui-fabric-react.ICalendarProps.onSelectDate
      - office-ui-fabric-react.ICalendarProps.restrictedDates
      - office-ui-fabric-react.ICalendarProps.selectDateOnClick
      - office-ui-fabric-react.ICalendarProps.shouldFocusOnMount
      - office-ui-fabric-react.ICalendarProps.showCloseButton
      - office-ui-fabric-react.ICalendarProps.showGoToToday
      - office-ui-fabric-react.ICalendarProps.showMonthPickerAsOverlay
      - office-ui-fabric-react.ICalendarProps.showSixWeeksByDefault
      - office-ui-fabric-react.ICalendarProps.showWeekNumbers
      - office-ui-fabric-react.ICalendarProps.strings
      - office-ui-fabric-react.ICalendarProps.today
      - office-ui-fabric-react.ICalendarProps.value
      - office-ui-fabric-react.ICalendarProps.workWeekDays
      - office-ui-fabric-react.ICalendarProps.yearPickerHidden
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory Calendar}'
    extends:
      name: IBaseProps<office-ui-fabric-react.ICalendar>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.allFocusable
    name: allFocusable
    fullName: allFocusable
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Allows all dates and buttons to be focused, including disabled ones'
    optional: true
    syntax:
      content: 'allFocusable?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.autoNavigateOnSelection
    name: autoNavigateOnSelection
    fullName: autoNavigateOnSelection
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Whether the month view should automatically navigate to the next or
      previous date range

      depending on the selected date. If this property is set to true and the
      currently displayed

      month is March 2017, if the user clicks on a day outside the month, i.e.,
      April 1st, the

      picker will automatically navigate to the month of April.
    optional: true
    syntax:
      content: 'autoNavigateOnSelection?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional class name to add to the root element.
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional callback to access the ICalendar interface. Use this instead of
      ref for accessing

      the public methods and properties of the component.
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<ICalendar>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.ICalendar>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.dateRangeType
    name: dateRangeType
    fullName: dateRangeType
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The date range type indicating how  many days should be selected as the
      user

      selects days
    optional: true
    syntax:
      content: 'dateRangeType?: DateRangeType'
      return:
        type:
          - office-ui-fabric-react.DateRangeType
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.dateTimeFormatter
    name: dateTimeFormatter
    fullName: dateTimeFormatter
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Apply additional formating to dates, for example localized date
      formatting.
    optional: true
    syntax:
      content: 'dateTimeFormatter?: ICalendarFormatDateCallbacks'
      return:
        type:
          - office-ui-fabric-react.ICalendarFormatDateCallbacks
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.firstDayOfWeek
    name: firstDayOfWeek
    fullName: firstDayOfWeek
    children: []
    langs:
      - typeScript
    type: property
    summary: The first day of the week for your locale.
    optional: true
    syntax:
      content: 'firstDayOfWeek?: DayOfWeek'
      return:
        type:
          - office-ui-fabric-react.DayOfWeek
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.firstWeekOfYear
    name: firstWeekOfYear
    fullName: firstWeekOfYear
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Defines when the first week of the year should start,
      FirstWeekOfYear.FirstDay,

      FirstWeekOfYear.FirstFullWeek or FirstWeekOfYear.FirstFourDayWeek are the
      possible values
    optional: true
    syntax:
      content: 'firstWeekOfYear?: FirstWeekOfYear'
      return:
        type:
          - office-ui-fabric-react.FirstWeekOfYear
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.highlightCurrentMonth
    name: highlightCurrentMonth
    fullName: highlightCurrentMonth
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether the month picker should highlight the current month
    optional: true
    syntax:
      content: 'highlightCurrentMonth?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.highlightSelectedMonth
    name: highlightSelectedMonth
    fullName: highlightSelectedMonth
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether the month picker should highlight the selected month
    optional: true
    syntax:
      content: 'highlightSelectedMonth?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.isDayPickerVisible
    name: isDayPickerVisible
    fullName: isDayPickerVisible
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether the day picker is shown beside the month picker or hidden.
    optional: true
    syntax:
      content: 'isDayPickerVisible?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.isMonthPickerVisible
    name: isMonthPickerVisible
    fullName: isMonthPickerVisible
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether the month picker is shown beside the day picker or hidden.
    optional: true
    syntax:
      content: 'isMonthPickerVisible?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.maxDate
    name: maxDate
    fullName: maxDate
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If set the Calendar will not allow navigation to or selection of a date
      later than this value.
    optional: true
    syntax:
      content: 'maxDate?: Date'
      return:
        type:
          - Date
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.minDate
    name: minDate
    fullName: minDate
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If set the Calendar will not allow navigation to or selection of a date
      earlier than this value.
    optional: true
    syntax:
      content: 'minDate?: Date'
      return:
        type:
          - Date
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.navigationIcons
    name: navigationIcons
    fullName: navigationIcons
    children: []
    langs:
      - typeScript
    type: property
    summary: Customize navigation icons using ICalendarIconStrings
    optional: true
    syntax:
      content: 'navigationIcons?: ICalendarIconStrings'
      return:
        type:
          - office-ui-fabric-react.ICalendarIconStrings
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.onDismiss
    name: onDismiss
    fullName: onDismiss
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback issued when calendar is closed
    optional: true
    syntax:
      content: 'onDismiss?: () => void'
      return:
        type:
          - () => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.onSelectDate
    name: onSelectDate
    fullName: onSelectDate
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback issued when a date is selected
    optional: true
    syntax:
      content: 'onSelectDate?: (date: Date, selectedDateRangeArray?: Date[]) => void'
      return:
        type:
          - '(date: Date, selectedDateRangeArray?: Date[]) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.restrictedDates
    name: restrictedDates
    fullName: restrictedDates
    children: []
    langs:
      - typeScript
    type: property
    summary: If set the Calendar will not allow selection of dates in this array.
    optional: true
    syntax:
      content: 'restrictedDates?: Date[]'
      return:
        type:
          - 'Date[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.selectDateOnClick
    name: selectDateOnClick
    fullName: selectDateOnClick
    children: []
    langs:
      - typeScript
    type: property
    summary: 'When clicking on "Today", select the date and close the calendar.'
    optional: true
    syntax:
      content: 'selectDateOnClick?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.shouldFocusOnMount
    name: shouldFocusOnMount
    fullName: shouldFocusOnMount
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      This property has been removed at 0.80.0 in place of the `focus` method,
      to be removed \@ 1.0.0.
    optional: true
    syntax:
      content: 'shouldFocusOnMount?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
    deprecated:
      content: Replaced with the `focus` method.
  - uid: office-ui-fabric-react.ICalendarProps.showCloseButton
    name: showCloseButton
    fullName: showCloseButton
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether the close button should be shown or not
    optional: true
    syntax:
      content: 'showCloseButton?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.showGoToToday
    name: showGoToToday
    fullName: showGoToToday
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether the "Go to today" link should be shown or not
    optional: true
    syntax:
      content: 'showGoToToday?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.showMonthPickerAsOverlay
    name: showMonthPickerAsOverlay
    fullName: showMonthPickerAsOverlay
    children: []
    langs:
      - typeScript
    type: property
    summary: Show month picker on top of date picker when visible.
    optional: true
    syntax:
      content: 'showMonthPickerAsOverlay?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.showSixWeeksByDefault
    name: showSixWeeksByDefault
    fullName: showSixWeeksByDefault
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether the calendar should show 6 weeks by default.
    optional: true
    syntax:
      content: 'showSixWeeksByDefault?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.showWeekNumbers
    name: showWeekNumbers
    fullName: showWeekNumbers
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Whether the calendar should show the week number (weeks 1 to 53) before
      each week row
    optional: true
    syntax:
      content: 'showWeekNumbers?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.strings
    name: strings
    fullName: strings
    children: []
    langs:
      - typeScript
    type: property
    summary: Localized strings to use in the Calendar
    syntax:
      content: 'strings: ICalendarStrings | null'
      return:
        type:
          - office-ui-fabric-react.ICalendarStrings | null
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.today
    name: today
    fullName: today
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Value of today. If null, current time in client machine will be used.'
    optional: true
    syntax:
      content: 'today?: Date'
      return:
        type:
          - Date
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.value
    name: value
    fullName: value
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Default value of the Calendar, if any'
    optional: true
    syntax:
      content: 'value?: Date'
      return:
        type:
          - Date
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.workWeekDays
    name: workWeekDays
    fullName: workWeekDays
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The days that are selectable when dateRangeType is WorkWeek. If
      dateRangeType is not WorkWeek this property does nothing.
    optional: true
    syntax:
      content: 'workWeekDays?: DayOfWeek[]'
      return:
        type:
          - 'office-ui-fabric-react.DayOfWeek[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarProps.yearPickerHidden
    name: yearPickerHidden
    fullName: yearPickerHidden
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether the year picker is enabled
    optional: true
    syntax:
      content: 'yearPickerHidden?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
references:
  - uid: IBaseProps<office-ui-fabric-react.ICalendar>
    name: ICalendar>
    spec.typeScript:
      - name: IBaseProps<
        fullName: IBaseProps<
      - name: ICalendar
        fullName: ICalendar
        uid: office-ui-fabric-react.ICalendar
      - name: '>'
        fullName: '>'
  - uid: IRefObject<office-ui-fabric-react.ICalendar>
    name: ICalendar>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: ICalendar
        fullName: ICalendar
        uid: office-ui-fabric-react.ICalendar
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.DateRangeType
    name: DateRangeType
    spec.typeScript:
      - name: DateRangeType
        fullName: DateRangeType
        uid: office-ui-fabric-react.DateRangeType
  - uid: office-ui-fabric-react.ICalendarFormatDateCallbacks
    name: ICalendarFormatDateCallbacks
    spec.typeScript:
      - name: ICalendarFormatDateCallbacks
        fullName: ICalendarFormatDateCallbacks
        uid: office-ui-fabric-react.ICalendarFormatDateCallbacks
  - uid: office-ui-fabric-react.DayOfWeek
    name: DayOfWeek
    spec.typeScript:
      - name: DayOfWeek
        fullName: DayOfWeek
        uid: office-ui-fabric-react.DayOfWeek
  - uid: office-ui-fabric-react.FirstWeekOfYear
    name: FirstWeekOfYear
    spec.typeScript:
      - name: FirstWeekOfYear
        fullName: FirstWeekOfYear
        uid: office-ui-fabric-react.FirstWeekOfYear
  - uid: office-ui-fabric-react.ICalendarIconStrings
    name: ICalendarIconStrings
    spec.typeScript:
      - name: ICalendarIconStrings
        fullName: ICalendarIconStrings
        uid: office-ui-fabric-react.ICalendarIconStrings
  - uid: office-ui-fabric-react.ICalendarStrings | null
    name: ICalendarStrings | null
    spec.typeScript:
      - name: ICalendarStrings
        fullName: ICalendarStrings
        uid: office-ui-fabric-react.ICalendarStrings
      - name: ' | null'
        fullName: ' | null'
  - uid: 'office-ui-fabric-react.DayOfWeek[]'
    name: 'DayOfWeek[]'
    spec.typeScript:
      - name: DayOfWeek
        fullName: DayOfWeek
        uid: office-ui-fabric-react.DayOfWeek
      - name: '[]'
        fullName: '[]'
