### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IResizeGroupState
    name: IResizeGroupState
    fullName: IResizeGroupState
    children:
      - office-ui-fabric-react.IResizeGroupState.dataToMeasure
      - office-ui-fabric-react.IResizeGroupState.measureContainer
      - office-ui-fabric-react.IResizeGroupState.renderedData
      - office-ui-fabric-react.IResizeGroupState.resizeDirection
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: ''
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IResizeGroupState.dataToMeasure
    name: dataToMeasure
    fullName: dataToMeasure
    children: []
    langs:
      - typeScript
    type: property
    summary: Data to render in a hidden div for measurement
    optional: true
    syntax:
      content: 'dataToMeasure?: any'
      return:
        type:
          - any
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IResizeGroupState.measureContainer
    name: measureContainer
    fullName: measureContainer
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Set to true when the content container might have new dimensions and
      should

      be remeasured.
    optional: true
    syntax:
      content: 'measureContainer?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IResizeGroupState.renderedData
    name: renderedData
    fullName: renderedData
    children: []
    langs:
      - typeScript
    type: property
    summary: Final data used to render proper sized component
    optional: true
    syntax:
      content: 'renderedData?: any'
      return:
        type:
          - any
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IResizeGroupState.resizeDirection
    name: resizeDirection
    fullName: resizeDirection
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Are we resizing to accommodate having more or less available space?

      The 'grow' direction is when the container may have more room than the
      last render,

      such as when a window resize occurs. This means we will try to fit more
      content in the window.

      The 'shrink' direction is when the contents don't fit in the container and
      we need

      to find a transformation of the data that makes everything fit.
    optional: true
    syntax:
      content: 'resizeDirection?: "grow" | "shrink"'
      return:
        type:
          - '"grow" | "shrink"'
    package: office-ui-fabric-react
