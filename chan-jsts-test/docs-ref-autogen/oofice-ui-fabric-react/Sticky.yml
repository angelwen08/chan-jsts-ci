### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.Sticky
    name: Sticky
    fullName: Sticky<SS>
    children:
      - office-ui-fabric-react.Sticky.addSticky
      - office-ui-fabric-react.Sticky.canStickyBottom
      - office-ui-fabric-react.Sticky.canStickyTop
      - office-ui-fabric-react.Sticky.componentDidMount
      - office-ui-fabric-react.Sticky.componentDidUpdate
      - office-ui-fabric-react.Sticky.componentWillUnmount
      - office-ui-fabric-react.Sticky.context
      - office-ui-fabric-react.Sticky.contextTypes
      - office-ui-fabric-react.Sticky.defaultProps
      - office-ui-fabric-react.Sticky.nonStickyContent
      - office-ui-fabric-react.Sticky.placeholder
      - office-ui-fabric-react.Sticky.render
      - office-ui-fabric-react.Sticky.resetSticky
      - office-ui-fabric-react.Sticky.root
      - office-ui-fabric-react.Sticky.setDistanceFromTop
      - office-ui-fabric-react.Sticky.shouldComponentUpdate
      - office-ui-fabric-react.Sticky.constructor
      - office-ui-fabric-react.Sticky.stickyContentBottom
      - office-ui-fabric-react.Sticky.stickyContentTop
      - office-ui-fabric-react.Sticky.syncScroll
    syntax:
      content: ''
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: >-
        BaseComponent<office-ui-fabric-react.IStickyProps,
        office-ui-fabric-react.IStickyState>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.Sticky.addSticky
    name: addSticky(HTMLDivElement)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addSticky(stickyContent: HTMLDivElement)'
      parameters:
        - id: stickyContent
          type:
            - HTMLDivElement
          description: ''
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.Sticky.canStickyBottom
    name: canStickyBottom
    fullName: canStickyBottom
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'canStickyBottom: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.Sticky.canStickyTop
    name: canStickyTop
    fullName: canStickyTop
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'canStickyTop: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.Sticky.componentDidMount
    name: componentDidMount()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function componentDidMount()
      parameters: []
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.Sticky.componentDidUpdate
    name: 'componentDidUpdate(IStickyProps, IStickyState)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function componentDidUpdate(prevProps: IStickyProps, prevState:
        IStickyState)
      parameters:
        - id: prevProps
          type:
            - office-ui-fabric-react.IStickyProps
          description: ''
        - id: prevState
          type:
            - office-ui-fabric-react.IStickyState
          description: ''
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.Sticky.componentWillUnmount
    name: componentWillUnmount()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function componentWillUnmount()
      parameters: []
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.Sticky.context
    name: context
    fullName: context
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'context: IScrollablePaneContext'
      return:
        type:
          - office-ui-fabric-react.IScrollablePaneContext
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.Sticky.contextTypes
    name: contextTypes
    fullName: contextTypes
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static contextTypes: IStickyContext'
      return:
        type:
          - office-ui-fabric-react.IStickyContext
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.Sticky.defaultProps
    name: defaultProps
    fullName: defaultProps
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static defaultProps: IStickyProps'
      return:
        type:
          - office-ui-fabric-react.IStickyProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.Sticky.nonStickyContent
    name: nonStickyContent
    fullName: nonStickyContent
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'nonStickyContent: HTMLDivElement | null'
      return:
        type:
          - HTMLDivElement | null
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.Sticky.placeholder
    name: placeholder
    fullName: placeholder
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'placeholder: HTMLDivElement | null'
      return:
        type:
          - HTMLDivElement | null
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.Sticky.render
    name: render()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function render()
      parameters: []
      return:
        type:
          - Element
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.Sticky.resetSticky
    name: resetSticky()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function resetSticky()
      parameters: []
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.Sticky.root
    name: root
    fullName: root
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'root: HTMLDivElement | null'
      return:
        type:
          - HTMLDivElement | null
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.Sticky.setDistanceFromTop
    name: setDistanceFromTop(HTMLDivElement)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setDistanceFromTop(container: HTMLDivElement)'
      parameters:
        - id: container
          type:
            - HTMLDivElement
          description: ''
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.Sticky.shouldComponentUpdate
    name: 'shouldComponentUpdate(IStickyProps, IStickyState)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function shouldComponentUpdate(nextProps: IStickyProps, nextState:
        IStickyState)
      parameters:
        - id: nextProps
          type:
            - office-ui-fabric-react.IStickyProps
          description: ''
        - id: nextState
          type:
            - office-ui-fabric-react.IStickyState
          description: ''
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.Sticky.constructor
    name: Sticky(IStickyProps)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new Sticky(props: IStickyProps)'
      parameters:
        - id: props
          type:
            - office-ui-fabric-react.IStickyProps
          description: ''
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.Sticky.stickyContentBottom
    name: stickyContentBottom
    fullName: stickyContentBottom
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'stickyContentBottom: HTMLDivElement | null'
      return:
        type:
          - HTMLDivElement | null
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.Sticky.stickyContentTop
    name: stickyContentTop
    fullName: stickyContentTop
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'stickyContentTop: HTMLDivElement | null'
      return:
        type:
          - HTMLDivElement | null
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.Sticky.syncScroll
    name: syncScroll
    fullName: syncScroll
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'syncScroll: (container: HTMLElement) => void'
      return:
        type:
          - '(container: HTMLElement) => void'
    package: office-ui-fabric-react
references:
  - uid: >-
      BaseComponent<office-ui-fabric-react.IStickyProps,
      office-ui-fabric-react.IStickyState>
    name: IStickyState>
    spec.typeScript:
      - name: BaseComponent<
        fullName: BaseComponent<
      - name: IStickyProps
        fullName: IStickyProps
        uid: office-ui-fabric-react.IStickyProps
      - name: ', '
        fullName: ', '
      - name: IStickyState
        fullName: IStickyState
        uid: office-ui-fabric-react.IStickyState
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.IStickyProps
    name: IStickyProps
    spec.typeScript:
      - name: IStickyProps
        fullName: IStickyProps
        uid: office-ui-fabric-react.IStickyProps
  - uid: office-ui-fabric-react.IScrollablePaneContext
    name: IScrollablePaneContext
    spec.typeScript:
      - name: IScrollablePaneContext
        fullName: IScrollablePaneContext
        uid: office-ui-fabric-react.IScrollablePaneContext
  - uid: office-ui-fabric-react.IStickyContext
    name: IStickyContext
    spec.typeScript:
      - name: IStickyContext
        fullName: IStickyContext
        uid: office-ui-fabric-react.IStickyContext
  - uid: office-ui-fabric-react.IStickyState
    name: IStickyState
    spec.typeScript:
      - name: IStickyState
        fullName: IStickyState
        uid: office-ui-fabric-react.IStickyState
