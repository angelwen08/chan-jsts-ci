### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IDocumentCardProps
    name: IDocumentCardProps
    fullName: IDocumentCardProps
    children:
      - office-ui-fabric-react.IDocumentCardProps.accentColor
      - office-ui-fabric-react.IDocumentCardProps.children
      - office-ui-fabric-react.IDocumentCardProps.className
      - office-ui-fabric-react.IDocumentCardProps.componentRef
      - office-ui-fabric-react.IDocumentCardProps.onClick
      - office-ui-fabric-react.IDocumentCardProps.onClickHref
      - office-ui-fabric-react.IDocumentCardProps.role
      - office-ui-fabric-react.IDocumentCardProps.styles
      - office-ui-fabric-react.IDocumentCardProps.theme
      - office-ui-fabric-react.IDocumentCardProps.type
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory DocumentCard}'
    extends:
      name: IBaseProps<office-ui-fabric-react.IDocumentCard>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDocumentCardProps.accentColor
    name: accentColor
    fullName: accentColor
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Hex color value of the line below the card, which should correspond to the
      document type.

      This should only be supplied when using the 'compact' card layout.

      Deprecated at v4.17.1, to be removed at \>= v5.0.0.
    optional: true
    syntax:
      content: 'accentColor?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
    deprecated:
      content: To be removed at v5.0.0.
  - uid: office-ui-fabric-react.IDocumentCardProps.children
    name: children
    fullName: children
    children: []
    langs:
      - typeScript
    type: property
    summary: Child components to render within the card.
    optional: true
    syntax:
      content: 'children?: React.ReactNode'
      return:
        type:
          - React.ReactNode
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDocumentCardProps.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional override class name
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDocumentCardProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional callback to access the IDocumentCard interface. Use this instead
      of ref for accessing

      the public methods and properties of the component.
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<IDocumentCard>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.IDocumentCard>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDocumentCardProps.onClick
    name: onClick
    fullName: onClick
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Function to call when the card is clicked or keyboard Enter/Space is
      pushed.
    optional: true
    syntax:
      content: 'onClick?: (ev?: SyntheticEvent<HTMLElement>) => void'
      return:
        type:
          - '(ev?: SyntheticEvent<HTMLElement>) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDocumentCardProps.onClickHref
    name: onClickHref
    fullName: onClickHref
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A URL to navigate to when the card is clicked. If a function has also been
      provided,

      it will be used instead of the URL.
    optional: true
    syntax:
      content: 'onClickHref?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDocumentCardProps.role
    name: role
    fullName: role
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Aria role assigned to the documentCard (Eg. button, link).
      Use this to override the default assignment.
    optional: true
    syntax:
      content: 'role?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDocumentCardProps.styles
    name: styles
    fullName: styles
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules
    optional: true
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<IDocumentCardStyleProps,
        IDocumentCardStyles>
      return:
        type:
          - >-
            IStyleFunctionOrObject<office-ui-fabric-react.IDocumentCardStyleProps,
            office-ui-fabric-react.IDocumentCardStyles>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDocumentCardProps.theme
    name: theme
    fullName: theme
    children: []
    langs:
      - typeScript
    type: property
    summary: Theme provided by HOC.
    optional: true
    syntax:
      content: 'theme?: ITheme'
      return:
        type:
          - ITheme
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDocumentCardProps.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: The type of DocumentCard to display.
    optional: true
    syntax:
      content: 'type?: DocumentCardType'
      return:
        type:
          - office-ui-fabric-react.DocumentCardType
    package: office-ui-fabric-react
references:
  - uid: IBaseProps<office-ui-fabric-react.IDocumentCard>
    name: IDocumentCard>
    spec.typeScript:
      - name: IBaseProps<
        fullName: IBaseProps<
      - name: IDocumentCard
        fullName: IDocumentCard
        uid: office-ui-fabric-react.IDocumentCard
      - name: '>'
        fullName: '>'
  - uid: IRefObject<office-ui-fabric-react.IDocumentCard>
    name: IDocumentCard>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: IDocumentCard
        fullName: IDocumentCard
        uid: office-ui-fabric-react.IDocumentCard
      - name: '>'
        fullName: '>'
  - uid: >-
      IStyleFunctionOrObject<office-ui-fabric-react.IDocumentCardStyleProps,
      office-ui-fabric-react.IDocumentCardStyles>
    name: IDocumentCardStyles>
    spec.typeScript:
      - name: IStyleFunctionOrObject<
        fullName: IStyleFunctionOrObject<
      - name: IDocumentCardStyleProps
        fullName: IDocumentCardStyleProps
        uid: office-ui-fabric-react.IDocumentCardStyleProps
      - name: ', '
        fullName: ', '
      - name: IDocumentCardStyles
        fullName: IDocumentCardStyles
        uid: office-ui-fabric-react.IDocumentCardStyles
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.DocumentCardType
    name: DocumentCardType
    spec.typeScript:
      - name: DocumentCardType
        fullName: DocumentCardType
        uid: office-ui-fabric-react.DocumentCardType
