### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IContextualMenuItem
    name: IContextualMenuItem
    fullName: IContextualMenuItem
    children:
      - office-ui-fabric-react.IContextualMenuItem.ariaLabel
      - office-ui-fabric-react.IContextualMenuItem.canCheck
      - office-ui-fabric-react.IContextualMenuItem.checked
      - office-ui-fabric-react.IContextualMenuItem.className
      - office-ui-fabric-react.IContextualMenuItem.componentRef
      - office-ui-fabric-react.IContextualMenuItem.customOnRenderListLength
      - office-ui-fabric-react.IContextualMenuItem.data
      - office-ui-fabric-react.IContextualMenuItem.disabled
      - office-ui-fabric-react.IContextualMenuItem.getItemClassNames
      - >-
        office-ui-fabric-react.IContextualMenuItem.getSplitButtonVerticalDividerClassNames
      - office-ui-fabric-react.IContextualMenuItem.href
      - office-ui-fabric-react.IContextualMenuItem.iconProps
      - office-ui-fabric-react.IContextualMenuItem.inactive
      - office-ui-fabric-react.IContextualMenuItem.itemProps
      - office-ui-fabric-react.IContextualMenuItem.itemType
      - office-ui-fabric-react.IContextualMenuItem.key
      - office-ui-fabric-react.IContextualMenuItem.keytipProps
      - office-ui-fabric-react.IContextualMenuItem.name
      - office-ui-fabric-react.IContextualMenuItem.onClick
      - office-ui-fabric-react.IContextualMenuItem.onMouseDown
      - office-ui-fabric-react.IContextualMenuItem.onRender
      - office-ui-fabric-react.IContextualMenuItem.onRenderIcon
      - office-ui-fabric-react.IContextualMenuItem.primaryDisabled
      - office-ui-fabric-react.IContextualMenuItem.rel
      - office-ui-fabric-react.IContextualMenuItem.role
      - office-ui-fabric-react.IContextualMenuItem.secondaryText
      - office-ui-fabric-react.IContextualMenuItem.sectionProps
      - office-ui-fabric-react.IContextualMenuItem.shortCut
      - office-ui-fabric-react.IContextualMenuItem.split
      - office-ui-fabric-react.IContextualMenuItem.style
      - office-ui-fabric-react.IContextualMenuItem.submenuIconProps
      - office-ui-fabric-react.IContextualMenuItem.subMenuProps
      - office-ui-fabric-react.IContextualMenuItem.target
      - office-ui-fabric-react.IContextualMenuItem.text
      - office-ui-fabric-react.IContextualMenuItem.title
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory ContextualMenu}'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.ariaLabel
    name: ariaLabel
    fullName: ariaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional accessibility label (aria-label) attribute that will be stamped
      on to the element.

      If none is specified, the aria-label attribute will contain the item name
    optional: true
    syntax:
      content: 'ariaLabel?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.canCheck
    name: canCheck
    fullName: canCheck
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether or not this menu item can be checked
    optional: true
    syntax:
      content: 'canCheck?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.checked
    name: checked
    fullName: checked
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether or not this menu item is currently checked.
    optional: true
    syntax:
      content: 'checked?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: Additional css class to apply to the menu item
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional callback to access the IContextualMenuRenderItem interface. This
      will get passed down to ContextualMenuItem.
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<IContextualMenuRenderItem>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.IContextualMenuRenderItem>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.customOnRenderListLength
    name: customOnRenderListLength
    fullName: customOnRenderListLength
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      When rendering a custom component that is passed in, the component might
      also be a list of

      elements. We want to keep track of the correct index our menu is using
      based off of

      the length of the custom list. It is up to the user to increment the count
      for their list.
    optional: true
    syntax:
      content: 'customOnRenderListLength?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.data
    name: data
    fullName: data
    children: []
    langs:
      - typeScript
    type: property
    summary: Any custom data the developer wishes to associate with the menu item.
    optional: true
    syntax:
      content: 'data?: any'
      return:
        type:
          - any
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.disabled
    name: disabled
    fullName: disabled
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether the menu item is disabled
    optional: true
    syntax:
      content: 'disabled?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.getItemClassNames
    name: getItemClassNames
    fullName: getItemClassNames
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Method to provide the classnames to style the individual items inside a
      menu.

      Deprecated, use `styles` prop of `IContextualMenuItemProps` to leverage
      mergeStyles API.
    optional: true
    syntax:
      content: >-
        getItemClassNames?: (theme: ITheme, disabled: boolean, expanded:
        boolean, checked: boolean, isAnchorLink: boolean, knownIcon: boolean,
        itemClassName?: string, dividerClassName?: string, iconClassName?:
        string, subMenuClassName?: string, primaryDisabled?: boolean) =>
        IMenuItemClassNames
      return:
        type:
          - >-
            (theme: ITheme, disabled: boolean, expanded: boolean, checked:
            boolean, isAnchorLink: boolean, knownIcon: boolean, itemClassName?:
            string, dividerClassName?: string, iconClassName?: string,
            subMenuClassName?: string, primaryDisabled?: boolean) =>
            IMenuItemClassNames
    package: office-ui-fabric-react
    deprecated:
      content: >-
        Use `styles` prop of `IContextualMenuItemProps` to leverage mergeStyles
        API.
  - uid: >-
      office-ui-fabric-react.IContextualMenuItem.getSplitButtonVerticalDividerClassNames
    name: getSplitButtonVerticalDividerClassNames
    fullName: getSplitButtonVerticalDividerClassNames
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Method to provide the classnames to style the Vertical Divider of a split
      button inside a menu.

      Default value is the getVerticalDividerClassnames func defined in
      ContextualMenu.classnames
    optional: true
    syntax:
      content: >-
        getSplitButtonVerticalDividerClassNames?: (theme: ITheme) =>
        IVerticalDividerClassNames
      return:
        type:
          - '(theme: ITheme) => IVerticalDividerClassNames'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.href
    name: href
    fullName: href
    children: []
    langs:
      - typeScript
    type: property
    summary: An optional URL to navigate to upon selection
    optional: true
    syntax:
      content: 'href?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.iconProps
    name: iconProps
    fullName: iconProps
    children: []
    langs:
      - typeScript
    type: property
    summary: Props that go to the IconComponent
    optional: true
    syntax:
      content: 'iconProps?: IIconProps'
      return:
        type:
          - office-ui-fabric-react.IIconProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.inactive
    name: inactive
    fullName: inactive
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      This prop is no longer used. All contextual menu items are now focusable
      when disabled.
    optional: true
    syntax:
      content: 'inactive?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
    deprecated:
      content: in 6.38.2 will be removed in 7.0.0
  - uid: office-ui-fabric-react.IContextualMenuItem.itemProps
    name: itemProps
    fullName: itemProps
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional IContextualMenuItemProps overrides to customize behaviors such as
      item styling via `styles`.
    optional: true
    syntax:
      content: 'itemProps?: Partial<IContextualMenuItemProps>'
      return:
        type:
          - Partial<office-ui-fabric-react.IContextualMenuItemProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.itemType
    name: itemType
    fullName: itemType
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'itemType?: ContextualMenuItemType'
      return:
        type:
          - office-ui-fabric-react.ContextualMenuItemType
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.key
    name: key
    fullName: key
    children: []
    langs:
      - typeScript
    type: property
    summary: Unique id to identify the item
    syntax:
      content: 'key: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.keytipProps
    name: keytipProps
    fullName: keytipProps
    children: []
    langs:
      - typeScript
    type: property
    summary: Keytip for this contextual menu item
    optional: true
    syntax:
      content: 'keytipProps?: IKeytipProps'
      return:
        type:
          - office-ui-fabric-react.IKeytipProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.name
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Text description for the menu item to display
      Deprecated, use `text` instead.
    optional: true
    syntax:
      content: 'name?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
    deprecated:
      content: Use `text` instead.
  - uid: office-ui-fabric-react.IContextualMenuItem.onClick
    name: onClick
    fullName: onClick
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Callback issued when the menu item is invoked. If ev.preventDefault() is
      called in onClick, click will not close menu.

      Returning true will dismiss the menu even if ev.preventDefault() was
      called.
    optional: true
    syntax:
      content: >-
        onClick?: (ev?: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>,
        item?: IContextualMenuItem) => boolean | void
      return:
        type:
          - >-
            (ev?: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>, item?:
            IContextualMenuItem) => boolean | void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.onMouseDown
    name: onMouseDown
    fullName: onMouseDown
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A function to be executed onMouseDown. This is executed before an onClick
      event and can

      be used to interrupt native on click events as well. The click event
      should still handle

      the commands. This should only be used in special cases when react and
      non-react are mixed.
    optional: true
    syntax:
      content: >-
        onMouseDown?: (item: IContextualMenuItem, event:
        MouseEvent<HTMLElement>) => void
      return:
        type:
          - '(item: IContextualMenuItem, event: MouseEvent<HTMLElement>) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.onRender
    name: onRender
    fullName: onRender
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Method to custom render this menu item.

      For keyboard accessibility, the top-level rendered item should be a
      focusable element

      (like an anchor or a button) or have the `data-is-focusable` property set
      to true.

      The function receives a function that can be called to dismiss the menu as
      a second argument.
       This can be used to make sure that a custom menu item click dismisses the menu.
    optional: true
    syntax:
      content: >-
        onRender?: (item: any, dismissMenu: (ev?: any, dismissAll?: boolean) =>
        void) => React.ReactNode
      return:
        type:
          - >-
            (item: any, dismissMenu: (ev?: any, dismissAll?: boolean) => void)
            => React.ReactNode
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.onRenderIcon
    name: onRenderIcon
    fullName: onRenderIcon
    children: []
    langs:
      - typeScript
    type: property
    summary: Custom render function for the menu item icon
    optional: true
    syntax:
      content: 'onRenderIcon?: IRenderFunction<IContextualMenuItemProps>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.IContextualMenuItemProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.primaryDisabled
    name: primaryDisabled
    fullName: primaryDisabled
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If the menu item is a split button, this prop disables purely the primary
      action of the button.
    optional: true
    syntax:
      content: 'primaryDisabled?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.rel
    name: rel
    fullName: rel
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An optional rel when using href. If target is _blank rel is defaulted to a
      value to prevent clickjacking.
    optional: true
    syntax:
      content: 'rel?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.role
    name: role
    fullName: role
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional override for the role attribute on the menu button. If one is not
      provided, it will

      have a value of menuitem or menuitemcheckbox.
    optional: true
    syntax:
      content: 'role?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.secondaryText
    name: secondaryText
    fullName: secondaryText
    children: []
    langs:
      - typeScript
    type: property
    summary: Seconday description for the menu item to display
    optional: true
    syntax:
      content: 'secondaryText?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.sectionProps
    name: sectionProps
    fullName: sectionProps
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Properties to apply to render this item as a section.
       This prop is mutually exclusive with subMenuProps.
    optional: true
    syntax:
      content: 'sectionProps?: IContextualMenuSection'
      return:
        type:
          - office-ui-fabric-react.IContextualMenuSection
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.shortCut
    name: shortCut
    fullName: shortCut
    children: []
    langs:
      - typeScript
    type: property
    summary: '[TODO] Not Yet Implemented'
    optional: true
    syntax:
      content: 'shortCut?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.split
    name: split
    fullName: split
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether or not this menu item is a splitButton.
    optional: true
    syntax:
      content: 'split?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.style
    name: style
    fullName: style
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Additional styles to apply to the menu item
      Deprecated, use `styles` instead.
    optional: true
    syntax:
      content: 'style?: CSSProperties'
      return:
        type:
          - CSSProperties
    package: office-ui-fabric-react
    deprecated:
      content: in favor of the `styles` prop to leverage mergeStyles API.
  - uid: office-ui-fabric-react.IContextualMenuItem.submenuIconProps
    name: submenuIconProps
    fullName: submenuIconProps
    children: []
    langs:
      - typeScript
    type: property
    summary: Props that go to the IconComponent used for the chevron.
    optional: true
    syntax:
      content: 'submenuIconProps?: IIconProps'
      return:
        type:
          - office-ui-fabric-react.IIconProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.subMenuProps
    name: subMenuProps
    fullName: subMenuProps
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Properties to apply to a submenu to this item.

      The ContextualMenu will provide default values for `target`, `onDismiss`,
      `isSubMenu`,

      `id`, `shouldFocusOnMount`, `directionalHint`, `className`, and
      `gapSpace`, all of which

      can be overridden.
    optional: true
    syntax:
      content: 'subMenuProps?: IContextualMenuProps'
      return:
        type:
          - office-ui-fabric-react.IContextualMenuProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.target
    name: target
    fullName: target
    children: []
    langs:
      - typeScript
    type: property
    summary: An optional target when using href
    optional: true
    syntax:
      content: 'target?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.text
    name: text
    fullName: text
    children: []
    langs:
      - typeScript
    type: property
    summary: Text description for the menu item to display
    optional: true
    syntax:
      content: 'text?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IContextualMenuItem.title
    name: title
    fullName: title
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional title for displaying text when hovering over an item.
    optional: true
    syntax:
      content: 'title?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
references:
  - uid: IRefObject<office-ui-fabric-react.IContextualMenuRenderItem>
    name: IContextualMenuRenderItem>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: IContextualMenuRenderItem
        fullName: IContextualMenuRenderItem
        uid: office-ui-fabric-react.IContextualMenuRenderItem
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.IIconProps
    name: IIconProps
    spec.typeScript:
      - name: IIconProps
        fullName: IIconProps
        uid: office-ui-fabric-react.IIconProps
  - uid: Partial<office-ui-fabric-react.IContextualMenuItemProps>
    name: IContextualMenuItemProps>
    spec.typeScript:
      - name: Partial<
        fullName: Partial<
      - name: IContextualMenuItemProps
        fullName: IContextualMenuItemProps
        uid: office-ui-fabric-react.IContextualMenuItemProps
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.ContextualMenuItemType
    name: ContextualMenuItemType
    spec.typeScript:
      - name: ContextualMenuItemType
        fullName: ContextualMenuItemType
        uid: office-ui-fabric-react.ContextualMenuItemType
  - uid: office-ui-fabric-react.IKeytipProps
    name: IKeytipProps
    spec.typeScript:
      - name: IKeytipProps
        fullName: IKeytipProps
        uid: office-ui-fabric-react.IKeytipProps
  - uid: IRenderFunction<office-ui-fabric-react.IContextualMenuItemProps>
    name: IContextualMenuItemProps>
    spec.typeScript:
      - name: IRenderFunction<
        fullName: IRenderFunction<
      - name: IContextualMenuItemProps
        fullName: IContextualMenuItemProps
        uid: office-ui-fabric-react.IContextualMenuItemProps
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.IContextualMenuSection
    name: IContextualMenuSection
    spec.typeScript:
      - name: IContextualMenuSection
        fullName: IContextualMenuSection
        uid: office-ui-fabric-react.IContextualMenuSection
  - uid: office-ui-fabric-react.IContextualMenuProps
    name: IContextualMenuProps
    spec.typeScript:
      - name: IContextualMenuProps
        fullName: IContextualMenuProps
        uid: office-ui-fabric-react.IContextualMenuProps
