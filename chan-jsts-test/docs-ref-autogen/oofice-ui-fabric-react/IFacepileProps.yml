### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IFacepileProps
    name: IFacepileProps
    fullName: IFacepileProps
    children:
      - office-ui-fabric-react.IFacepileProps.addButtonProps
      - office-ui-fabric-react.IFacepileProps.ariaDescription
      - office-ui-fabric-react.IFacepileProps.chevronButtonProps
      - office-ui-fabric-react.IFacepileProps.className
      - office-ui-fabric-react.IFacepileProps.componentRef
      - office-ui-fabric-react.IFacepileProps.getPersonaProps
      - office-ui-fabric-react.IFacepileProps.maxDisplayablePersonas
      - office-ui-fabric-react.IFacepileProps.overflowButtonProps
      - office-ui-fabric-react.IFacepileProps.overflowButtonType
      - office-ui-fabric-react.IFacepileProps.overflowPersonas
      - office-ui-fabric-react.IFacepileProps.personas
      - office-ui-fabric-react.IFacepileProps.personaSize
      - office-ui-fabric-react.IFacepileProps.showAddButton
      - office-ui-fabric-react.IFacepileProps.styles
      - office-ui-fabric-react.IFacepileProps.theme
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory Facepile}'
    extends:
      name: ClassAttributes<office-ui-fabric-react.FacepileBase>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFacepileProps.addButtonProps
    name: addButtonProps
    fullName: addButtonProps
    children: []
    langs:
      - typeScript
    type: property
    summary: Button properties for the add face button
    optional: true
    syntax:
      content: 'addButtonProps?: IButtonProps'
      return:
        type:
          - office-ui-fabric-react.IButtonProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFacepileProps.ariaDescription
    name: ariaDescription
    fullName: ariaDescription
    children: []
    langs:
      - typeScript
    type: property
    summary: ARIA label for persona list
    optional: true
    syntax:
      content: 'ariaDescription?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFacepileProps.chevronButtonProps
    name: chevronButtonProps
    fullName: chevronButtonProps
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Deprecated at v0.70, use `overflowButtonProps` instead.'
    optional: true
    syntax:
      content: 'chevronButtonProps?: IButtonProps'
      return:
        type:
          - office-ui-fabric-react.IButtonProps
    package: office-ui-fabric-react
    deprecated:
      content: Use `overflowButtonProps` instead.
  - uid: office-ui-fabric-react.IFacepileProps.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: Additional css class to apply to the Facepile
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFacepileProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional callback to access the IFacepile interface. Use this instead of
      ref for accessing

      the public methods and properties of the component.
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<IFacepile>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.IFacepile>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFacepileProps.getPersonaProps
    name: getPersonaProps
    fullName: getPersonaProps
    children: []
    langs:
      - typeScript
    type: property
    summary: Method to access properties on the underlying Persona control
    optional: true
    syntax:
      content: 'getPersonaProps?: (persona: IFacepilePersona) => IPersonaSharedProps'
      return:
        type:
          - '(persona: IFacepilePersona) => IPersonaSharedProps'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFacepileProps.maxDisplayablePersonas
    name: maxDisplayablePersonas
    fullName: maxDisplayablePersonas
    children: []
    langs:
      - typeScript
    type: property
    summary: Maximum number of personas to show
    optional: true
    syntax:
      content: 'maxDisplayablePersonas?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFacepileProps.overflowButtonProps
    name: overflowButtonProps
    fullName: overflowButtonProps
    children: []
    langs:
      - typeScript
    type: property
    summary: Properties for the overflow icon
    optional: true
    syntax:
      content: 'overflowButtonProps?: IButtonProps'
      return:
        type:
          - office-ui-fabric-react.IButtonProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFacepileProps.overflowButtonType
    name: overflowButtonType
    fullName: overflowButtonType
    children: []
    langs:
      - typeScript
    type: property
    summary: Type of overflow icon to use
    optional: true
    syntax:
      content: 'overflowButtonType?: OverflowButtonType'
      return:
        type:
          - office-ui-fabric-react.OverflowButtonType
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFacepileProps.overflowPersonas
    name: overflowPersonas
    fullName: overflowPersonas
    children: []
    langs:
      - typeScript
    type: property
    summary: Personas to place in the overflow
    optional: true
    syntax:
      content: 'overflowPersonas?: IFacepilePersona[]'
      return:
        type:
          - 'office-ui-fabric-react.IFacepilePersona[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFacepileProps.personas
    name: personas
    fullName: personas
    children: []
    langs:
      - typeScript
    type: property
    summary: Array of IPersonaProps that define each Persona.
    syntax:
      content: 'personas: IFacepilePersona[]'
      return:
        type:
          - 'office-ui-fabric-react.IFacepilePersona[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFacepileProps.personaSize
    name: personaSize
    fullName: personaSize
    children: []
    langs:
      - typeScript
    type: property
    summary: Size to display the personas
    optional: true
    syntax:
      content: 'personaSize?: PersonaSize'
      return:
        type:
          - office-ui-fabric-react.PersonaSize
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFacepileProps.showAddButton
    name: showAddButton
    fullName: showAddButton
    children: []
    langs:
      - typeScript
    type: property
    summary: Show add person button
    optional: true
    syntax:
      content: 'showAddButton?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFacepileProps.styles
    name: styles
    fullName: styles
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules.
    optional: true
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IFacepileStyleProps, IFacepileStyles>'
      return:
        type:
          - >-
            IStyleFunctionOrObject<office-ui-fabric-react.IFacepileStyleProps,
            office-ui-fabric-react.IFacepileStyles>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFacepileProps.theme
    name: theme
    fullName: theme
    children: []
    langs:
      - typeScript
    type: property
    summary: Theme provided by High-Order Component.
    optional: true
    syntax:
      content: 'theme?: ITheme'
      return:
        type:
          - ITheme
    package: office-ui-fabric-react
references:
  - uid: ClassAttributes<office-ui-fabric-react.FacepileBase>
    name: FacepileBase>
    spec.typeScript:
      - name: ClassAttributes<
        fullName: ClassAttributes<
      - name: FacepileBase
        fullName: FacepileBase
        uid: office-ui-fabric-react.FacepileBase
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.IButtonProps
    name: IButtonProps
    spec.typeScript:
      - name: IButtonProps
        fullName: IButtonProps
        uid: office-ui-fabric-react.IButtonProps
  - uid: IRefObject<office-ui-fabric-react.IFacepile>
    name: IFacepile>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: IFacepile
        fullName: IFacepile
        uid: office-ui-fabric-react.IFacepile
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.OverflowButtonType
    name: OverflowButtonType
    spec.typeScript:
      - name: OverflowButtonType
        fullName: OverflowButtonType
        uid: office-ui-fabric-react.OverflowButtonType
  - uid: 'office-ui-fabric-react.IFacepilePersona[]'
    name: 'IFacepilePersona[]'
    spec.typeScript:
      - name: IFacepilePersona
        fullName: IFacepilePersona
        uid: office-ui-fabric-react.IFacepilePersona
      - name: '[]'
        fullName: '[]'
  - uid: office-ui-fabric-react.PersonaSize
    name: PersonaSize
    spec.typeScript:
      - name: PersonaSize
        fullName: PersonaSize
        uid: office-ui-fabric-react.PersonaSize
  - uid: >-
      IStyleFunctionOrObject<office-ui-fabric-react.IFacepileStyleProps,
      office-ui-fabric-react.IFacepileStyles>
    name: IFacepileStyles>
    spec.typeScript:
      - name: IStyleFunctionOrObject<
        fullName: IStyleFunctionOrObject<
      - name: IFacepileStyleProps
        fullName: IFacepileStyleProps
        uid: office-ui-fabric-react.IFacepileStyleProps
      - name: ', '
        fullName: ', '
      - name: IFacepileStyles
        fullName: IFacepileStyles
        uid: office-ui-fabric-react.IFacepileStyles
      - name: '>'
        fullName: '>'
