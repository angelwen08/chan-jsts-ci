### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IBaseFloatingPickerProps
    name: IBaseFloatingPickerProps
    fullName: IBaseFloatingPickerProps<T>
    children:
      - office-ui-fabric-react.IBaseFloatingPickerProps.calloutWidth
      - office-ui-fabric-react.IBaseFloatingPickerProps.className
      - office-ui-fabric-react.IBaseFloatingPickerProps.componentRef
      - office-ui-fabric-react.IBaseFloatingPickerProps.createGenericItem
      - office-ui-fabric-react.IBaseFloatingPickerProps.getTextFromItem
      - office-ui-fabric-react.IBaseFloatingPickerProps.inputElement
      - office-ui-fabric-react.IBaseFloatingPickerProps.onChange
      - office-ui-fabric-react.IBaseFloatingPickerProps.onInputChanged
      - office-ui-fabric-react.IBaseFloatingPickerProps.onRemoveSuggestion
      - office-ui-fabric-react.IBaseFloatingPickerProps.onRenderSuggestionsItem
      - office-ui-fabric-react.IBaseFloatingPickerProps.onResolveSuggestions
      - office-ui-fabric-react.IBaseFloatingPickerProps.onSuggestionsHidden
      - office-ui-fabric-react.IBaseFloatingPickerProps.onSuggestionsShown
      - office-ui-fabric-react.IBaseFloatingPickerProps.onValidateInput
      - office-ui-fabric-react.IBaseFloatingPickerProps.onZeroQuerySuggestion
      - office-ui-fabric-react.IBaseFloatingPickerProps.pickerSuggestionsProps
      - office-ui-fabric-react.IBaseFloatingPickerProps.resolveDelay
      - office-ui-fabric-react.IBaseFloatingPickerProps.searchingText
      - office-ui-fabric-react.IBaseFloatingPickerProps.selectedItems
      - office-ui-fabric-react.IBaseFloatingPickerProps.showForceResolve
      - office-ui-fabric-react.IBaseFloatingPickerProps.suggestionItems
      - office-ui-fabric-react.IBaseFloatingPickerProps.suggestionsStore
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: ClassAttributes<any>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBaseFloatingPickerProps.calloutWidth
    name: calloutWidth
    fullName: calloutWidth
    children: []
    langs:
      - typeScript
    type: property
    summary: Width for the suggestions callout
    optional: true
    syntax:
      content: 'calloutWidth?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBaseFloatingPickerProps.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: ClassName for the picker.
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBaseFloatingPickerProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<IBaseFloatingPicker>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.IBaseFloatingPicker>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBaseFloatingPickerProps.createGenericItem
    name: createGenericItem
    fullName: createGenericItem
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Function that specifies how arbitrary text entered into the well is
      handled.
    optional: true
    syntax:
      content: >-
        createGenericItem?: (input: string, isValid: boolean) =>
        ISuggestionModel<T>
      return:
        type:
          - '(input: string, isValid: boolean) => ISuggestionModel<T>'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBaseFloatingPickerProps.getTextFromItem
    name: getTextFromItem
    fullName: getTextFromItem
    children: []
    langs:
      - typeScript
    type: property
    summary: A callback to get text from an item. Used to autofill text in the pickers.
    optional: true
    syntax:
      content: 'getTextFromItem?: (item: T, currentValue?: string) => string'
      return:
        type:
          - '(item: T, currentValue?: string) => string'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBaseFloatingPickerProps.inputElement
    name: inputElement
    fullName: inputElement
    children: []
    langs:
      - typeScript
    type: property
    summary: The input element to listen on events
    optional: true
    syntax:
      content: 'inputElement?: HTMLInputElement | null'
      return:
        type:
          - HTMLInputElement | null
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBaseFloatingPickerProps.onChange
    name: onChange
    fullName: onChange
    children: []
    langs:
      - typeScript
    type: property
    summary: A callback for when a suggestion is clicked
    optional: true
    syntax:
      content: 'onChange?: (item: T) => void'
      return:
        type:
          - '(item: T) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBaseFloatingPickerProps.onInputChanged
    name: onInputChanged
    fullName: onInputChanged
    children: []
    langs:
      - typeScript
    type: property
    summary: A callback for when the input has been changed
    optional: true
    syntax:
      content: 'onInputChanged?: (filter: string) => void'
      return:
        type:
          - '(filter: string) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBaseFloatingPickerProps.onRemoveSuggestion
    name: onRemoveSuggestion
    fullName: onRemoveSuggestion
    children: []
    langs:
      - typeScript
    type: property
    summary: A callback for when an item is removed from the suggestion list
    optional: true
    syntax:
      content: 'onRemoveSuggestion?: (item: T) => void'
      return:
        type:
          - '(item: T) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBaseFloatingPickerProps.onRenderSuggestionsItem
    name: onRenderSuggestionsItem
    fullName: onRenderSuggestionsItem
    children: []
    langs:
      - typeScript
    type: property
    summary: Function that specifies how an individual suggestion item will appear.
    optional: true
    syntax:
      content: 'onRenderSuggestionsItem?: (props: T, itemProps: any) => Element'
      return:
        type:
          - '(props: T, itemProps: any) => Element'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBaseFloatingPickerProps.onResolveSuggestions
    name: onResolveSuggestions
    fullName: onResolveSuggestions
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A callback for what should happen when a person types text into the input.

      Returns the already selected items so the resolver can filter them out.

      If used in conjunction with resolveDelay this will ony kick off after the
      delay throttle.

      Return null if using as a controlled component
    syntax:
      content: >-
        onResolveSuggestions: (filter: string, selectedItems?: T[]) => T[] |
        PromiseLike<T[]> | null
      return:
        type:
          - >-
            (filter: string, selectedItems?: T[]) => T[] | PromiseLike<T[]> |
            null
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBaseFloatingPickerProps.onSuggestionsHidden
    name: onSuggestionsHidden
    fullName: onSuggestionsHidden
    children: []
    langs:
      - typeScript
    type: property
    summary: The callback that should be called when the suggestions are hiden
    optional: true
    syntax:
      content: 'onSuggestionsHidden?: () => void'
      return:
        type:
          - () => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBaseFloatingPickerProps.onSuggestionsShown
    name: onSuggestionsShown
    fullName: onSuggestionsShown
    children: []
    langs:
      - typeScript
    type: property
    summary: The callback that should be called when the suggestions are shown
    optional: true
    syntax:
      content: 'onSuggestionsShown?: () => void'
      return:
        type:
          - () => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBaseFloatingPickerProps.onValidateInput
    name: onValidateInput
    fullName: onValidateInput
    children: []
    langs:
      - typeScript
    type: property
    summary: A function used to validate if raw text entered into the well can be added
    optional: true
    syntax:
      content: 'onValidateInput?: (input: string) => boolean'
      return:
        type:
          - '(input: string) => boolean'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBaseFloatingPickerProps.onZeroQuerySuggestion
    name: onZeroQuerySuggestion
    fullName: onZeroQuerySuggestion
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The suggestions to show on zero query, return null if using as a
      controlled component
    optional: true
    syntax:
      content: >-
        onZeroQuerySuggestion?: (selectedItems?: T[]) => T[] | PromiseLike<T[]>
        | null
      return:
        type:
          - '(selectedItems?: T[]) => T[] | PromiseLike<T[]> | null'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBaseFloatingPickerProps.pickerSuggestionsProps
    name: pickerSuggestionsProps
    fullName: pickerSuggestionsProps
    children: []
    langs:
      - typeScript
    type: property
    summary: The properties that will get passed to the Suggestions component.
    optional: true
    syntax:
      content: 'pickerSuggestionsProps?: IBaseFloatingPickerSuggestionProps'
      return:
        type:
          - office-ui-fabric-react.IBaseFloatingPickerSuggestionProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBaseFloatingPickerProps.resolveDelay
    name: resolveDelay
    fullName: resolveDelay
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The delay time in ms before resolving suggestions, which is kicked off
      when input has been changed.

      e.g. If a second input change happens within the resolveDelay time, the
      timer will start over.

      Only until after the timer completes will onResolveSuggestions be called.
    optional: true
    syntax:
      content: 'resolveDelay?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBaseFloatingPickerProps.searchingText
    name: searchingText
    fullName: searchingText
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The text to display while searching for more results in a limited
      suggestions list
    optional: true
    syntax:
      content: 'searchingText?: (props: Object) => string | string'
      return:
        type:
          - '(props: Object) => string | string'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBaseFloatingPickerProps.selectedItems
    name: selectedItems
    fullName: selectedItems
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The items that the base picker should currently display as selected. If
      this is provided then the picker will act as a controlled

      component.
    optional: true
    syntax:
      content: 'selectedItems?: T[]'
      return:
        type:
          - 'T[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBaseFloatingPickerProps.showForceResolve
    name: showForceResolve
    fullName: showForceResolve
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The callback that should be called to see if the force resolve command
      should be shown
    optional: true
    syntax:
      content: 'showForceResolve?: () => boolean'
      return:
        type:
          - () => boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBaseFloatingPickerProps.suggestionItems
    name: suggestionItems
    fullName: suggestionItems
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If using as a controlled component, the items to show in the suggestion
      list
    optional: true
    syntax:
      content: 'suggestionItems?: T[]'
      return:
        type:
          - 'T[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBaseFloatingPickerProps.suggestionsStore
    name: suggestionsStore
    fullName: suggestionsStore
    children: []
    langs:
      - typeScript
    type: property
    summary: The suggestions store
    syntax:
      content: 'suggestionsStore: SuggestionsStore<T>'
      return:
        type:
          - office-ui-fabric-react.SuggestionsStore<T>
    package: office-ui-fabric-react
references:
  - uid: IRefObject<office-ui-fabric-react.IBaseFloatingPicker>
    name: IBaseFloatingPicker>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: IBaseFloatingPicker
        fullName: IBaseFloatingPicker
        uid: office-ui-fabric-react.IBaseFloatingPicker
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.IBaseFloatingPickerSuggestionProps
    name: IBaseFloatingPickerSuggestionProps
    spec.typeScript:
      - name: IBaseFloatingPickerSuggestionProps
        fullName: IBaseFloatingPickerSuggestionProps
        uid: office-ui-fabric-react.IBaseFloatingPickerSuggestionProps
  - uid: office-ui-fabric-react.SuggestionsStore<T>
    name: SuggestionsStore<T>
    spec.typeScript:
      - name: SuggestionsStore
        fullName: SuggestionsStore
        uid: office-ui-fabric-react.SuggestionsStore
      - name: <T>
        fullName: <T>
