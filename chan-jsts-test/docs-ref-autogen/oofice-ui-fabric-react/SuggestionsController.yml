### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.SuggestionsController
    name: SuggestionsController
    fullName: SuggestionsController<T>
    children:
      - >-
        office-ui-fabric-react.SuggestionsController.convertSuggestionsToSuggestionItems
      - office-ui-fabric-react.SuggestionsController.createGenericSuggestion
      - office-ui-fabric-react.SuggestionsController.currentIndex
      - office-ui-fabric-react.SuggestionsController.currentSuggestion
      - office-ui-fabric-react.SuggestionsController.deselectAllSuggestions
      - office-ui-fabric-react.SuggestionsController.getCurrentItem
      - office-ui-fabric-react.SuggestionsController.getSuggestionAtIndex
      - office-ui-fabric-react.SuggestionsController.getSuggestions
      - office-ui-fabric-react.SuggestionsController.hasSelectedSuggestion
      - office-ui-fabric-react.SuggestionsController.nextSuggestion
      - office-ui-fabric-react.SuggestionsController.previousSuggestion
      - office-ui-fabric-react.SuggestionsController.removeSuggestion
      - office-ui-fabric-react.SuggestionsController.setSelectedSuggestion
      - office-ui-fabric-react.SuggestionsController.suggestions
      - office-ui-fabric-react.SuggestionsController.constructor
      - office-ui-fabric-react.SuggestionsController.updateSuggestions
    syntax:
      content: ''
    langs:
      - typeScript
    type: class
    summary: '{@docCategory Pickers}'
    package: office-ui-fabric-react
  - uid: >-
      office-ui-fabric-react.SuggestionsController.convertSuggestionsToSuggestionItems
    name: convertSuggestionsToSuggestionItems(Array<ISuggestionModel<T> | T>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function convertSuggestionsToSuggestionItems(suggestions:
        Array<ISuggestionModel<T> | T>)
      parameters:
        - id: suggestions
          type:
            - Array<office-ui-fabric-react.ISuggestionModel<T> | T>
          description: ''
      return:
        type:
          - 'office-ui-fabric-react.ISuggestionModel<T>[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.SuggestionsController.createGenericSuggestion
    name: createGenericSuggestion(ISuggestionModel<T> | T)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createGenericSuggestion(itemToConvert: ISuggestionModel<T> | T)'
      parameters:
        - id: itemToConvert
          type:
            - office-ui-fabric-react.ISuggestionModel<T> | T
          description: ''
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.SuggestionsController.currentIndex
    name: currentIndex
    fullName: currentIndex
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'currentIndex: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.SuggestionsController.currentSuggestion
    name: currentSuggestion
    fullName: currentSuggestion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'currentSuggestion: ISuggestionModel<T> | undefined'
      return:
        type:
          - office-ui-fabric-react.ISuggestionModel<T> | undefined
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.SuggestionsController.deselectAllSuggestions
    name: deselectAllSuggestions()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function deselectAllSuggestions()
      parameters: []
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.SuggestionsController.getCurrentItem
    name: getCurrentItem()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getCurrentItem()
      parameters: []
      return:
        type:
          - office-ui-fabric-react.ISuggestionModel<T>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.SuggestionsController.getSuggestionAtIndex
    name: getSuggestionAtIndex(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSuggestionAtIndex(index: number)'
      parameters:
        - id: index
          type:
            - number
          description: ''
      return:
        type:
          - office-ui-fabric-react.ISuggestionModel<T>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.SuggestionsController.getSuggestions
    name: getSuggestions()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getSuggestions()
      parameters: []
      return:
        type:
          - 'office-ui-fabric-react.ISuggestionModel<T>[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.SuggestionsController.hasSelectedSuggestion
    name: hasSelectedSuggestion()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function hasSelectedSuggestion()
      parameters: []
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.SuggestionsController.nextSuggestion
    name: nextSuggestion()
    children: []
    type: method
    langs:
      - typeScript
    summary: Increments the suggestion index and gets the next suggestion in the list.
    syntax:
      content: function nextSuggestion()
      parameters: []
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.SuggestionsController.previousSuggestion
    name: previousSuggestion()
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Decrements the suggestion index and gets the previous suggestion in the
      list.
    syntax:
      content: function previousSuggestion()
      parameters: []
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.SuggestionsController.removeSuggestion
    name: removeSuggestion(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeSuggestion(index: number)'
      parameters:
        - id: index
          type:
            - number
          description: ''
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.SuggestionsController.setSelectedSuggestion
    name: setSelectedSuggestion(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setSelectedSuggestion(index: number)'
      parameters:
        - id: index
          type:
            - number
          description: ''
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.SuggestionsController.suggestions
    name: suggestions
    fullName: suggestions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'suggestions: ISuggestionModel<T>[]'
      return:
        type:
          - 'office-ui-fabric-react.ISuggestionModel<T>[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.SuggestionsController.constructor
    name: SuggestionsController()
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: new SuggestionsController()
      parameters: []
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.SuggestionsController.updateSuggestions
    name: 'updateSuggestions(T[], number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateSuggestions(newSuggestions: T[], selectedIndex?: number)'
      parameters:
        - id: newSuggestions
          type:
            - 'T[]'
          description: ''
        - id: selectedIndex
          type:
            - number
          description: ''
          optional: true
    package: office-ui-fabric-react
references:
  - uid: office-ui-fabric-react.ISuggestionModel<T> | undefined
    name: ISuggestionModel<T> | undefined
    spec.typeScript:
      - name: ISuggestionModel
        fullName: ISuggestionModel
        uid: office-ui-fabric-react.ISuggestionModel
      - name: <T> | undefined
        fullName: <T> | undefined
  - uid: 'office-ui-fabric-react.ISuggestionModel<T>[]'
    name: 'ISuggestionModel<T>[]'
    spec.typeScript:
      - name: ISuggestionModel
        fullName: ISuggestionModel
        uid: office-ui-fabric-react.ISuggestionModel
      - name: '<T>[]'
        fullName: '<T>[]'
  - uid: Array<office-ui-fabric-react.ISuggestionModel<T> | T>
    name: ISuggestionModel<T> | T>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: ISuggestionModel
        fullName: ISuggestionModel
        uid: office-ui-fabric-react.ISuggestionModel
      - name: <T> | T>
        fullName: <T> | T>
  - uid: office-ui-fabric-react.ISuggestionModel<T> | T
    name: ISuggestionModel<T> | T
    spec.typeScript:
      - name: ISuggestionModel
        fullName: ISuggestionModel
        uid: office-ui-fabric-react.ISuggestionModel
      - name: <T> | T
        fullName: <T> | T
  - uid: office-ui-fabric-react.ISuggestionModel<T>
    name: ISuggestionModel<T>
    spec.typeScript:
      - name: ISuggestionModel
        fullName: ISuggestionModel
        uid: office-ui-fabric-react.ISuggestionModel
      - name: <T>
        fullName: <T>
