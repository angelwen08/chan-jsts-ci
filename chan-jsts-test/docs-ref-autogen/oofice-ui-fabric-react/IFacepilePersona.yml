### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IFacepilePersona
    name: IFacepilePersona
    fullName: IFacepilePersona
    children:
      - office-ui-fabric-react.IFacepilePersona.allowPhoneInitials
      - office-ui-fabric-react.IFacepilePersona.data
      - office-ui-fabric-react.IFacepilePersona.imageInitials
      - office-ui-fabric-react.IFacepilePersona.imageUrl
      - office-ui-fabric-react.IFacepilePersona.initialsColor
      - office-ui-fabric-react.IFacepilePersona.keytipProps
      - office-ui-fabric-react.IFacepilePersona.onClick
      - office-ui-fabric-react.IFacepilePersona.onMouseMove
      - office-ui-fabric-react.IFacepilePersona.onMouseOut
      - office-ui-fabric-react.IFacepilePersona.personaName
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory Facepile}'
    extends:
      name: ButtonHTMLAttributes<HTMLButtonElement | HTMLDivElement>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFacepilePersona.allowPhoneInitials
    name: allowPhoneInitials
    fullName: allowPhoneInitials
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Whether initials are calculated for phone numbers and number sequences.

      Example: Set property to true to get initials for project names consisting
      of numbers only.
    optional: true
    syntax:
      content: 'allowPhoneInitials?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFacepilePersona.data
    name: data
    fullName: data
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Extra data - not used directly but can be handy for passing additional
      data to custom event

      handlers.
    optional: true
    syntax:
      content: 'data?: any'
      return:
        type:
          - any
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFacepilePersona.imageInitials
    name: imageInitials
    fullName: imageInitials
    children: []
    langs:
      - typeScript
    type: property
    summary: The user's initials to display in the image area when there is no image.
    optional: true
    syntax:
      content: 'imageInitials?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFacepilePersona.imageUrl
    name: imageUrl
    fullName: imageUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Url to the image to use, should be a square aspect ratio and big enough to
      fit in the image area.
    optional: true
    syntax:
      content: 'imageUrl?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFacepilePersona.initialsColor
    name: initialsColor
    fullName: initialsColor
    children: []
    langs:
      - typeScript
    type: property
    summary: The background color when the user's initials are displayed.
    optional: true
    syntax:
      content: 'initialsColor?: PersonaInitialsColor'
      return:
        type:
          - office-ui-fabric-react.PersonaInitialsColor
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFacepilePersona.keytipProps
    name: keytipProps
    fullName: keytipProps
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional keytip for this button that is only added when 'onClick' is
      defined for the persona
    optional: true
    syntax:
      content: 'keytipProps?: IKeytipProps'
      return:
        type:
          - office-ui-fabric-react.IKeytipProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFacepilePersona.onClick
    name: onClick
    fullName: onClick
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If provided, persona will be rendered with cursor:pointer and the handler
      will be

      called on click.
    optional: true
    syntax:
      content: >-
        onClick?: (ev?: MouseEvent<HTMLElement>, persona?: IFacepilePersona) =>
        void
      return:
        type:
          - '(ev?: MouseEvent<HTMLElement>, persona?: IFacepilePersona) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFacepilePersona.onMouseMove
    name: onMouseMove
    fullName: onMouseMove
    children: []
    langs:
      - typeScript
    type: property
    summary: 'If provided, the handler will be called on mouse move.'
    optional: true
    syntax:
      content: >-
        onMouseMove?: (ev?: MouseEvent<HTMLElement>, persona?: IFacepilePersona)
        => void
      return:
        type:
          - '(ev?: MouseEvent<HTMLElement>, persona?: IFacepilePersona) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFacepilePersona.onMouseOut
    name: onMouseOut
    fullName: onMouseOut
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If provided, the handler will be called when mouse moves out of the
      component.
    optional: true
    syntax:
      content: >-
        onMouseOut?: (ev?: MouseEvent<HTMLElement>, persona?: IFacepilePersona)
        => void
      return:
        type:
          - '(ev?: MouseEvent<HTMLElement>, persona?: IFacepilePersona) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IFacepilePersona.personaName
    name: personaName
    fullName: personaName
    children: []
    langs:
      - typeScript
    type: property
    summary: Name of the person.
    optional: true
    syntax:
      content: 'personaName?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
references:
  - uid: office-ui-fabric-react.PersonaInitialsColor
    name: PersonaInitialsColor
    spec.typeScript:
      - name: PersonaInitialsColor
        fullName: PersonaInitialsColor
        uid: office-ui-fabric-react.PersonaInitialsColor
  - uid: office-ui-fabric-react.IKeytipProps
    name: IKeytipProps
    spec.typeScript:
      - name: IKeytipProps
        fullName: IKeytipProps
        uid: office-ui-fabric-react.IKeytipProps
