### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.BaseFloatingPicker
    name: BaseFloatingPicker
    fullName: BaseFloatingPicker<T>
    children:
      - office-ui-fabric-react.BaseFloatingPicker.constructor
      - office-ui-fabric-react.BaseFloatingPicker.completeSuggestion
      - office-ui-fabric-react.BaseFloatingPicker.componentDidMount
      - office-ui-fabric-react.BaseFloatingPicker.componentDidUpdate
      - office-ui-fabric-react.BaseFloatingPicker.componentWillReceiveProps
      - office-ui-fabric-react.BaseFloatingPicker.componentWillUnmount
      - office-ui-fabric-react.BaseFloatingPicker.currentSelectedSuggestionIndex
      - office-ui-fabric-react.BaseFloatingPicker.forceResolveSuggestion
      - office-ui-fabric-react.BaseFloatingPicker.hidePicker
      - office-ui-fabric-react.BaseFloatingPicker.inputText
      - office-ui-fabric-react.BaseFloatingPicker.isSuggestionsShown
      - office-ui-fabric-react.BaseFloatingPicker.onQueryStringChanged
      - office-ui-fabric-react.BaseFloatingPicker.render
      - office-ui-fabric-react.BaseFloatingPicker.showPicker
      - office-ui-fabric-react.BaseFloatingPicker.suggestions
      - office-ui-fabric-react.BaseFloatingPicker.updateSuggestions
    syntax:
      content: ''
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: 'BaseComponent<P, office-ui-fabric-react.IBaseFloatingPickerState>'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseFloatingPicker.constructor
    name: BaseFloatingPicker(P)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new BaseFloatingPicker(basePickerProps: P)'
      parameters:
        - id: basePickerProps
          type:
            - P
          description: ''
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseFloatingPicker.completeSuggestion
    name: completeSuggestion
    fullName: completeSuggestion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'completeSuggestion: () => void'
      return:
        type:
          - () => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseFloatingPicker.componentDidMount
    name: componentDidMount()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function componentDidMount()
      parameters: []
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseFloatingPicker.componentDidUpdate
    name: componentDidUpdate()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function componentDidUpdate()
      parameters: []
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseFloatingPicker.componentWillReceiveProps
    name: componentWillReceiveProps(IBaseFloatingPickerProps<T>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function componentWillReceiveProps(newProps:
        IBaseFloatingPickerProps<T>)
      parameters:
        - id: newProps
          type:
            - office-ui-fabric-react.IBaseFloatingPickerProps<T>
          description: ''
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseFloatingPicker.componentWillUnmount
    name: componentWillUnmount()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function componentWillUnmount()
      parameters: []
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseFloatingPicker.currentSelectedSuggestionIndex
    name: currentSelectedSuggestionIndex
    fullName: currentSelectedSuggestionIndex
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'currentSelectedSuggestionIndex: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseFloatingPicker.forceResolveSuggestion
    name: forceResolveSuggestion()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function forceResolveSuggestion()
      parameters: []
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseFloatingPicker.hidePicker
    name: hidePicker
    fullName: hidePicker
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'hidePicker: () => void'
      return:
        type:
          - () => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseFloatingPicker.inputText
    name: inputText
    fullName: inputText
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'inputText: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseFloatingPicker.isSuggestionsShown
    name: isSuggestionsShown
    fullName: isSuggestionsShown
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'isSuggestionsShown: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseFloatingPicker.onQueryStringChanged
    name: onQueryStringChanged
    fullName: onQueryStringChanged
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onQueryStringChanged: (queryString: string) => void'
      return:
        type:
          - '(queryString: string) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseFloatingPicker.render
    name: render()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function render()
      parameters: []
      return:
        type:
          - Element
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseFloatingPicker.showPicker
    name: showPicker
    fullName: showPicker
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'showPicker: (updateValue?: boolean) => void'
      return:
        type:
          - '(updateValue?: boolean) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseFloatingPicker.suggestions
    name: suggestions
    fullName: suggestions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'suggestions: any[]'
      return:
        type:
          - 'any[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.BaseFloatingPicker.updateSuggestions
    name: 'updateSuggestions(T[], boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateSuggestions(suggestions: T[], forceUpdate?: boolean)'
      parameters:
        - id: suggestions
          type:
            - 'T[]'
          description: ''
        - id: forceUpdate
          type:
            - boolean
          description: ''
          optional: true
    package: office-ui-fabric-react
references:
  - uid: 'BaseComponent<P, office-ui-fabric-react.IBaseFloatingPickerState>'
    name: IBaseFloatingPickerState>
    spec.typeScript:
      - name: 'BaseComponent<P, '
        fullName: 'BaseComponent<P, '
      - name: IBaseFloatingPickerState
        fullName: IBaseFloatingPickerState
        uid: office-ui-fabric-react.IBaseFloatingPickerState
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.IBaseFloatingPickerProps<T>
    name: IBaseFloatingPickerProps<T>
    spec.typeScript:
      - name: IBaseFloatingPickerProps
        fullName: IBaseFloatingPickerProps
        uid: office-ui-fabric-react.IBaseFloatingPickerProps
      - name: <T>
        fullName: <T>
