### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.ICalendarDayProps
    name: ICalendarDayProps
    fullName: ICalendarDayProps
    children:
      - office-ui-fabric-react.ICalendarDayProps.allFocusable
      - office-ui-fabric-react.ICalendarDayProps.autoNavigateOnSelection
      - office-ui-fabric-react.ICalendarDayProps.componentRef
      - office-ui-fabric-react.ICalendarDayProps.dateRangeType
      - office-ui-fabric-react.ICalendarDayProps.dateTimeFormatter
      - office-ui-fabric-react.ICalendarDayProps.firstDayOfWeek
      - office-ui-fabric-react.ICalendarDayProps.firstWeekOfYear
      - office-ui-fabric-react.ICalendarDayProps.maxDate
      - office-ui-fabric-react.ICalendarDayProps.minDate
      - office-ui-fabric-react.ICalendarDayProps.navigatedDate
      - office-ui-fabric-react.ICalendarDayProps.navigationIcons
      - office-ui-fabric-react.ICalendarDayProps.onDismiss
      - office-ui-fabric-react.ICalendarDayProps.onHeaderSelect
      - office-ui-fabric-react.ICalendarDayProps.onNavigateDate
      - office-ui-fabric-react.ICalendarDayProps.onSelectDate
      - office-ui-fabric-react.ICalendarDayProps.restrictedDates
      - office-ui-fabric-react.ICalendarDayProps.selectedDate
      - office-ui-fabric-react.ICalendarDayProps.showCloseButton
      - office-ui-fabric-react.ICalendarDayProps.showSixWeeksByDefault
      - office-ui-fabric-react.ICalendarDayProps.showWeekNumbers
      - office-ui-fabric-react.ICalendarDayProps.strings
      - office-ui-fabric-react.ICalendarDayProps.today
      - office-ui-fabric-react.ICalendarDayProps.workWeekDays
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: ClassAttributes<office-ui-fabric-react.CalendarDay>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarDayProps.allFocusable
    name: allFocusable
    fullName: allFocusable
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'allFocusable?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarDayProps.autoNavigateOnSelection
    name: autoNavigateOnSelection
    fullName: autoNavigateOnSelection
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'autoNavigateOnSelection: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarDayProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<ICalendarDay>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.ICalendarDay>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarDayProps.dateRangeType
    name: dateRangeType
    fullName: dateRangeType
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'dateRangeType: DateRangeType'
      return:
        type:
          - office-ui-fabric-react.DateRangeType
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarDayProps.dateTimeFormatter
    name: dateTimeFormatter
    fullName: dateTimeFormatter
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'dateTimeFormatter: ICalendarFormatDateCallbacks'
      return:
        type:
          - office-ui-fabric-react.ICalendarFormatDateCallbacks
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarDayProps.firstDayOfWeek
    name: firstDayOfWeek
    fullName: firstDayOfWeek
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'firstDayOfWeek: DayOfWeek'
      return:
        type:
          - office-ui-fabric-react.DayOfWeek
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarDayProps.firstWeekOfYear
    name: firstWeekOfYear
    fullName: firstWeekOfYear
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'firstWeekOfYear: FirstWeekOfYear'
      return:
        type:
          - office-ui-fabric-react.FirstWeekOfYear
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarDayProps.maxDate
    name: maxDate
    fullName: maxDate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'maxDate?: Date'
      return:
        type:
          - Date
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarDayProps.minDate
    name: minDate
    fullName: minDate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'minDate?: Date'
      return:
        type:
          - Date
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarDayProps.navigatedDate
    name: navigatedDate
    fullName: navigatedDate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'navigatedDate: Date'
      return:
        type:
          - Date
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarDayProps.navigationIcons
    name: navigationIcons
    fullName: navigationIcons
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'navigationIcons: ICalendarIconStrings'
      return:
        type:
          - office-ui-fabric-react.ICalendarIconStrings
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarDayProps.onDismiss
    name: onDismiss
    fullName: onDismiss
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'onDismiss?: () => void'
      return:
        type:
          - () => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarDayProps.onHeaderSelect
    name: onHeaderSelect
    fullName: onHeaderSelect
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'onHeaderSelect?: (focus: boolean) => void'
      return:
        type:
          - '(focus: boolean) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarDayProps.onNavigateDate
    name: onNavigateDate
    fullName: onNavigateDate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onNavigateDate: (date: Date, focusOnNavigatedDay: boolean) => void'
      return:
        type:
          - '(date: Date, focusOnNavigatedDay: boolean) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarDayProps.onSelectDate
    name: onSelectDate
    fullName: onSelectDate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onSelectDate: (date: Date, selectedDateRangeArray?: Date[]) => void'
      return:
        type:
          - '(date: Date, selectedDateRangeArray?: Date[]) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarDayProps.restrictedDates
    name: restrictedDates
    fullName: restrictedDates
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'restrictedDates?: Date[]'
      return:
        type:
          - 'Date[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarDayProps.selectedDate
    name: selectedDate
    fullName: selectedDate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'selectedDate: Date'
      return:
        type:
          - Date
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarDayProps.showCloseButton
    name: showCloseButton
    fullName: showCloseButton
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'showCloseButton?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarDayProps.showSixWeeksByDefault
    name: showSixWeeksByDefault
    fullName: showSixWeeksByDefault
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'showSixWeeksByDefault?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarDayProps.showWeekNumbers
    name: showWeekNumbers
    fullName: showWeekNumbers
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'showWeekNumbers?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarDayProps.strings
    name: strings
    fullName: strings
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'strings: ICalendarStrings'
      return:
        type:
          - office-ui-fabric-react.ICalendarStrings
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarDayProps.today
    name: today
    fullName: today
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'today?: Date'
      return:
        type:
          - Date
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ICalendarDayProps.workWeekDays
    name: workWeekDays
    fullName: workWeekDays
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'workWeekDays?: DayOfWeek[]'
      return:
        type:
          - 'office-ui-fabric-react.DayOfWeek[]'
    package: office-ui-fabric-react
references:
  - uid: ClassAttributes<office-ui-fabric-react.CalendarDay>
    name: CalendarDay>
    spec.typeScript:
      - name: ClassAttributes<
        fullName: ClassAttributes<
      - name: CalendarDay
        fullName: CalendarDay
        uid: office-ui-fabric-react.CalendarDay
      - name: '>'
        fullName: '>'
  - uid: IRefObject<office-ui-fabric-react.ICalendarDay>
    name: ICalendarDay>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: ICalendarDay
        fullName: ICalendarDay
        uid: office-ui-fabric-react.ICalendarDay
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.DateRangeType
    name: DateRangeType
    spec.typeScript:
      - name: DateRangeType
        fullName: DateRangeType
        uid: office-ui-fabric-react.DateRangeType
  - uid: office-ui-fabric-react.ICalendarFormatDateCallbacks
    name: ICalendarFormatDateCallbacks
    spec.typeScript:
      - name: ICalendarFormatDateCallbacks
        fullName: ICalendarFormatDateCallbacks
        uid: office-ui-fabric-react.ICalendarFormatDateCallbacks
  - uid: office-ui-fabric-react.DayOfWeek
    name: DayOfWeek
    spec.typeScript:
      - name: DayOfWeek
        fullName: DayOfWeek
        uid: office-ui-fabric-react.DayOfWeek
  - uid: office-ui-fabric-react.FirstWeekOfYear
    name: FirstWeekOfYear
    spec.typeScript:
      - name: FirstWeekOfYear
        fullName: FirstWeekOfYear
        uid: office-ui-fabric-react.FirstWeekOfYear
  - uid: office-ui-fabric-react.ICalendarIconStrings
    name: ICalendarIconStrings
    spec.typeScript:
      - name: ICalendarIconStrings
        fullName: ICalendarIconStrings
        uid: office-ui-fabric-react.ICalendarIconStrings
  - uid: office-ui-fabric-react.ICalendarStrings
    name: ICalendarStrings
    spec.typeScript:
      - name: ICalendarStrings
        fullName: ICalendarStrings
        uid: office-ui-fabric-react.ICalendarStrings
  - uid: 'office-ui-fabric-react.DayOfWeek[]'
    name: 'DayOfWeek[]'
    spec.typeScript:
      - name: DayOfWeek
        fullName: DayOfWeek
        uid: office-ui-fabric-react.DayOfWeek
      - name: '[]'
        fullName: '[]'
