### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IMessageBarProps
    name: IMessageBarProps
    fullName: IMessageBarProps
    children:
      - office-ui-fabric-react.IMessageBarProps.actions
      - office-ui-fabric-react.IMessageBarProps.ariaLabel
      - office-ui-fabric-react.IMessageBarProps.className
      - office-ui-fabric-react.IMessageBarProps.componentRef
      - office-ui-fabric-react.IMessageBarProps.dismissButtonAriaLabel
      - office-ui-fabric-react.IMessageBarProps.isMultiline
      - office-ui-fabric-react.IMessageBarProps.messageBarType
      - office-ui-fabric-react.IMessageBarProps.onDismiss
      - office-ui-fabric-react.IMessageBarProps.overflowButtonAriaLabel
      - office-ui-fabric-react.IMessageBarProps.styles
      - office-ui-fabric-react.IMessageBarProps.theme
      - office-ui-fabric-react.IMessageBarProps.truncated
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory MessageBar}'
    extends:
      name: HTMLAttributes<HTMLElement>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IMessageBarProps.actions
    name: actions
    fullName: actions
    children: []
    langs:
      - typeScript
    type: property
    summary: The actions you want to show on the other side.
    optional: true
    syntax:
      content: 'actions?: Element'
      return:
        type:
          - Element
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IMessageBarProps.ariaLabel
    name: ariaLabel
    fullName: ariaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: A description of the message bar for the benefit of screen readers.
    optional: true
    syntax:
      content: 'ariaLabel?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
    deprecated:
      content: Use native prop `aria-label` instead.
  - uid: office-ui-fabric-react.IMessageBarProps.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: Additional CSS class(es) to apply to the MessageBar.
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IMessageBarProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional callback to access the IMessageBar interface. Use this instead of
      ref for accessing

      the public methods and properties of the component.
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<IMessageBar>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.IMessageBar>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IMessageBarProps.dismissButtonAriaLabel
    name: dismissButtonAriaLabel
    fullName: dismissButtonAriaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: Aria label on dismiss button if onDismiss is defined.
    optional: true
    syntax:
      content: 'dismissButtonAriaLabel?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IMessageBarProps.isMultiline
    name: isMultiline
    fullName: isMultiline
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Determines if the message bar is multi lined.

      If false, and the text overflows over buttons or to another line, it is
      clipped.
    optional: true
    syntax:
      content: 'isMultiline?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IMessageBarProps.messageBarType
    name: messageBarType
    fullName: messageBarType
    children: []
    langs:
      - typeScript
    type: property
    summary: The type of MessageBar to render.
    optional: true
    syntax:
      content: 'messageBarType?: MessageBarType'
      return:
        type:
          - office-ui-fabric-react.MessageBarType
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IMessageBarProps.onDismiss
    name: onDismiss
    fullName: onDismiss
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Whether the message bar has a dismiss button and its callback.
      If null, we don't show a dismiss button.
    optional: true
    syntax:
      content: >-
        onDismiss?: (ev?: MouseEvent<HTMLButtonElement | BaseButton |
        HTMLAnchorElement | HTMLDivElement | Button>) => any
      return:
        type:
          - >-
            (ev?: MouseEvent<HTMLButtonElement | BaseButton | HTMLAnchorElement
            | HTMLDivElement | Button>) => any
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IMessageBarProps.overflowButtonAriaLabel
    name: overflowButtonAriaLabel
    fullName: overflowButtonAriaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: Aria label on overflow button if truncated is defined.
    optional: true
    syntax:
      content: 'overflowButtonAriaLabel?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IMessageBarProps.styles
    name: styles
    fullName: styles
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules.
    optional: true
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<IMessageBarStyleProps,
        IMessageBarStyles>
      return:
        type:
          - >-
            IStyleFunctionOrObject<office-ui-fabric-react.IMessageBarStyleProps,
            office-ui-fabric-react.IMessageBarStyles>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IMessageBarProps.theme
    name: theme
    fullName: theme
    children: []
    langs:
      - typeScript
    type: property
    summary: Theme (provided through customization.)
    optional: true
    syntax:
      content: 'theme?: ITheme'
      return:
        type:
          - ITheme
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IMessageBarProps.truncated
    name: truncated
    fullName: truncated
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Determines if the message bar text is truncated.

      If true, a button will render to toggle between a single line view and
      multiline view.

      This prop is for single line message bars with no buttons only in a
      limited space scenario.
    optional: true
    syntax:
      content: 'truncated?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
references:
  - uid: IRefObject<office-ui-fabric-react.IMessageBar>
    name: IMessageBar>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: IMessageBar
        fullName: IMessageBar
        uid: office-ui-fabric-react.IMessageBar
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.MessageBarType
    name: MessageBarType
    spec.typeScript:
      - name: MessageBarType
        fullName: MessageBarType
        uid: office-ui-fabric-react.MessageBarType
  - uid: >-
      IStyleFunctionOrObject<office-ui-fabric-react.IMessageBarStyleProps,
      office-ui-fabric-react.IMessageBarStyles>
    name: IMessageBarStyles>
    spec.typeScript:
      - name: IStyleFunctionOrObject<
        fullName: IStyleFunctionOrObject<
      - name: IMessageBarStyleProps
        fullName: IMessageBarStyleProps
        uid: office-ui-fabric-react.IMessageBarStyleProps
      - name: ', '
        fullName: ', '
      - name: IMessageBarStyles
        fullName: IMessageBarStyles
        uid: office-ui-fabric-react.IMessageBarStyles
      - name: '>'
        fullName: '>'
