### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.getShade
    name: 'getShade(IColor, Shade, boolean)'
    children: []
    type: function
    langs:
      - typeScript
    summary: >-
      Given a color and a shade specification, generates the requested shade of
      the color.

      Logic:

      if white
       darken via tables defined above
      if black
       lighten
      if light
       strongen
      if dark
       soften
      else default
       soften or strongen depending on shade#
    syntax:
      content: 'function getShade(color: IColor, shade: Shade, isInverted?: boolean)'
      parameters:
        - id: color
          type:
            - office-ui-fabric-react.IColor
          description: The base color whose shade is to be computed
        - id: shade
          type:
            - office-ui-fabric-react.Shade
          description: The shade of the base color to compute
        - id: isInverted
          type:
            - boolean
          description: >
            Default false. Whether the given theme is inverted (reverse
            strongen/soften logic)
          optional: true
      return:
        type:
          - office-ui-fabric-react.IColor | null
    package: office-ui-fabric-react
references:
  - uid: office-ui-fabric-react.IColor
    name: IColor
    spec.typeScript:
      - name: IColor
        fullName: IColor
        uid: office-ui-fabric-react.IColor
  - uid: office-ui-fabric-react.Shade
    name: Shade
    spec.typeScript:
      - name: Shade
        fullName: Shade
        uid: office-ui-fabric-react.Shade
  - uid: office-ui-fabric-react.IColor | null
    name: IColor | null
    spec.typeScript:
      - name: IColor
        fullName: IColor
        uid: office-ui-fabric-react.IColor
      - name: ' | null'
        fullName: ' | null'
