### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps
    name: ISelectableDroppableTextProps
    fullName: ISelectableDroppableTextProps<TComponent>
    children:
      - office-ui-fabric-react.ISelectableDroppableTextProps.ariaLabel
      - office-ui-fabric-react.ISelectableDroppableTextProps.calloutProps
      - office-ui-fabric-react.ISelectableDroppableTextProps.className
      - office-ui-fabric-react.ISelectableDroppableTextProps.componentRef
      - office-ui-fabric-react.ISelectableDroppableTextProps.defaultSelectedKey
      - office-ui-fabric-react.ISelectableDroppableTextProps.disabled
      - office-ui-fabric-react.ISelectableDroppableTextProps.errorMessage
      - office-ui-fabric-react.ISelectableDroppableTextProps.id
      - office-ui-fabric-react.ISelectableDroppableTextProps.label
      - office-ui-fabric-react.ISelectableDroppableTextProps.onRenderContainer
      - office-ui-fabric-react.ISelectableDroppableTextProps.onRenderItem
      - office-ui-fabric-react.ISelectableDroppableTextProps.onRenderList
      - office-ui-fabric-react.ISelectableDroppableTextProps.onRenderOption
      - office-ui-fabric-react.ISelectableDroppableTextProps.options
      - office-ui-fabric-react.ISelectableDroppableTextProps.panelProps
      - office-ui-fabric-react.ISelectableDroppableTextProps.placeholder
      - office-ui-fabric-react.ISelectableDroppableTextProps.required
      - office-ui-fabric-react.ISelectableDroppableTextProps.selectedKey
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: >-
      TComponent - Component used for reference properties, such as componentRef

      TListenerElement - Listener element associated with HTML event callbacks.
      Optional. If not provided, TComponent is assumed.
    extends:
      name: HTMLAttributes<TListenerElement>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.ariaLabel
    name: ariaLabel
    fullName: ariaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: Aria Label for the ISelectableDroppableText for screen reader users.
    optional: true
    syntax:
      content: 'ariaLabel?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.calloutProps
    name: calloutProps
    fullName: calloutProps
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Custom properties for ISelectableDroppableText's Callout used to render
      options.
    optional: true
    syntax:
      content: 'calloutProps?: ICalloutProps'
      return:
        type:
          - office-ui-fabric-react.ICalloutProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: 'If provided, additional class name to provide on the root element.'
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional callback to access the ISelectableDroppableText interface. Use
      this instead of ref for accessing

      the public methods and properties of the component.
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<TComponent>'
      return:
        type:
          - IRefObject<TComponent>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.defaultSelectedKey
    name: defaultSelectedKey
    fullName: defaultSelectedKey
    children: []
    langs:
      - typeScript
    type: property
    summary: The key(s) that will be initially used to set a selected item.
    optional: true
    syntax:
      content: 'defaultSelectedKey?: string | number | string[] | number[] | null'
      return:
        type:
          - 'string | number | string[] | number[] | null'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.disabled
    name: disabled
    fullName: disabled
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether or not the ISelectableDroppableText is disabled.
    optional: true
    syntax:
      content: 'disabled?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.errorMessage
    name: errorMessage
    fullName: errorMessage
    children: []
    langs:
      - typeScript
    type: property
    summary: Descriptive label for the ISelectableDroppableText Error Message
    optional: true
    syntax:
      content: 'errorMessage?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: Id of the ISelectableDroppableText
    optional: true
    syntax:
      content: 'id?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.label
    name: label
    fullName: label
    children: []
    langs:
      - typeScript
    type: property
    summary: Descriptive label for the ISelectableDroppableText
    optional: true
    syntax:
      content: 'label?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.onRenderContainer
    name: onRenderContainer
    fullName: onRenderContainer
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional custom renderer for the ISelectableDroppableText container
    optional: true
    syntax:
      content: >-
        onRenderContainer?:
        IRenderFunction<ISelectableDroppableTextProps<TComponent>>
      return:
        type:
          - >-
            IRenderFunction<office-ui-fabric-react.ISelectableDroppableTextProps<TComponent>>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.onRenderItem
    name: onRenderItem
    fullName: onRenderItem
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional custom renderer for the ISelectableDroppableText options
    optional: true
    syntax:
      content: 'onRenderItem?: IRenderFunction<ISelectableOption>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.ISelectableOption>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.onRenderList
    name: onRenderList
    fullName: onRenderList
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional custom renderer for the ISelectableDroppableText list
    optional: true
    syntax:
      content: >-
        onRenderList?:
        IRenderFunction<ISelectableDroppableTextProps<TComponent>>
      return:
        type:
          - >-
            IRenderFunction<office-ui-fabric-react.ISelectableDroppableTextProps<TComponent>>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.onRenderOption
    name: onRenderOption
    fullName: onRenderOption
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional custom renderer for the ISelectableDroppableText option content
    optional: true
    syntax:
      content: 'onRenderOption?: IRenderFunction<ISelectableOption>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.ISelectableOption>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.options
    name: options
    fullName: options
    children: []
    langs:
      - typeScript
    type: property
    summary: Collection of options for this ISelectableDroppableText
    optional: true
    syntax:
      content: 'options?: any'
      return:
        type:
          - any
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.panelProps
    name: panelProps
    fullName: panelProps
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Custom properties for ISelectableDroppableText's Panel used to render
      options on small devices.
    optional: true
    syntax:
      content: 'panelProps?: IPanelProps'
      return:
        type:
          - office-ui-fabric-react.IPanelProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.placeholder
    name: placeholder
    fullName: placeholder
    children: []
    langs:
      - typeScript
    type: property
    summary: Input placeholder text. Displayed until option is selected.
    optional: true
    syntax:
      content: 'placeholder?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.required
    name: required
    fullName: required
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether or not the ISelectableDroppableText is required.
    optional: true
    syntax:
      content: 'required?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISelectableDroppableTextProps.selectedKey
    name: selectedKey
    fullName: selectedKey
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The key(s) of the selected item. If you provide this, you must maintain
      selection

      state by observing onChange events and passing a new value in when
      changed.

      Note that passing in `null` will cause selection to be reset.
    optional: true
    syntax:
      content: 'selectedKey?: string | number | string[] | number[] | null'
      return:
        type:
          - 'string | number | string[] | number[] | null'
    package: office-ui-fabric-react
references:
  - uid: office-ui-fabric-react.ICalloutProps
    name: ICalloutProps
    spec.typeScript:
      - name: ICalloutProps
        fullName: ICalloutProps
        uid: office-ui-fabric-react.ICalloutProps
  - uid: >-
      IRenderFunction<office-ui-fabric-react.ISelectableDroppableTextProps<TComponent>>
    name: ISelectableDroppableTextProps<TComponent>>
    spec.typeScript:
      - name: IRenderFunction<
        fullName: IRenderFunction<
      - name: ISelectableDroppableTextProps
        fullName: ISelectableDroppableTextProps
        uid: office-ui-fabric-react.ISelectableDroppableTextProps
      - name: <TComponent>>
        fullName: <TComponent>>
  - uid: IRenderFunction<office-ui-fabric-react.ISelectableOption>
    name: ISelectableOption>
    spec.typeScript:
      - name: IRenderFunction<
        fullName: IRenderFunction<
      - name: ISelectableOption
        fullName: ISelectableOption
        uid: office-ui-fabric-react.ISelectableOption
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.IPanelProps
    name: IPanelProps
    spec.typeScript:
      - name: IPanelProps
        fullName: IPanelProps
        uid: office-ui-fabric-react.IPanelProps
