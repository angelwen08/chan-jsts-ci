### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IGroupDividerProps
    name: IGroupDividerProps
    fullName: IGroupDividerProps
    children:
      - office-ui-fabric-react.IGroupDividerProps.className
      - office-ui-fabric-react.IGroupDividerProps.compact
      - office-ui-fabric-react.IGroupDividerProps.componentRef
      - office-ui-fabric-react.IGroupDividerProps.expandButtonProps
      - office-ui-fabric-react.IGroupDividerProps.footerText
      - office-ui-fabric-react.IGroupDividerProps.group
      - office-ui-fabric-react.IGroupDividerProps.groupIndex
      - office-ui-fabric-react.IGroupDividerProps.groupLevel
      - office-ui-fabric-react.IGroupDividerProps.groups
      - office-ui-fabric-react.IGroupDividerProps.indentWidth
      - office-ui-fabric-react.IGroupDividerProps.isCollapsedGroupSelectVisible
      - office-ui-fabric-react.IGroupDividerProps.isGroupLoading
      - office-ui-fabric-react.IGroupDividerProps.isSelected
      - office-ui-fabric-react.IGroupDividerProps.loadingText
      - office-ui-fabric-react.IGroupDividerProps.onGroupHeaderClick
      - office-ui-fabric-react.IGroupDividerProps.onRenderTitle
      - office-ui-fabric-react.IGroupDividerProps.onToggleCollapse
      - office-ui-fabric-react.IGroupDividerProps.onToggleSelectGroup
      - office-ui-fabric-react.IGroupDividerProps.onToggleSummarize
      - office-ui-fabric-react.IGroupDividerProps.selected
      - office-ui-fabric-react.IGroupDividerProps.selectionMode
      - office-ui-fabric-react.IGroupDividerProps.showAllLinkText
      - office-ui-fabric-react.IGroupDividerProps.theme
      - office-ui-fabric-react.IGroupDividerProps.viewport
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory GroupedList}'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupDividerProps.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: Custom className
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupDividerProps.compact
    name: compact
    fullName: compact
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Boolean value to indicate if the component should render in compact mode.
      Set to false by default
    optional: true
    syntax:
      content: 'compact?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupDividerProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<__type>'
      return:
        type:
          - IRefObject<__type>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupDividerProps.expandButtonProps
    name: expandButtonProps
    fullName: expandButtonProps
    children: []
    langs:
      - typeScript
    type: property
    summary: Props for expand/collapse button
    optional: true
    syntax:
      content: 'expandButtonProps?: HTMLAttributes<HTMLButtonElement>'
      return:
        type:
          - HTMLAttributes<HTMLButtonElement>
    package: office-ui-fabric-react
    deprecated:
      content: 'Use <xref:IGroupHeaderProps.expandButtonProps> instead.'
  - uid: office-ui-fabric-react.IGroupDividerProps.footerText
    name: footerText
    fullName: footerText
    children: []
    langs:
      - typeScript
    type: property
    summary: Text to display for the group footer.
    optional: true
    syntax:
      content: 'footerText?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupDividerProps.group
    name: group
    fullName: group
    children: []
    langs:
      - typeScript
    type: property
    summary: The group to be rendered by the header.
    optional: true
    syntax:
      content: 'group?: IGroup'
      return:
        type:
          - office-ui-fabric-react.IGroup
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupDividerProps.groupIndex
    name: groupIndex
    fullName: groupIndex
    children: []
    langs:
      - typeScript
    type: property
    summary: The index of the group.
    optional: true
    syntax:
      content: 'groupIndex?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupDividerProps.groupLevel
    name: groupLevel
    fullName: groupLevel
    children: []
    langs:
      - typeScript
    type: property
    summary: The indent level of the group.
    optional: true
    syntax:
      content: 'groupLevel?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupDividerProps.groups
    name: groups
    fullName: groups
    children: []
    langs:
      - typeScript
    type: property
    summary: Stores parent group's children.
    optional: true
    syntax:
      content: 'groups?: IGroup[]'
      return:
        type:
          - 'office-ui-fabric-react.IGroup[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupDividerProps.indentWidth
    name: indentWidth
    fullName: indentWidth
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Width corresponding to a single level. This is multiplied by the
      groupLevel to get the full spacer width for the group.
    optional: true
    syntax:
      content: 'indentWidth?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupDividerProps.isCollapsedGroupSelectVisible
    name: isCollapsedGroupSelectVisible
    fullName: isCollapsedGroupSelectVisible
    children: []
    langs:
      - typeScript
    type: property
    summary: Determines if the group selection check box is shown for collapsed groups.
    optional: true
    syntax:
      content: 'isCollapsedGroupSelectVisible?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupDividerProps.isGroupLoading
    name: isGroupLoading
    fullName: isGroupLoading
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Callback to determine if a group has missing items and needs to load them
      from the server.
    optional: true
    syntax:
      content: 'isGroupLoading?: (group: IGroup) => boolean'
      return:
        type:
          - '(group: IGroup) => boolean'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupDividerProps.isSelected
    name: isSelected
    fullName: isSelected
    children: []
    langs:
      - typeScript
    type: property
    summary: Deprecated at v.65.1 and will be removed by v 1.0. Use `selected` instead.
    optional: true
    syntax:
      content: 'isSelected?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
    deprecated:
      content: Use `selected` instead.
  - uid: office-ui-fabric-react.IGroupDividerProps.loadingText
    name: loadingText
    fullName: loadingText
    children: []
    langs:
      - typeScript
    type: property
    summary: Text shown on group headers to indicate the group is being loaded.
    optional: true
    syntax:
      content: 'loadingText?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupDividerProps.onGroupHeaderClick
    name: onGroupHeaderClick
    fullName: onGroupHeaderClick
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback for when the group header is clicked.
    optional: true
    syntax:
      content: 'onGroupHeaderClick?: (group: IGroup) => void'
      return:
        type:
          - '(group: IGroup) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupDividerProps.onRenderTitle
    name: onRenderTitle
    fullName: onRenderTitle
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Override which allows the caller to provider a custom renderer for the
      GroupHeader title.
    optional: true
    syntax:
      content: 'onRenderTitle?: IRenderFunction<IGroupHeaderProps>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.IGroupHeaderProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupDividerProps.onToggleCollapse
    name: onToggleCollapse
    fullName: onToggleCollapse
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback for when the group is expanded or collapsed.
    optional: true
    syntax:
      content: 'onToggleCollapse?: (group: IGroup) => void'
      return:
        type:
          - '(group: IGroup) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupDividerProps.onToggleSelectGroup
    name: onToggleSelectGroup
    fullName: onToggleSelectGroup
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback for when the group is selected.
    optional: true
    syntax:
      content: 'onToggleSelectGroup?: (group: IGroup) => void'
      return:
        type:
          - '(group: IGroup) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupDividerProps.onToggleSummarize
    name: onToggleSummarize
    fullName: onToggleSummarize
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback for when the group "Show All" link is clicked
    optional: true
    syntax:
      content: 'onToggleSummarize?: (group: IGroup) => void'
      return:
        type:
          - '(group: IGroup) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupDividerProps.selected
    name: selected
    fullName: selected
    children: []
    langs:
      - typeScript
    type: property
    summary: If all items in the group are selected.
    optional: true
    syntax:
      content: 'selected?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupDividerProps.selectionMode
    name: selectionMode
    fullName: selectionMode
    children: []
    langs:
      - typeScript
    type: property
    summary: The selection mode of the list the group lives within.
    optional: true
    syntax:
      content: 'selectionMode?: SelectionMode'
      return:
        type:
          - office-ui-fabric-react.SelectionMode
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupDividerProps.showAllLinkText
    name: showAllLinkText
    fullName: showAllLinkText
    children: []
    langs:
      - typeScript
    type: property
    summary: Text to display for the group "Show All" link.
    optional: true
    syntax:
      content: 'showAllLinkText?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupDividerProps.theme
    name: theme
    fullName: theme
    children: []
    langs:
      - typeScript
    type: property
    summary: Theme provided by the Higher Order Component
    optional: true
    syntax:
      content: 'theme?: ITheme'
      return:
        type:
          - ITheme
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupDividerProps.viewport
    name: viewport
    fullName: viewport
    children: []
    langs:
      - typeScript
    type: property
    summary: A reference to the viewport in which the header is rendered.
    optional: true
    syntax:
      content: 'viewport?: IViewport'
      return:
        type:
          - office-ui-fabric-react.IViewport
    package: office-ui-fabric-react
references:
  - uid: office-ui-fabric-react.IGroup
    name: IGroup
    spec.typeScript:
      - name: IGroup
        fullName: IGroup
        uid: office-ui-fabric-react.IGroup
  - uid: 'office-ui-fabric-react.IGroup[]'
    name: 'IGroup[]'
    spec.typeScript:
      - name: IGroup
        fullName: IGroup
        uid: office-ui-fabric-react.IGroup
      - name: '[]'
        fullName: '[]'
  - uid: IRenderFunction<office-ui-fabric-react.IGroupHeaderProps>
    name: IGroupHeaderProps>
    spec.typeScript:
      - name: IRenderFunction<
        fullName: IRenderFunction<
      - name: IGroupHeaderProps
        fullName: IGroupHeaderProps
        uid: office-ui-fabric-react.IGroupHeaderProps
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.SelectionMode
    name: SelectionMode
    spec.typeScript:
      - name: SelectionMode
        fullName: SelectionMode
        uid: office-ui-fabric-react.SelectionMode
  - uid: office-ui-fabric-react.IViewport
    name: IViewport
    spec.typeScript:
      - name: IViewport
        fullName: IViewport
        uid: office-ui-fabric-react.IViewport
