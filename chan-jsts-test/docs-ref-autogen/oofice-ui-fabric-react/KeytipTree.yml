### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.KeytipTree
    name: KeytipTree
    fullName: KeytipTree
    children:
      - office-ui-fabric-react.KeytipTree.addNode
      - office-ui-fabric-react.KeytipTree.currentKeytip
      - office-ui-fabric-react.KeytipTree.getChildren
      - office-ui-fabric-react.KeytipTree.getExactMatchedNode
      - office-ui-fabric-react.KeytipTree.getNode
      - office-ui-fabric-react.KeytipTree.getNodes
      - office-ui-fabric-react.KeytipTree.getPartiallyMatchedNodes
      - office-ui-fabric-react.KeytipTree.isCurrentKeytipParent
      - office-ui-fabric-react.KeytipTree.constructor
      - office-ui-fabric-react.KeytipTree.nodeMap
      - office-ui-fabric-react.KeytipTree.removeNode
      - office-ui-fabric-react.KeytipTree.root
      - office-ui-fabric-react.KeytipTree.updateNode
    syntax:
      content: ''
    langs:
      - typeScript
    type: class
    summary: >-
      This class is responsible for handling the parent/child relationships
      between keytips
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.KeytipTree.addNode
    name: 'addNode(IKeytipProps, string, boolean)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Add a keytip node to this KeytipTree
    syntax:
      content: >-
        function addNode(keytipProps: IKeytipProps, uniqueID: string,
        persisted?: boolean)
      parameters:
        - id: keytipProps
          type:
            - office-ui-fabric-react.IKeytipProps
          description: Keytip to add to the Tree
        - id: uniqueID
          type:
            - string
          description: Unique ID for this keytip
        - id: persisted
          type:
            - boolean
          description: |
            T/F if this keytip should be marked as persisted
          optional: true
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.KeytipTree.currentKeytip
    name: currentKeytip
    fullName: currentKeytip
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'currentKeytip?: IKeytipTreeNode'
      return:
        type:
          - office-ui-fabric-react.IKeytipTreeNode
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.KeytipTree.getChildren
    name: getChildren(IKeytipTreeNode)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Get the non-persisted children of the give node
      If no node is given, will use the 'currentKeytip'
    syntax:
      content: 'function getChildren(node?: IKeytipTreeNode)'
      parameters:
        - id: node
          type:
            - office-ui-fabric-react.IKeytipTreeNode
          description: Node to get the children for
          optional: true
      return:
        type:
          - 'string[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.KeytipTree.getExactMatchedNode
    name: 'getExactMatchedNode(string, IKeytipTreeNode)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Searches the currentKeytip's children to exactly match a sequence. Will
      not match disabled nodes but

      will match persisted nodes
    syntax:
      content: >-
        function getExactMatchedNode(keySequence: string, currentKeytip:
        IKeytipTreeNode)
      parameters:
        - id: keySequence
          type:
            - string
          description: string to match
        - id: currentKeytip
          type:
            - office-ui-fabric-react.IKeytipTreeNode
          description: The keytip whose children will try to match
      return:
        type:
          - office-ui-fabric-react.IKeytipTreeNode | undefined
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.KeytipTree.getNode
    name: getNode(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets a single node from its ID
    syntax:
      content: 'function getNode(id: string)'
      parameters:
        - id: id
          type:
            - string
          description: ID of the node to get
      return:
        type:
          - office-ui-fabric-react.IKeytipTreeNode | undefined
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.KeytipTree.getNodes
    name: 'getNodes(string[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all nodes from their IDs
    syntax:
      content: 'function getNodes(ids: string[])'
      parameters:
        - id: ids
          type:
            - 'string[]'
          description: List of keytip IDs
      return:
        type:
          - 'office-ui-fabric-react.IKeytipTreeNode[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.KeytipTree.getPartiallyMatchedNodes
    name: 'getPartiallyMatchedNodes(string, IKeytipTreeNode)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Searches the currentKeytip's children to find nodes that start with the
      given sequence. Will not match

      disabled nodes but will match persisted nodes
    syntax:
      content: >-
        function getPartiallyMatchedNodes(keySequence: string, currentKeytip:
        IKeytipTreeNode)
      parameters:
        - id: keySequence
          type:
            - string
          description: string to partially match
        - id: currentKeytip
          type:
            - office-ui-fabric-react.IKeytipTreeNode
          description: The keytip whose children will try to partially match
      return:
        type:
          - 'office-ui-fabric-react.IKeytipTreeNode[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.KeytipTree.isCurrentKeytipParent
    name: isCurrentKeytipParent(IKeytipProps)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Tests if the currentKeytip in this.keytipTree is the parent of
      'keytipProps'
    syntax:
      content: 'function isCurrentKeytipParent(keytipProps: IKeytipProps)'
      parameters:
        - id: keytipProps
          type:
            - office-ui-fabric-react.IKeytipProps
          description: Keytip to test the parent for
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.KeytipTree.constructor
    name: KeytipTree()
    children: []
    type: constructor
    langs:
      - typeScript
    summary: KeytipTree constructor
    syntax:
      content: new KeytipTree()
      parameters: []
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.KeytipTree.nodeMap
    name: nodeMap
    fullName: nodeMap
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'nodeMap: [key: string]: IKeytipTreeNode'
      return:
        type:
          - '[key: string]: office-ui-fabric-react.IKeytipTreeNode'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.KeytipTree.removeNode
    name: 'removeNode(IKeytipProps, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes a node from the KeytipTree
    syntax:
      content: 'function removeNode(keytipProps: IKeytipProps, uniqueID: string)'
      parameters:
        - id: keytipProps
          type:
            - office-ui-fabric-react.IKeytipProps
          description: ''
        - id: uniqueID
          type:
            - string
          description: ''
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.KeytipTree.root
    name: root
    fullName: root
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'root: IKeytipTreeNode'
      return:
        type:
          - office-ui-fabric-react.IKeytipTreeNode
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.KeytipTree.updateNode
    name: 'updateNode(IKeytipProps, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates a node in the tree
    syntax:
      content: 'function updateNode(keytipProps: IKeytipProps, uniqueID: string)'
      parameters:
        - id: keytipProps
          type:
            - office-ui-fabric-react.IKeytipProps
          description: Keytip props to update
        - id: uniqueID
          type:
            - string
          description: |
            Unique ID for this keytip
    package: office-ui-fabric-react
references:
  - uid: office-ui-fabric-react.IKeytipTreeNode
    name: IKeytipTreeNode
    spec.typeScript:
      - name: IKeytipTreeNode
        fullName: IKeytipTreeNode
        uid: office-ui-fabric-react.IKeytipTreeNode
  - uid: '[key: string]: office-ui-fabric-react.IKeytipTreeNode'
    name: IKeytipTreeNode
    spec.typeScript:
      - name: '[key: string]: '
        fullName: '[key: string]: '
      - name: IKeytipTreeNode
        fullName: IKeytipTreeNode
        uid: office-ui-fabric-react.IKeytipTreeNode
  - uid: office-ui-fabric-react.IKeytipProps
    name: IKeytipProps
    spec.typeScript:
      - name: IKeytipProps
        fullName: IKeytipProps
        uid: office-ui-fabric-react.IKeytipProps
  - uid: office-ui-fabric-react.IKeytipTreeNode | undefined
    name: IKeytipTreeNode | undefined
    spec.typeScript:
      - name: IKeytipTreeNode
        fullName: IKeytipTreeNode
        uid: office-ui-fabric-react.IKeytipTreeNode
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: 'office-ui-fabric-react.IKeytipTreeNode[]'
    name: 'IKeytipTreeNode[]'
    spec.typeScript:
      - name: IKeytipTreeNode
        fullName: IKeytipTreeNode
        uid: office-ui-fabric-react.IKeytipTreeNode
      - name: '[]'
        fullName: '[]'
