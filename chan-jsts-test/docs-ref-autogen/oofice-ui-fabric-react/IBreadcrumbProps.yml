### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IBreadcrumbProps
    name: IBreadcrumbProps
    fullName: IBreadcrumbProps
    children:
      - office-ui-fabric-react.IBreadcrumbProps.ariaLabel
      - office-ui-fabric-react.IBreadcrumbProps.className
      - office-ui-fabric-react.IBreadcrumbProps.componentRef
      - office-ui-fabric-react.IBreadcrumbProps.dividerAs
      - office-ui-fabric-react.IBreadcrumbProps.focusZoneProps
      - office-ui-fabric-react.IBreadcrumbProps.items
      - office-ui-fabric-react.IBreadcrumbProps.maxDisplayedItems
      - office-ui-fabric-react.IBreadcrumbProps.onReduceData
      - office-ui-fabric-react.IBreadcrumbProps.onRenderItem
      - office-ui-fabric-react.IBreadcrumbProps.overflowAriaLabel
      - office-ui-fabric-react.IBreadcrumbProps.overflowIndex
      - office-ui-fabric-react.IBreadcrumbProps.styles
      - office-ui-fabric-react.IBreadcrumbProps.theme
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory Breadcrumb}'
    extends:
      name: HTMLAttributes<HTMLElement>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBreadcrumbProps.ariaLabel
    name: ariaLabel
    fullName: ariaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: Aria label to place on the navigation landmark for breadcrumb
    optional: true
    syntax:
      content: 'ariaLabel?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBreadcrumbProps.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional root classname for the root breadcrumb element.
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBreadcrumbProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional callback to access the IBreadcrumb interface. Use this instead of
      ref for accessing

      the public methods and properties of the component.
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<IBreadcrumb>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.IBreadcrumb>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBreadcrumbProps.dividerAs
    name: dividerAs
    fullName: dividerAs
    children: []
    langs:
      - typeScript
    type: property
    summary: Render a custom divider in place of the default chevron `>`
    optional: true
    syntax:
      content: 'dividerAs?: IComponentAs<IDividerAsProps>'
      return:
        type:
          - IComponentAs<office-ui-fabric-react.IDividerAsProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBreadcrumbProps.focusZoneProps
    name: focusZoneProps
    fullName: focusZoneProps
    children: []
    langs:
      - typeScript
    type: property
    summary: Focuszone props that will get passed through to the root focus zone.
    optional: true
    syntax:
      content: 'focusZoneProps?: IFocusZoneProps'
      return:
        type:
          - office-ui-fabric-react.IFocusZoneProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBreadcrumbProps.items
    name: items
    fullName: items
    children: []
    langs:
      - typeScript
    type: property
    summary: Collection of breadcrumbs to render
    syntax:
      content: 'items: IBreadcrumbItem[]'
      return:
        type:
          - 'office-ui-fabric-react.IBreadcrumbItem[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBreadcrumbProps.maxDisplayedItems
    name: maxDisplayedItems
    fullName: maxDisplayedItems
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The maximum number of breadcrumbs to display before coalescing.
      If not specified, all breadcrumbs will be rendered.
    optional: true
    syntax:
      content: 'maxDisplayedItems?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBreadcrumbProps.onReduceData
    name: onReduceData
    fullName: onReduceData
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Method to call when reducing the length of the breadcrumb.
      Return undefined to never reduce breadcrumb length
    optional: true
    syntax:
      content: 'onReduceData?: (data: IBreadcrumbData) => IBreadcrumbData | undefined'
      return:
        type:
          - '(data: IBreadcrumbData) => IBreadcrumbData | undefined'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBreadcrumbProps.onRenderItem
    name: onRenderItem
    fullName: onRenderItem
    children: []
    langs:
      - typeScript
    type: property
    summary: Method to call when trying to render an item.
    optional: true
    syntax:
      content: 'onRenderItem?: IRenderFunction<IBreadcrumbItem>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.IBreadcrumbItem>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBreadcrumbProps.overflowAriaLabel
    name: overflowAriaLabel
    fullName: overflowAriaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional name to use for aria label on overflow button.
    optional: true
    syntax:
      content: 'overflowAriaLabel?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBreadcrumbProps.overflowIndex
    name: overflowIndex
    fullName: overflowIndex
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional index where overflow items will be collapsed. Defaults to 0.
    optional: true
    syntax:
      content: 'overflowIndex?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBreadcrumbProps.styles
    name: styles
    fullName: styles
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<IBreadcrumbStyleProps,
        IBreadcrumbStyles>
      return:
        type:
          - >-
            IStyleFunctionOrObject<office-ui-fabric-react.IBreadcrumbStyleProps,
            office-ui-fabric-react.IBreadcrumbStyles>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IBreadcrumbProps.theme
    name: theme
    fullName: theme
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'theme?: ITheme'
      return:
        type:
          - ITheme
    package: office-ui-fabric-react
references:
  - uid: IRefObject<office-ui-fabric-react.IBreadcrumb>
    name: IBreadcrumb>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: IBreadcrumb
        fullName: IBreadcrumb
        uid: office-ui-fabric-react.IBreadcrumb
      - name: '>'
        fullName: '>'
  - uid: IComponentAs<office-ui-fabric-react.IDividerAsProps>
    name: IDividerAsProps>
    spec.typeScript:
      - name: IComponentAs<
        fullName: IComponentAs<
      - name: IDividerAsProps
        fullName: IDividerAsProps
        uid: office-ui-fabric-react.IDividerAsProps
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.IFocusZoneProps
    name: IFocusZoneProps
    spec.typeScript:
      - name: IFocusZoneProps
        fullName: IFocusZoneProps
        uid: office-ui-fabric-react.IFocusZoneProps
  - uid: 'office-ui-fabric-react.IBreadcrumbItem[]'
    name: 'IBreadcrumbItem[]'
    spec.typeScript:
      - name: IBreadcrumbItem
        fullName: IBreadcrumbItem
        uid: office-ui-fabric-react.IBreadcrumbItem
      - name: '[]'
        fullName: '[]'
  - uid: IRenderFunction<office-ui-fabric-react.IBreadcrumbItem>
    name: IBreadcrumbItem>
    spec.typeScript:
      - name: IRenderFunction<
        fullName: IRenderFunction<
      - name: IBreadcrumbItem
        fullName: IBreadcrumbItem
        uid: office-ui-fabric-react.IBreadcrumbItem
      - name: '>'
        fullName: '>'
  - uid: >-
      IStyleFunctionOrObject<office-ui-fabric-react.IBreadcrumbStyleProps,
      office-ui-fabric-react.IBreadcrumbStyles>
    name: IBreadcrumbStyles>
    spec.typeScript:
      - name: IStyleFunctionOrObject<
        fullName: IStyleFunctionOrObject<
      - name: IBreadcrumbStyleProps
        fullName: IBreadcrumbStyleProps
        uid: office-ui-fabric-react.IBreadcrumbStyleProps
      - name: ', '
        fullName: ', '
      - name: IBreadcrumbStyles
        fullName: IBreadcrumbStyles
        uid: office-ui-fabric-react.IBreadcrumbStyles
      - name: '>'
        fullName: '>'
