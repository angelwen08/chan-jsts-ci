### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IColorRectangleProps
    name: IColorRectangleProps
    fullName: IColorRectangleProps
    children:
      - office-ui-fabric-react.IColorRectangleProps.className
      - office-ui-fabric-react.IColorRectangleProps.color
      - office-ui-fabric-react.IColorRectangleProps.componentRef
      - office-ui-fabric-react.IColorRectangleProps.minSize
      - office-ui-fabric-react.IColorRectangleProps.onChange
      - office-ui-fabric-react.IColorRectangleProps.onSVChanged
      - office-ui-fabric-react.IColorRectangleProps.styles
      - office-ui-fabric-react.IColorRectangleProps.theme
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory ColorPicker}'
    extends:
      name: IBaseProps<office-ui-fabric-react.IColorRectangle>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColorRectangleProps.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: Additional CSS class(es) to apply to the ColorRectangle.
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColorRectangleProps.color
    name: color
    fullName: color
    children: []
    langs:
      - typeScript
    type: property
    summary: Current color of the rectangle.
    syntax:
      content: 'color: IColor'
      return:
        type:
          - office-ui-fabric-react.IColor
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColorRectangleProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets the component ref.
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<IColorRectangle>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.IColorRectangle>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColorRectangleProps.minSize
    name: minSize
    fullName: minSize
    children: []
    langs:
      - typeScript
    type: property
    summary: Minimum width and height.
    optional: true
    syntax:
      content: 'minSize?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColorRectangleProps.onChange
    name: onChange
    fullName: onChange
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback for when the color changes.
    optional: true
    syntax:
      content: 'onChange?: (ev: MouseEvent<HTMLElement>, color: IColor) => void'
      return:
        type:
          - '(ev: MouseEvent<HTMLElement>, color: IColor) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColorRectangleProps.onSVChanged
    name: onSVChanged
    fullName: onSVChanged
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback for when the color changes.
    optional: true
    syntax:
      content: 'onSVChanged?: (s: number, v: number) => void'
      return:
        type:
          - '(s: number, v: number) => void'
    package: office-ui-fabric-react
    deprecated:
      content: Use `onChange`
  - uid: office-ui-fabric-react.IColorRectangleProps.styles
    name: styles
    fullName: styles
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules.
    optional: true
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<IColorRectangleStyleProps,
        IColorRectangleStyles>
      return:
        type:
          - >-
            IStyleFunctionOrObject<office-ui-fabric-react.IColorRectangleStyleProps,
            office-ui-fabric-react.IColorRectangleStyles>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IColorRectangleProps.theme
    name: theme
    fullName: theme
    children: []
    langs:
      - typeScript
    type: property
    summary: Theme (provided through customization).
    optional: true
    syntax:
      content: 'theme?: ITheme'
      return:
        type:
          - ITheme
    package: office-ui-fabric-react
references:
  - uid: IBaseProps<office-ui-fabric-react.IColorRectangle>
    name: IColorRectangle>
    spec.typeScript:
      - name: IBaseProps<
        fullName: IBaseProps<
      - name: IColorRectangle
        fullName: IColorRectangle
        uid: office-ui-fabric-react.IColorRectangle
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.IColor
    name: IColor
    spec.typeScript:
      - name: IColor
        fullName: IColor
        uid: office-ui-fabric-react.IColor
  - uid: IRefObject<office-ui-fabric-react.IColorRectangle>
    name: IColorRectangle>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: IColorRectangle
        fullName: IColorRectangle
        uid: office-ui-fabric-react.IColorRectangle
      - name: '>'
        fullName: '>'
  - uid: >-
      IStyleFunctionOrObject<office-ui-fabric-react.IColorRectangleStyleProps,
      office-ui-fabric-react.IColorRectangleStyles>
    name: IColorRectangleStyles>
    spec.typeScript:
      - name: IStyleFunctionOrObject<
        fullName: IStyleFunctionOrObject<
      - name: IColorRectangleStyleProps
        fullName: IColorRectangleStyleProps
        uid: office-ui-fabric-react.IColorRectangleStyleProps
      - name: ', '
        fullName: ', '
      - name: IColorRectangleStyles
        fullName: IColorRectangleStyles
        uid: office-ui-fabric-react.IColorRectangleStyles
      - name: '>'
        fullName: '>'
