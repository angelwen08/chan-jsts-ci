### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IHoverCardProps
    name: IHoverCardProps
    fullName: IHoverCardProps
    children:
      - office-ui-fabric-react.IHoverCardProps.cardDismissDelay
      - office-ui-fabric-react.IHoverCardProps.cardOpenDelay
      - office-ui-fabric-react.IHoverCardProps.className
      - office-ui-fabric-react.IHoverCardProps.componentRef
      - office-ui-fabric-react.IHoverCardProps.expandedCardOpenDelay
      - office-ui-fabric-react.IHoverCardProps.expandingCardProps
      - office-ui-fabric-react.IHoverCardProps.instantOpenOnClick
      - office-ui-fabric-react.IHoverCardProps.onCardExpand
      - office-ui-fabric-react.IHoverCardProps.onCardHide
      - office-ui-fabric-react.IHoverCardProps.onCardVisible
      - office-ui-fabric-react.IHoverCardProps.openHotKey
      - office-ui-fabric-react.IHoverCardProps.plainCardProps
      - office-ui-fabric-react.IHoverCardProps.setAriaDescribedBy
      - office-ui-fabric-react.IHoverCardProps.setInitialFocus
      - office-ui-fabric-react.IHoverCardProps.shouldBlockHoverCard
      - office-ui-fabric-react.IHoverCardProps.sticky
      - office-ui-fabric-react.IHoverCardProps.styles
      - office-ui-fabric-react.IHoverCardProps.target
      - office-ui-fabric-react.IHoverCardProps.theme
      - office-ui-fabric-react.IHoverCardProps.trapFocus
      - office-ui-fabric-react.IHoverCardProps.type
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: |-
      HoverCard component props.
      {@docCategory HoverCard}
    extends:
      name: HTMLAttributes<HTMLDivElement>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IHoverCardProps.cardDismissDelay
    name: cardDismissDelay
    fullName: cardDismissDelay
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Length of card dismiss delay. A min number is necessary for pointer to hop
      between target and card
    optional: true
    syntax:
      content: 'cardDismissDelay?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IHoverCardProps.cardOpenDelay
    name: cardOpenDelay
    fullName: cardOpenDelay
    children: []
    langs:
      - typeScript
    type: property
    summary: Length of compact card delay
    optional: true
    syntax:
      content: 'cardOpenDelay?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IHoverCardProps.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: Additional CSS class(es) to apply to the HoverCard root element.
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IHoverCardProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional callback to access the IHoverCardHost interface. Use this instead
      of ref for accessing

      the public methods and properties of the component.
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<IHoverCard>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.IHoverCard>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IHoverCardProps.expandedCardOpenDelay
    name: expandedCardOpenDelay
    fullName: expandedCardOpenDelay
    children: []
    langs:
      - typeScript
    type: property
    summary: Time in ms when expanded card should open after compact card
    optional: true
    syntax:
      content: 'expandedCardOpenDelay?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IHoverCardProps.expandingCardProps
    name: expandingCardProps
    fullName: expandingCardProps
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Additional ExpandingCard props to pass through HoverCard like renderers,
      target. gapSpace etc.

      Used along with 'type' prop set to HoverCardType.expanding.

      Reference detail properties in ICardProps and IExpandingCardProps.
    optional: true
    syntax:
      content: 'expandingCardProps?: IExpandingCardProps'
      return:
        type:
          - office-ui-fabric-react.IExpandingCardProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IHoverCardProps.instantOpenOnClick
    name: instantOpenOnClick
    fullName: instantOpenOnClick
    children: []
    langs:
      - typeScript
    type: property
    summary: Enables instant open of the full card upon click
    optional: true
    syntax:
      content: 'instantOpenOnClick?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IHoverCardProps.onCardExpand
    name: onCardExpand
    fullName: onCardExpand
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback when visible card is expanded.
    optional: true
    syntax:
      content: 'onCardExpand?: () => void'
      return:
        type:
          - () => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IHoverCardProps.onCardHide
    name: onCardHide
    fullName: onCardHide
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback when card hides
    optional: true
    syntax:
      content: 'onCardHide?: () => void'
      return:
        type:
          - () => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IHoverCardProps.onCardVisible
    name: onCardVisible
    fullName: onCardVisible
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback when card becomes visible
    optional: true
    syntax:
      content: 'onCardVisible?: () => void'
      return:
        type:
          - () => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IHoverCardProps.openHotKey
    name: openHotKey
    fullName: openHotKey
    children: []
    langs:
      - typeScript
    type: property
    summary: HotKey used for opening the HoverCard when tabbed to target.
    optional: true
    syntax:
      content: 'openHotKey?: KeyCodes'
      return:
        type:
          - KeyCodes
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IHoverCardProps.plainCardProps
    name: plainCardProps
    fullName: plainCardProps
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Additional PlainCard props to pass through HoverCard like renderers,
      target, gapSpace etc.

      Used along with 'type' prop set to HoverCardType.plain.

      See for more details ICardProps and IPlainCardProps interfaces.
    optional: true
    syntax:
      content: 'plainCardProps?: IPlainCardProps'
      return:
        type:
          - office-ui-fabric-react.IPlainCardProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IHoverCardProps.setAriaDescribedBy
    name: setAriaDescribedBy
    fullName: setAriaDescribedBy
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Whether or not to mark the container as described by the hover card.

      If not specified, the caller should mark as element as described by the
      hover card id.
    optional: true
    syntax:
      content: 'setAriaDescribedBy?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IHoverCardProps.setInitialFocus
    name: setInitialFocus
    fullName: setInitialFocus
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Set to true to set focus on the first focusable element in the card. Works
      in pair with the 'trapFocus' prop.
    optional: true
    syntax:
      content: 'setInitialFocus?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IHoverCardProps.shouldBlockHoverCard
    name: shouldBlockHoverCard
    fullName: shouldBlockHoverCard
    children: []
    langs:
      - typeScript
    type: property
    summary: Should block hover card or not
    optional: true
    syntax:
      content: 'shouldBlockHoverCard?: () => void'
      return:
        type:
          - () => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IHoverCardProps.sticky
    name: sticky
    fullName: sticky
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If true disables Card dismiss upon mouse leave, so that card sticks
      around.
    optional: true
    syntax:
      content: 'sticky?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IHoverCardProps.styles
    name: styles
    fullName: styles
    children: []
    langs:
      - typeScript
    type: property
    summary: Custom styles for this component
    optional: true
    syntax:
      content: 'styles?: IStyleFunctionOrObject<IHoverCardStyleProps, IHoverCardStyles>'
      return:
        type:
          - >-
            IStyleFunctionOrObject<office-ui-fabric-react.IHoverCardStyleProps,
            office-ui-fabric-react.IHoverCardStyles>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IHoverCardProps.target
    name: target
    fullName: target
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional target element to tag hover card on.

      If not provided and using HoverCard as a wrapper, don't set
      'data-is-focusable=true' attribute to the root of the wrapped child.

      When no target given, HoverCard will use it's root as a target and become
      the focusable element with a focus listener attached to it.
    optional: true
    syntax:
      content: 'target?: HTMLElement | string'
      return:
        type:
          - HTMLElement | string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IHoverCardProps.theme
    name: theme
    fullName: theme
    children: []
    langs:
      - typeScript
    type: property
    summary: Theme provided by higher order component.
    optional: true
    syntax:
      content: 'theme?: ITheme'
      return:
        type:
          - ITheme
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IHoverCardProps.trapFocus
    name: trapFocus
    fullName: trapFocus
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Set to true if you want to render the content of the HoverCard in a
      FocusTrapZone for accessibility reasons.

      Optionally 'setInitialFocus' prop can be set to true to move focus inside
      the FocusTrapZone.
    optional: true
    syntax:
      content: 'trapFocus?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IHoverCardProps.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: Type of the hover card to render.
    optional: true
    syntax:
      content: 'type?: HoverCardType'
      return:
        type:
          - office-ui-fabric-react.HoverCardType
    package: office-ui-fabric-react
references:
  - uid: IRefObject<office-ui-fabric-react.IHoverCard>
    name: IHoverCard>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: IHoverCard
        fullName: IHoverCard
        uid: office-ui-fabric-react.IHoverCard
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.IExpandingCardProps
    name: IExpandingCardProps
    spec.typeScript:
      - name: IExpandingCardProps
        fullName: IExpandingCardProps
        uid: office-ui-fabric-react.IExpandingCardProps
  - uid: office-ui-fabric-react.IPlainCardProps
    name: IPlainCardProps
    spec.typeScript:
      - name: IPlainCardProps
        fullName: IPlainCardProps
        uid: office-ui-fabric-react.IPlainCardProps
  - uid: >-
      IStyleFunctionOrObject<office-ui-fabric-react.IHoverCardStyleProps,
      office-ui-fabric-react.IHoverCardStyles>
    name: IHoverCardStyles>
    spec.typeScript:
      - name: IStyleFunctionOrObject<
        fullName: IStyleFunctionOrObject<
      - name: IHoverCardStyleProps
        fullName: IHoverCardStyleProps
        uid: office-ui-fabric-react.IHoverCardStyleProps
      - name: ', '
        fullName: ', '
      - name: IHoverCardStyles
        fullName: IHoverCardStyles
        uid: office-ui-fabric-react.IHoverCardStyles
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.HoverCardType
    name: HoverCardType
    spec.typeScript:
      - name: HoverCardType
        fullName: HoverCardType
        uid: office-ui-fabric-react.HoverCardType
