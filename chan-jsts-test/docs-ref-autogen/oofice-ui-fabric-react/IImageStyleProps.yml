### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IImageStyleProps
    name: IImageStyleProps
    fullName: IImageStyleProps
    children:
      - office-ui-fabric-react.IImageStyleProps.className
      - office-ui-fabric-react.IImageStyleProps.height
      - office-ui-fabric-react.IImageStyleProps.isCenter
      - office-ui-fabric-react.IImageStyleProps.isCenterContain
      - office-ui-fabric-react.IImageStyleProps.isCenterCover
      - office-ui-fabric-react.IImageStyleProps.isContain
      - office-ui-fabric-react.IImageStyleProps.isCover
      - office-ui-fabric-react.IImageStyleProps.isError
      - office-ui-fabric-react.IImageStyleProps.isLandscape
      - office-ui-fabric-react.IImageStyleProps.isLoaded
      - office-ui-fabric-react.IImageStyleProps.isNone
      - office-ui-fabric-react.IImageStyleProps.isNotImageFit
      - office-ui-fabric-react.IImageStyleProps.maximizeFrame
      - office-ui-fabric-react.IImageStyleProps.shouldFadeIn
      - office-ui-fabric-react.IImageStyleProps.shouldStartVisible
      - office-ui-fabric-react.IImageStyleProps.theme
      - office-ui-fabric-react.IImageStyleProps.width
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory Image}'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IImageStyleProps.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: Accept custom classNames
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IImageStyleProps.height
    name: height
    fullName: height
    children: []
    langs:
      - typeScript
    type: property
    summary: Image height value
    optional: true
    syntax:
      content: 'height?: number | string'
      return:
        type:
          - number | string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IImageStyleProps.isCenter
    name: isCenter
    fullName: isCenter
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      ImageFit booleans for center, cover, contain, centerContain, centerCover,
      none
    optional: true
    syntax:
      content: 'isCenter?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IImageStyleProps.isCenterContain
    name: isCenterContain
    fullName: isCenterContain
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'isCenterContain?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IImageStyleProps.isCenterCover
    name: isCenterCover
    fullName: isCenterCover
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'isCenterCover?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IImageStyleProps.isContain
    name: isContain
    fullName: isContain
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'isContain?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IImageStyleProps.isCover
    name: isCover
    fullName: isCover
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'isCover?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IImageStyleProps.isError
    name: isError
    fullName: isError
    children: []
    langs:
      - typeScript
    type: property
    summary: if true image load is in error
    optional: true
    syntax:
      content: 'isError?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IImageStyleProps.isLandscape
    name: isLandscape
    fullName: isLandscape
    children: []
    langs:
      - typeScript
    type: property
    summary: If true the image is coverStyle landscape instead of portrait
    optional: true
    syntax:
      content: 'isLandscape?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IImageStyleProps.isLoaded
    name: isLoaded
    fullName: isLoaded
    children: []
    langs:
      - typeScript
    type: property
    summary: 'If true, the image is loaded'
    optional: true
    syntax:
      content: 'isLoaded?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IImageStyleProps.isNone
    name: isNone
    fullName: isNone
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'isNone?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IImageStyleProps.isNotImageFit
    name: isNotImageFit
    fullName: isNotImageFit
    children: []
    langs:
      - typeScript
    type: property
    summary: 'if true, imageFit is undefined'
    optional: true
    syntax:
      content: 'isNotImageFit?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IImageStyleProps.maximizeFrame
    name: maximizeFrame
    fullName: maximizeFrame
    children: []
    langs:
      - typeScript
    type: property
    summary: 'If true, the image frame will expand to fill its parent container.'
    optional: true
    syntax:
      content: 'maximizeFrame?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IImageStyleProps.shouldFadeIn
    name: shouldFadeIn
    fullName: shouldFadeIn
    children: []
    langs:
      - typeScript
    type: property
    summary: 'If true, fades the image in when loaded.'
    optional: true
    syntax:
      content: 'shouldFadeIn?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IImageStyleProps.shouldStartVisible
    name: shouldStartVisible
    fullName: shouldStartVisible
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If true, the image starts as visible and is hidden on error. Otherwise,
      the image is hidden until

      it is successfully loaded. This disables shouldFadeIn.
    optional: true
    syntax:
      content: 'shouldStartVisible?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IImageStyleProps.theme
    name: theme
    fullName: theme
    children: []
    langs:
      - typeScript
    type: property
    summary: Accept theme prop.
    syntax:
      content: 'theme: ITheme'
      return:
        type:
          - ITheme
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IImageStyleProps.width
    name: width
    fullName: width
    children: []
    langs:
      - typeScript
    type: property
    summary: Image width value
    optional: true
    syntax:
      content: 'width?: number | string'
      return:
        type:
          - number | string
    package: office-ui-fabric-react
