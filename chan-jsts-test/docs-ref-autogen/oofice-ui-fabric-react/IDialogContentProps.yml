### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IDialogContentProps
    name: IDialogContentProps
    fullName: IDialogContentProps
    children:
      - office-ui-fabric-react.IDialogContentProps.className
      - office-ui-fabric-react.IDialogContentProps.closeButtonAriaLabel
      - office-ui-fabric-react.IDialogContentProps.componentRef
      - office-ui-fabric-react.IDialogContentProps.draggableHeaderClassName
      - office-ui-fabric-react.IDialogContentProps.isMultiline
      - office-ui-fabric-react.IDialogContentProps.onDismiss
      - office-ui-fabric-react.IDialogContentProps.responsiveMode
      - office-ui-fabric-react.IDialogContentProps.showCloseButton
      - office-ui-fabric-react.IDialogContentProps.styles
      - office-ui-fabric-react.IDialogContentProps.subText
      - office-ui-fabric-react.IDialogContentProps.subTextId
      - office-ui-fabric-react.IDialogContentProps.theme
      - office-ui-fabric-react.IDialogContentProps.title
      - office-ui-fabric-react.IDialogContentProps.titleId
      - office-ui-fabric-react.IDialogContentProps.topButtonsProps
      - office-ui-fabric-react.IDialogContentProps.type
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory Dialog}'
    extends:
      name: ClassAttributes<office-ui-fabric-react.DialogContentBase>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDialogContentProps.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional override class name
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDialogContentProps.closeButtonAriaLabel
    name: closeButtonAriaLabel
    fullName: closeButtonAriaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: Label to be passed to to aria-label of close button
    optional: true
    syntax:
      content: 'closeButtonAriaLabel?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDialogContentProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional callback to access the IDialogContent interface. Use this instead
      of ref for accessing

      the public methods and properties of the component.
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<IDialogContent>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.IDialogContent>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDialogContentProps.draggableHeaderClassName
    name: draggableHeaderClassName
    fullName: draggableHeaderClassName
    children: []
    langs:
      - typeScript
    type: property
    summary: The classname for when the header is draggable
    optional: true
    syntax:
      content: 'draggableHeaderClassName?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDialogContentProps.isMultiline
    name: isMultiline
    fullName: isMultiline
    children: []
    langs:
      - typeScript
    type: property
    summary: Is inside a multiline wrapper
    optional: true
    syntax:
      content: 'isMultiline?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDialogContentProps.onDismiss
    name: onDismiss
    fullName: onDismiss
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A callback function for when the Dialog is dismissed from the close button
      or light dismiss, before the animation completes.
    optional: true
    syntax:
      content: 'onDismiss?: (ev?: MouseEvent<HTMLButtonElement>) => any'
      return:
        type:
          - '(ev?: MouseEvent<HTMLButtonElement>) => any'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDialogContentProps.responsiveMode
    name: responsiveMode
    fullName: responsiveMode
    children: []
    langs:
      - typeScript
    type: property
    summary: Responsive mode passed in from decorator.
    optional: true
    syntax:
      content: 'responsiveMode?: ResponsiveMode'
      return:
        type:
          - office-ui-fabric-react.ResponsiveMode
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDialogContentProps.showCloseButton
    name: showCloseButton
    fullName: showCloseButton
    children: []
    langs:
      - typeScript
    type: property
    summary: Show an 'x' close button in the upper-right corner
    optional: true
    syntax:
      content: 'showCloseButton?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDialogContentProps.styles
    name: styles
    fullName: styles
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules
    optional: true
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<IDialogContentStyleProps,
        IDialogContentStyles>
      return:
        type:
          - >-
            IStyleFunctionOrObject<office-ui-fabric-react.IDialogContentStyleProps,
            office-ui-fabric-react.IDialogContentStyles>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDialogContentProps.subText
    name: subText
    fullName: subText
    children: []
    langs:
      - typeScript
    type: property
    summary: The subtext to display in the dialog
    optional: true
    syntax:
      content: 'subText?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDialogContentProps.subTextId
    name: subTextId
    fullName: subTextId
    children: []
    langs:
      - typeScript
    type: property
    summary: The Id for subText container
    optional: true
    syntax:
      content: 'subTextId?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDialogContentProps.theme
    name: theme
    fullName: theme
    children: []
    langs:
      - typeScript
    type: property
    summary: Theme provided by HOC.
    optional: true
    syntax:
      content: 'theme?: ITheme'
      return:
        type:
          - ITheme
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDialogContentProps.title
    name: title
    fullName: title
    children: []
    langs:
      - typeScript
    type: property
    summary: The title text to display at the top of the dialog.
    optional: true
    syntax:
      content: 'title?: string | Element'
      return:
        type:
          - string | Element
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDialogContentProps.titleId
    name: titleId
    fullName: titleId
    children: []
    langs:
      - typeScript
    type: property
    summary: The Id for title container
    optional: true
    syntax:
      content: 'titleId?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDialogContentProps.topButtonsProps
    name: topButtonsProps
    fullName: topButtonsProps
    children: []
    langs:
      - typeScript
    type: property
    summary: Other top buttons that will show up next to the close button
    optional: true
    syntax:
      content: 'topButtonsProps?: IButtonProps[]'
      return:
        type:
          - 'office-ui-fabric-react.IButtonProps[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IDialogContentProps.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: The type of Dialog to display.
    optional: true
    syntax:
      content: 'type?: DialogType'
      return:
        type:
          - office-ui-fabric-react.DialogType
    package: office-ui-fabric-react
references:
  - uid: ClassAttributes<office-ui-fabric-react.DialogContentBase>
    name: DialogContentBase>
    spec.typeScript:
      - name: ClassAttributes<
        fullName: ClassAttributes<
      - name: DialogContentBase
        fullName: DialogContentBase
        uid: office-ui-fabric-react.DialogContentBase
      - name: '>'
        fullName: '>'
  - uid: IRefObject<office-ui-fabric-react.IDialogContent>
    name: IDialogContent>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: IDialogContent
        fullName: IDialogContent
        uid: office-ui-fabric-react.IDialogContent
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.ResponsiveMode
    name: ResponsiveMode
    spec.typeScript:
      - name: ResponsiveMode
        fullName: ResponsiveMode
        uid: office-ui-fabric-react.ResponsiveMode
  - uid: >-
      IStyleFunctionOrObject<office-ui-fabric-react.IDialogContentStyleProps,
      office-ui-fabric-react.IDialogContentStyles>
    name: IDialogContentStyles>
    spec.typeScript:
      - name: IStyleFunctionOrObject<
        fullName: IStyleFunctionOrObject<
      - name: IDialogContentStyleProps
        fullName: IDialogContentStyleProps
        uid: office-ui-fabric-react.IDialogContentStyleProps
      - name: ', '
        fullName: ', '
      - name: IDialogContentStyles
        fullName: IDialogContentStyles
        uid: office-ui-fabric-react.IDialogContentStyles
      - name: '>'
        fullName: '>'
  - uid: 'office-ui-fabric-react.IButtonProps[]'
    name: 'IButtonProps[]'
    spec.typeScript:
      - name: IButtonProps
        fullName: IButtonProps
        uid: office-ui-fabric-react.IButtonProps
      - name: '[]'
        fullName: '[]'
  - uid: office-ui-fabric-react.DialogType
    name: DialogType
    spec.typeScript:
      - name: DialogType
        fullName: DialogType
        uid: office-ui-fabric-react.DialogType
