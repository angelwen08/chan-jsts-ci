### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.ISuggestionsProps
    name: ISuggestionsProps
    fullName: ISuggestionsProps<T>
    children:
      - office-ui-fabric-react.ISuggestionsProps.className
      - office-ui-fabric-react.ISuggestionsProps.componentRef
      - office-ui-fabric-react.ISuggestionsProps.createGenericItem
      - office-ui-fabric-react.ISuggestionsProps.forceResolveText
      - office-ui-fabric-react.ISuggestionsProps.isLoading
      - office-ui-fabric-react.ISuggestionsProps.isMostRecentlyUsedVisible
      - office-ui-fabric-react.ISuggestionsProps.isResultsFooterVisible
      - office-ui-fabric-react.ISuggestionsProps.isSearching
      - office-ui-fabric-react.ISuggestionsProps.loadingText
      - office-ui-fabric-react.ISuggestionsProps.moreSuggestionsAvailable
      - office-ui-fabric-react.ISuggestionsProps.mostRecentlyUsedHeaderText
      - office-ui-fabric-react.ISuggestionsProps.noResultsFoundText
      - office-ui-fabric-react.ISuggestionsProps.onGetMoreResults
      - office-ui-fabric-react.ISuggestionsProps.onRenderNoResultFound
      - office-ui-fabric-react.ISuggestionsProps.onRenderSuggestion
      - office-ui-fabric-react.ISuggestionsProps.onSuggestionClick
      - office-ui-fabric-react.ISuggestionsProps.onSuggestionRemove
      - office-ui-fabric-react.ISuggestionsProps.refocusSuggestions
      - office-ui-fabric-react.ISuggestionsProps.removeSuggestionAriaLabel
      - office-ui-fabric-react.ISuggestionsProps.resultsFooter
      - office-ui-fabric-react.ISuggestionsProps.resultsFooterFull
      - office-ui-fabric-react.ISuggestionsProps.resultsMaximumNumber
      - office-ui-fabric-react.ISuggestionsProps.searchErrorText
      - office-ui-fabric-react.ISuggestionsProps.searchForMoreText
      - office-ui-fabric-react.ISuggestionsProps.searchingText
      - office-ui-fabric-react.ISuggestionsProps.showForceResolve
      - office-ui-fabric-react.ISuggestionsProps.showRemoveButtons
      - office-ui-fabric-react.ISuggestionsProps.styles
      - office-ui-fabric-react.ISuggestionsProps.suggestions
      - office-ui-fabric-react.ISuggestionsProps.suggestionsAvailableAlertText
      - office-ui-fabric-react.ISuggestionsProps.suggestionsClassName
      - office-ui-fabric-react.ISuggestionsProps.suggestionsContainerAriaLabel
      - office-ui-fabric-react.ISuggestionsProps.suggestionsHeaderText
      - office-ui-fabric-react.ISuggestionsProps.suggestionsItemClassName
      - office-ui-fabric-react.ISuggestionsProps.suggestionsListId
      - office-ui-fabric-react.ISuggestionsProps.theme
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: >-
      Suggestions props interface. Refers to the entire container holding all
      the suggestions.

      Type T is the type of the items that are displayed.

      {@docCategory Pickers}
    extends:
      name: Props<any>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: The CSS className of the suggestions root.
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional callback to access the ISuggestions interface. Use this instead
      of ref for accessing

      the public methods and properties of the component.
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<ISuggestions<T>>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.ISuggestions<T>>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.createGenericItem
    name: createGenericItem
    fullName: createGenericItem
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The callback that should be called when the user attempts to use the input
      text as as item
    optional: true
    syntax:
      content: 'createGenericItem?: () => void'
      return:
        type:
          - () => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.forceResolveText
    name: forceResolveText
    fullName: forceResolveText
    children: []
    langs:
      - typeScript
    type: property
    summary: The text that appears indicating to the use to force resolve the input
    optional: true
    syntax:
      content: 'forceResolveText?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.isLoading
    name: isLoading
    fullName: isLoading
    children: []
    langs:
      - typeScript
    type: property
    summary: Used to indicate whether or not the suggestions are loading.
    optional: true
    syntax:
      content: 'isLoading?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.isMostRecentlyUsedVisible
    name: isMostRecentlyUsedVisible
    fullName: isMostRecentlyUsedVisible
    children: []
    langs:
      - typeScript
    type: property
    summary: Indicates if a short list of recent suggestions should be shown.
    optional: true
    syntax:
      content: 'isMostRecentlyUsedVisible?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.isResultsFooterVisible
    name: isResultsFooterVisible
    fullName: isResultsFooterVisible
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Indicates if the text in resultsFooter or resultsFooterFull should be
      shown at the end of the suggestion list.
    optional: true
    syntax:
      content: 'isResultsFooterVisible?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.isSearching
    name: isSearching
    fullName: isSearching
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Used to indicate whether or not the component is searching for more
      results.
    optional: true
    syntax:
      content: 'isSearching?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.loadingText
    name: loadingText
    fullName: loadingText
    children: []
    langs:
      - typeScript
    type: property
    summary: The text to display while the results are loading.
    optional: true
    syntax:
      content: 'loadingText?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.moreSuggestionsAvailable
    name: moreSuggestionsAvailable
    fullName: moreSuggestionsAvailable
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Used to indicate whether or not the user can request more suggestions.
      Dictates whether or not the searchForMore button is displayed.
    optional: true
    syntax:
      content: 'moreSuggestionsAvailable?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.mostRecentlyUsedHeaderText
    name: mostRecentlyUsedHeaderText
    fullName: mostRecentlyUsedHeaderText
    children: []
    langs:
      - typeScript
    type: property
    summary: The text that should appear at the top of the most recently used box.
    optional: true
    syntax:
      content: 'mostRecentlyUsedHeaderText?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.noResultsFoundText
    name: noResultsFoundText
    fullName: noResultsFoundText
    children: []
    langs:
      - typeScript
    type: property
    summary: The text that should appear if no results are found when searching.
    optional: true
    syntax:
      content: 'noResultsFoundText?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.onGetMoreResults
    name: onGetMoreResults
    fullName: onGetMoreResults
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The callback that should be called when the user attempts to get more
      results
    optional: true
    syntax:
      content: 'onGetMoreResults?: () => void'
      return:
        type:
          - () => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.onRenderNoResultFound
    name: onRenderNoResultFound
    fullName: onRenderNoResultFound
    children: []
    langs:
      - typeScript
    type: property
    summary: How the "no result found" should look in the suggestion list.
    optional: true
    syntax:
      content: 'onRenderNoResultFound?: IRenderFunction<void>'
      return:
        type:
          - IRenderFunction<void>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.onRenderSuggestion
    name: onRenderSuggestion
    fullName: onRenderSuggestion
    children: []
    langs:
      - typeScript
    type: property
    summary: How the suggestion should look in the suggestion list.
    optional: true
    syntax:
      content: 'onRenderSuggestion?: (props: T, suggestionItemProps: T) => Element'
      return:
        type:
          - '(props: T, suggestionItemProps: T) => Element'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.onSuggestionClick
    name: onSuggestionClick
    fullName: onSuggestionClick
    children: []
    langs:
      - typeScript
    type: property
    summary: What should occur when a suggestion is clicked
    syntax:
      content: >-
        onSuggestionClick: (ev?: MouseEvent<HTMLElement>, item?: any, index?:
        number) => void
      return:
        type:
          - '(ev?: MouseEvent<HTMLElement>, item?: any, index?: number) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.onSuggestionRemove
    name: onSuggestionRemove
    fullName: onSuggestionRemove
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Function to fire when one of the optional remove buttons on a suggestion
      is clicked.

      TODO (adjective-object) remove IPersonaprops before the next major version
      bump
    optional: true
    syntax:
      content: >-
        onSuggestionRemove?: (ev?: MouseEvent<HTMLElement>, item?: T |
        IPersonaProps, index?: number) => void
      return:
        type:
          - >-
            (ev?: MouseEvent<HTMLElement>, item?: T | IPersonaProps, index?:
            number) => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.refocusSuggestions
    name: refocusSuggestions
    fullName: refocusSuggestions
    children: []
    langs:
      - typeScript
    type: property
    summary: A function that resets focus to the expected item in the suggestion list
    optional: true
    syntax:
      content: 'refocusSuggestions?: (keyCode: KeyCodes) => void'
      return:
        type:
          - '(keyCode: KeyCodes) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.removeSuggestionAriaLabel
    name: removeSuggestionAriaLabel
    fullName: removeSuggestionAriaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: An ARIA label to use for the buttons to remove individual suggestions.
    optional: true
    syntax:
      content: 'removeSuggestionAriaLabel?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.resultsFooter
    name: resultsFooter
    fullName: resultsFooter
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A renderer that adds an element at the end of the suggestions list it has
      fewer items than resultsMaximumNumber.
    optional: true
    syntax:
      content: 'resultsFooter?: (props: ISuggestionsProps<T>) => Element'
      return:
        type:
          - '(props: ISuggestionsProps<T>) => Element'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.resultsFooterFull
    name: resultsFooterFull
    fullName: resultsFooterFull
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A renderer that adds an element at the end of the suggestions list it has
      more items than resultsMaximumNumber.
    optional: true
    syntax:
      content: 'resultsFooterFull?: (props: ISuggestionsProps<T>) => Element'
      return:
        type:
          - '(props: ISuggestionsProps<T>) => Element'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.resultsMaximumNumber
    name: resultsMaximumNumber
    fullName: resultsMaximumNumber
    children: []
    langs:
      - typeScript
    type: property
    summary: Maximum number of suggestions to show in the full suggestion list.
    optional: true
    syntax:
      content: 'resultsMaximumNumber?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.searchErrorText
    name: searchErrorText
    fullName: searchErrorText
    children: []
    langs:
      - typeScript
    type: property
    summary: The text that should appear if there is a search error.
    optional: true
    syntax:
      content: 'searchErrorText?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.searchForMoreText
    name: searchForMoreText
    fullName: searchForMoreText
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The text that appears indicating to the user that they can search for more
      results.
    optional: true
    syntax:
      content: 'searchForMoreText?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.searchingText
    name: searchingText
    fullName: searchingText
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The text to display while searching for more results in a limited
      suggestions list.
    optional: true
    syntax:
      content: 'searchingText?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.showForceResolve
    name: showForceResolve
    fullName: showForceResolve
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The callback that should be called to see if the force resolve command
      should be shown
    optional: true
    syntax:
      content: 'showForceResolve?: () => boolean'
      return:
        type:
          - () => boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.showRemoveButtons
    name: showRemoveButtons
    fullName: showRemoveButtons
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Indicates whether to show a button with each suggestion to remove that
      suggestion.
    optional: true
    syntax:
      content: 'showRemoveButtons?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.styles
    name: styles
    fullName: styles
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules.
    optional: true
    syntax:
      content: 'styles?: IStyleFunctionOrObject<__type, __type>'
      return:
        type:
          - 'IStyleFunctionOrObject<__type, __type>'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.suggestions
    name: suggestions
    fullName: suggestions
    children: []
    langs:
      - typeScript
    type: property
    summary: The list of Suggestions that will be displayed
    syntax:
      content: 'suggestions: ISuggestionModel<T>[]'
      return:
        type:
          - 'office-ui-fabric-react.ISuggestionModel<T>[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.suggestionsAvailableAlertText
    name: suggestionsAvailableAlertText
    fullName: suggestionsAvailableAlertText
    children: []
    langs:
      - typeScript
    type: property
    summary: Screen reader message to read when there are suggestions available.
    optional: true
    syntax:
      content: 'suggestionsAvailableAlertText?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.suggestionsClassName
    name: suggestionsClassName
    fullName: suggestionsClassName
    children: []
    langs:
      - typeScript
    type: property
    summary: The CSS className of the suggestions list
    optional: true
    syntax:
      content: 'suggestionsClassName?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.suggestionsContainerAriaLabel
    name: suggestionsContainerAriaLabel
    fullName: suggestionsContainerAriaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: An ARIA label for the container that is the parent of the suggestions.
    optional: true
    syntax:
      content: 'suggestionsContainerAriaLabel?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.suggestionsHeaderText
    name: suggestionsHeaderText
    fullName: suggestionsHeaderText
    children: []
    langs:
      - typeScript
    type: property
    summary: The text that appears at the top of the suggestions list.
    optional: true
    syntax:
      content: 'suggestionsHeaderText?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.suggestionsItemClassName
    name: suggestionsItemClassName
    fullName: suggestionsItemClassName
    children: []
    langs:
      - typeScript
    type: property
    summary: The className of the suggestion item.
    optional: true
    syntax:
      content: 'suggestionsItemClassName?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.suggestionsListId
    name: suggestionsListId
    fullName: suggestionsListId
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The string that will be used as the suggestionsListId.
      Will be used by the BasePicker to keep track of the list for aria.
    optional: true
    syntax:
      content: 'suggestionsListId?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionsProps.theme
    name: theme
    fullName: theme
    children: []
    langs:
      - typeScript
    type: property
    summary: Theme provided by High-Order Component.
    optional: true
    syntax:
      content: 'theme?: ITheme'
      return:
        type:
          - ITheme
    package: office-ui-fabric-react
references:
  - uid: IRefObject<office-ui-fabric-react.ISuggestions<T>>
    name: ISuggestions<T>>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: ISuggestions
        fullName: ISuggestions
        uid: office-ui-fabric-react.ISuggestions
      - name: <T>>
        fullName: <T>>
  - uid: 'office-ui-fabric-react.ISuggestionModel<T>[]'
    name: 'ISuggestionModel<T>[]'
    spec.typeScript:
      - name: ISuggestionModel
        fullName: ISuggestionModel
        uid: office-ui-fabric-react.ISuggestionModel
      - name: '<T>[]'
        fullName: '<T>[]'
