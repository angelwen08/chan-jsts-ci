### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.ISuggestionItemProps
    name: ISuggestionItemProps
    fullName: ISuggestionItemProps<T>
    children:
      - office-ui-fabric-react.ISuggestionItemProps.className
      - office-ui-fabric-react.ISuggestionItemProps.componentRef
      - office-ui-fabric-react.ISuggestionItemProps.id
      - office-ui-fabric-react.ISuggestionItemProps.isSelectedOverride
      - office-ui-fabric-react.ISuggestionItemProps.onClick
      - office-ui-fabric-react.ISuggestionItemProps.onRemoveItem
      - office-ui-fabric-react.ISuggestionItemProps.removeButtonAriaLabel
      - office-ui-fabric-react.ISuggestionItemProps.RenderSuggestion
      - office-ui-fabric-react.ISuggestionItemProps.showRemoveButton
      - office-ui-fabric-react.ISuggestionItemProps.styles
      - office-ui-fabric-react.ISuggestionItemProps.suggestionModel
      - office-ui-fabric-react.ISuggestionItemProps.theme
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: >-
      Suggestion item props. Refers to the each individual suggested items
      rendered within Suggestions callout.

      Type T is the type of the item that is displayed.

      {@docCategory Pickers}
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionItemProps.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional className for the root element of the suggestion item.
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionItemProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional callback to access the ISuggestionItem interface. Use this
      instead of ref for accessing

      the public methods and properties of the component.
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<ISuggestionsItem>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.ISuggestionsItem>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionItemProps.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: Unique id of the suggested item.
    optional: true
    syntax:
      content: 'id?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionItemProps.isSelectedOverride
    name: isSelectedOverride
    fullName: isSelectedOverride
    children: []
    langs:
      - typeScript
    type: property
    summary: An override for the 'selected' property of the SuggestionModel.
    optional: true
    syntax:
      content: 'isSelectedOverride?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionItemProps.onClick
    name: onClick
    fullName: onClick
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback for when the user clicks on the suggestion.
    syntax:
      content: 'onClick: (ev: MouseEvent<HTMLButtonElement>) => void'
      return:
        type:
          - '(ev: MouseEvent<HTMLButtonElement>) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionItemProps.onRemoveItem
    name: onRemoveItem
    fullName: onRemoveItem
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback for when the item is removed from the array of suggested items.
    syntax:
      content: 'onRemoveItem: (ev: MouseEvent<HTMLButtonElement>) => void'
      return:
        type:
          - '(ev: MouseEvent<HTMLButtonElement>) => void'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionItemProps.removeButtonAriaLabel
    name: removeButtonAriaLabel
    fullName: removeButtonAriaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: The ARIA label for the button to remove the suggestion from the list.
    optional: true
    syntax:
      content: 'removeButtonAriaLabel?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionItemProps.RenderSuggestion
    name: RenderSuggestion
    fullName: RenderSuggestion
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional renderer to override the default one for each type of picker.
    syntax:
      content: >-
        RenderSuggestion: (item: T, suggestionItemProps?:
        ISuggestionItemProps<T>) => Element
      return:
        type:
          - '(item: T, suggestionItemProps?: ISuggestionItemProps<T>) => Element'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionItemProps.showRemoveButton
    name: showRemoveButton
    fullName: showRemoveButton
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether the remove button should be rendered or not.
    optional: true
    syntax:
      content: 'showRemoveButton?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionItemProps.styles
    name: styles
    fullName: styles
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules.
    optional: true
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<ISuggestionsItemStyleProps,
        ISuggestionsItemStyles>
      return:
        type:
          - >-
            IStyleFunctionOrObject<office-ui-fabric-react.ISuggestionsItemStyleProps,
            office-ui-fabric-react.ISuggestionsItemStyles>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionItemProps.suggestionModel
    name: suggestionModel
    fullName: suggestionModel
    children: []
    langs:
      - typeScript
    type: property
    summary: Individual suggestion object containing its properties.
    syntax:
      content: 'suggestionModel: ISuggestionModel<T>'
      return:
        type:
          - office-ui-fabric-react.ISuggestionModel<T>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.ISuggestionItemProps.theme
    name: theme
    fullName: theme
    children: []
    langs:
      - typeScript
    type: property
    summary: Theme provided by High-Order Component.
    optional: true
    syntax:
      content: 'theme?: ITheme'
      return:
        type:
          - ITheme
    package: office-ui-fabric-react
references:
  - uid: IRefObject<office-ui-fabric-react.ISuggestionsItem>
    name: ISuggestionsItem>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: ISuggestionsItem
        fullName: ISuggestionsItem
        uid: office-ui-fabric-react.ISuggestionsItem
      - name: '>'
        fullName: '>'
  - uid: >-
      IStyleFunctionOrObject<office-ui-fabric-react.ISuggestionsItemStyleProps,
      office-ui-fabric-react.ISuggestionsItemStyles>
    name: ISuggestionsItemStyles>
    spec.typeScript:
      - name: IStyleFunctionOrObject<
        fullName: IStyleFunctionOrObject<
      - name: ISuggestionsItemStyleProps
        fullName: ISuggestionsItemStyleProps
        uid: office-ui-fabric-react.ISuggestionsItemStyleProps
      - name: ', '
        fullName: ', '
      - name: ISuggestionsItemStyles
        fullName: ISuggestionsItemStyles
        uid: office-ui-fabric-react.ISuggestionsItemStyles
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.ISuggestionModel<T>
    name: ISuggestionModel<T>
    spec.typeScript:
      - name: ISuggestionModel
        fullName: ISuggestionModel
        uid: office-ui-fabric-react.ISuggestionModel
      - name: <T>
        fullName: <T>
