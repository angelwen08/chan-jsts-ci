### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IChoiceGroupProps
    name: IChoiceGroupProps
    fullName: IChoiceGroupProps
    children:
      - office-ui-fabric-react.IChoiceGroupProps.ariaLabelledBy
      - office-ui-fabric-react.IChoiceGroupProps.componentRef
      - office-ui-fabric-react.IChoiceGroupProps.defaultSelectedKey
      - office-ui-fabric-react.IChoiceGroupProps.label
      - office-ui-fabric-react.IChoiceGroupProps.onChange
      - office-ui-fabric-react.IChoiceGroupProps.onChanged
      - office-ui-fabric-react.IChoiceGroupProps.options
      - office-ui-fabric-react.IChoiceGroupProps.selectedKey
      - office-ui-fabric-react.IChoiceGroupProps.styles
      - office-ui-fabric-react.IChoiceGroupProps.theme
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory ChoiceGroup}'
    extends:
      name: InputHTMLAttributes<HTMLElement | HTMLInputElement>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IChoiceGroupProps.ariaLabelledBy
    name: ariaLabelledBy
    fullName: ariaLabelledBy
    children: []
    langs:
      - typeScript
    type: property
    summary: Aria labelled by prop for the ChoiceGroup itself
    optional: true
    syntax:
      content: 'ariaLabelledBy?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IChoiceGroupProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional callback to access the IChoiceGroup interface. Use this instead
      of ref for accessing

      the public methods and properties of the component.
    optional: true
    syntax:
      content: 'componentRef?: IRefObject<IChoiceGroup>'
      return:
        type:
          - IRefObject<office-ui-fabric-react.IChoiceGroup>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IChoiceGroupProps.defaultSelectedKey
    name: defaultSelectedKey
    fullName: defaultSelectedKey
    children: []
    langs:
      - typeScript
    type: property
    summary: The key of the option that will be initially checked.
    optional: true
    syntax:
      content: 'defaultSelectedKey?: string | number'
      return:
        type:
          - string | number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IChoiceGroupProps.label
    name: label
    fullName: label
    children: []
    langs:
      - typeScript
    type: property
    summary: Descriptive label for the choice group.
    optional: true
    syntax:
      content: 'label?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IChoiceGroupProps.onChange
    name: onChange
    fullName: onChange
    children: []
    langs:
      - typeScript
    type: property
    summary: A callback for receiving a notification when the choice has been changed.
    optional: true
    syntax:
      content: >-
        onChange?: (ev?: FormEvent<HTMLElement | HTMLInputElement>, option?:
        IChoiceGroupOption) => void
      return:
        type:
          - >-
            (ev?: FormEvent<HTMLElement | HTMLInputElement>, option?:
            IChoiceGroupOption) => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IChoiceGroupProps.onChanged
    name: onChanged
    fullName: onChanged
    children: []
    langs:
      - typeScript
    type: property
    summary: Deprecated and will be removed by 07/17/2017. Use `onChange` instead.
    optional: true
    syntax:
      content: >-
        onChanged?: (option: IChoiceGroupOption, evt?: FormEvent<HTMLElement |
        HTMLInputElement>) => void
      return:
        type:
          - >-
            (option: IChoiceGroupOption, evt?: FormEvent<HTMLElement |
            HTMLInputElement>) => void
    package: office-ui-fabric-react
    deprecated:
      content: Use `onChange` instead.
  - uid: office-ui-fabric-react.IChoiceGroupProps.options
    name: options
    fullName: options
    children: []
    langs:
      - typeScript
    type: property
    summary: The options for the choice group.
    optional: true
    syntax:
      content: 'options?: IChoiceGroupOption[]'
      return:
        type:
          - 'office-ui-fabric-react.IChoiceGroupOption[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IChoiceGroupProps.selectedKey
    name: selectedKey
    fullName: selectedKey
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The key of the selected option. If you provide this, you must maintain
      selection

      state by observing onChange events and passing a new value in when
      changed.
    optional: true
    syntax:
      content: 'selectedKey?: string | number'
      return:
        type:
          - string | number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IChoiceGroupProps.styles
    name: styles
    fullName: styles
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules.
    optional: true
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<IChoiceGroupStyleProps,
        IChoiceGroupStyles>
      return:
        type:
          - >-
            IStyleFunctionOrObject<office-ui-fabric-react.IChoiceGroupStyleProps,
            office-ui-fabric-react.IChoiceGroupStyles>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IChoiceGroupProps.theme
    name: theme
    fullName: theme
    children: []
    langs:
      - typeScript
    type: property
    summary: Theme (provided through customization.)
    optional: true
    syntax:
      content: 'theme?: ITheme'
      return:
        type:
          - ITheme
    package: office-ui-fabric-react
references:
  - uid: IRefObject<office-ui-fabric-react.IChoiceGroup>
    name: IChoiceGroup>
    spec.typeScript:
      - name: IRefObject<
        fullName: IRefObject<
      - name: IChoiceGroup
        fullName: IChoiceGroup
        uid: office-ui-fabric-react.IChoiceGroup
      - name: '>'
        fullName: '>'
  - uid: 'office-ui-fabric-react.IChoiceGroupOption[]'
    name: 'IChoiceGroupOption[]'
    spec.typeScript:
      - name: IChoiceGroupOption
        fullName: IChoiceGroupOption
        uid: office-ui-fabric-react.IChoiceGroupOption
      - name: '[]'
        fullName: '[]'
  - uid: >-
      IStyleFunctionOrObject<office-ui-fabric-react.IChoiceGroupStyleProps,
      office-ui-fabric-react.IChoiceGroupStyles>
    name: IChoiceGroupStyles>
    spec.typeScript:
      - name: IStyleFunctionOrObject<
        fullName: IStyleFunctionOrObject<
      - name: IChoiceGroupStyleProps
        fullName: IChoiceGroupStyleProps
        uid: office-ui-fabric-react.IChoiceGroupStyleProps
      - name: ', '
        fullName: ', '
      - name: IChoiceGroupStyles
        fullName: IChoiceGroupStyles
        uid: office-ui-fabric-react.IChoiceGroupStyles
      - name: '>'
        fullName: '>'
