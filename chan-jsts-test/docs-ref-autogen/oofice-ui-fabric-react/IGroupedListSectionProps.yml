### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IGroupedListSectionProps
    name: IGroupedListSectionProps
    fullName: IGroupedListSectionProps
    children:
      - office-ui-fabric-react.IGroupedListSectionProps.compact
      - office-ui-fabric-react.IGroupedListSectionProps.componentRef
      - office-ui-fabric-react.IGroupedListSectionProps.dragDropEvents
      - office-ui-fabric-react.IGroupedListSectionProps.dragDropHelper
      - office-ui-fabric-react.IGroupedListSectionProps.eventsToRegister
      - office-ui-fabric-react.IGroupedListSectionProps.footerProps
      - office-ui-fabric-react.IGroupedListSectionProps.getGroupItemLimit
      - office-ui-fabric-react.IGroupedListSectionProps.group
      - office-ui-fabric-react.IGroupedListSectionProps.groupedListClassNames
      - office-ui-fabric-react.IGroupedListSectionProps.groupIndex
      - office-ui-fabric-react.IGroupedListSectionProps.groupNestingDepth
      - office-ui-fabric-react.IGroupedListSectionProps.groupProps
      - office-ui-fabric-react.IGroupedListSectionProps.groups
      - office-ui-fabric-react.IGroupedListSectionProps.headerProps
      - office-ui-fabric-react.IGroupedListSectionProps.items
      - office-ui-fabric-react.IGroupedListSectionProps.listProps
      - office-ui-fabric-react.IGroupedListSectionProps.onRenderCell
      - office-ui-fabric-react.IGroupedListSectionProps.onRenderGroupFooter
      - office-ui-fabric-react.IGroupedListSectionProps.onRenderGroupHeader
      - office-ui-fabric-react.IGroupedListSectionProps.onRenderGroupShowAll
      - office-ui-fabric-react.IGroupedListSectionProps.onShouldVirtualize
      - office-ui-fabric-react.IGroupedListSectionProps.selection
      - office-ui-fabric-react.IGroupedListSectionProps.selectionMode
      - office-ui-fabric-react.IGroupedListSectionProps.showAllProps
      - office-ui-fabric-react.IGroupedListSectionProps.viewport
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: ClassAttributes<office-ui-fabric-react.GroupedListSection>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupedListSectionProps.compact
    name: compact
    fullName: compact
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether to render in compact mode
    optional: true
    syntax:
      content: 'compact?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupedListSectionProps.componentRef
    name: componentRef
    fullName: componentRef
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets the component ref.
    optional: true
    syntax:
      content: 'componentRef?: () => void'
      return:
        type:
          - () => void
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupedListSectionProps.dragDropEvents
    name: dragDropEvents
    fullName: dragDropEvents
    children: []
    langs:
      - typeScript
    type: property
    summary: Map of callback functions related to drag and drop functionality.
    optional: true
    syntax:
      content: 'dragDropEvents?: IDragDropEvents'
      return:
        type:
          - office-ui-fabric-react.IDragDropEvents
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupedListSectionProps.dragDropHelper
    name: dragDropHelper
    fullName: dragDropHelper
    children: []
    langs:
      - typeScript
    type: property
    summary: helper to manage drag/drop across item rows and groups
    optional: true
    syntax:
      content: 'dragDropHelper?: IDragDropHelper'
      return:
        type:
          - office-ui-fabric-react.IDragDropHelper
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupedListSectionProps.eventsToRegister
    name: eventsToRegister
    fullName: eventsToRegister
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Event names and corresponding callbacks that will be registered to the
      group and the rendered elements
    optional: true
    syntax:
      content: 'eventsToRegister?: Object[]'
      return:
        type:
          - 'Object[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupedListSectionProps.footerProps
    name: footerProps
    fullName: footerProps
    children: []
    langs:
      - typeScript
    type: property
    summary: Information to pass in to the group footer.
    optional: true
    syntax:
      content: 'footerProps?: IGroupFooterProps'
      return:
        type:
          - office-ui-fabric-react.IGroupFooterProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupedListSectionProps.getGroupItemLimit
    name: getGroupItemLimit
    fullName: getGroupItemLimit
    children: []
    langs:
      - typeScript
    type: property
    summary: Grouping item limit.
    optional: true
    syntax:
      content: 'getGroupItemLimit?: (group: IGroup) => number'
      return:
        type:
          - '(group: IGroup) => number'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupedListSectionProps.group
    name: group
    fullName: group
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional grouping instructions.
    optional: true
    syntax:
      content: 'group?: IGroup'
      return:
        type:
          - office-ui-fabric-react.IGroup
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupedListSectionProps.groupedListClassNames
    name: groupedListClassNames
    fullName: groupedListClassNames
    children: []
    langs:
      - typeScript
    type: property
    summary: GroupedList resolved class names
    optional: true
    syntax:
      content: 'groupedListClassNames?: IClassNames<IGroupedListStyles>'
      return:
        type:
          - IClassNames<office-ui-fabric-react.IGroupedListStyles>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupedListSectionProps.groupIndex
    name: groupIndex
    fullName: groupIndex
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional grouping instructions.
    optional: true
    syntax:
      content: 'groupIndex?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupedListSectionProps.groupNestingDepth
    name: groupNestingDepth
    fullName: groupNestingDepth
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional group nesting level.
    optional: true
    syntax:
      content: 'groupNestingDepth?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupedListSectionProps.groupProps
    name: groupProps
    fullName: groupProps
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional override properties to render groups.
    optional: true
    syntax:
      content: 'groupProps?: IGroupRenderProps'
      return:
        type:
          - office-ui-fabric-react.IGroupRenderProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupedListSectionProps.groups
    name: groups
    fullName: groups
    children: []
    langs:
      - typeScript
    type: property
    summary: Stores parent group's children.
    optional: true
    syntax:
      content: 'groups?: IGroup[]'
      return:
        type:
          - 'office-ui-fabric-react.IGroup[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupedListSectionProps.headerProps
    name: headerProps
    fullName: headerProps
    children: []
    langs:
      - typeScript
    type: property
    summary: Information to pass in to the group header.
    optional: true
    syntax:
      content: 'headerProps?: IGroupHeaderProps'
      return:
        type:
          - office-ui-fabric-react.IGroupHeaderProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupedListSectionProps.items
    name: items
    fullName: items
    children: []
    langs:
      - typeScript
    type: property
    summary: List of items to render.
    syntax:
      content: 'items: any[]'
      return:
        type:
          - 'any[]'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupedListSectionProps.listProps
    name: listProps
    fullName: listProps
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional list props to pass to list renderer.
    optional: true
    syntax:
      content: 'listProps?: IListProps'
      return:
        type:
          - office-ui-fabric-react.IListProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupedListSectionProps.onRenderCell
    name: onRenderCell
    fullName: onRenderCell
    children: []
    langs:
      - typeScript
    type: property
    summary: Rendering callback to render the group items.
    syntax:
      content: >-
        onRenderCell: (nestingDepth?: number, item?: any, index?: number) =>
        React.ReactNode
      return:
        type:
          - >-
            (nestingDepth?: number, item?: any, index?: number) =>
            React.ReactNode
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupedListSectionProps.onRenderGroupFooter
    name: onRenderGroupFooter
    fullName: onRenderGroupFooter
    children: []
    langs:
      - typeScript
    type: property
    summary: Override for rendering the group footer.
    optional: true
    syntax:
      content: 'onRenderGroupFooter?: IRenderFunction<IGroupFooterProps>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.IGroupFooterProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupedListSectionProps.onRenderGroupHeader
    name: onRenderGroupHeader
    fullName: onRenderGroupHeader
    children: []
    langs:
      - typeScript
    type: property
    summary: Override for rendering the group header.
    optional: true
    syntax:
      content: 'onRenderGroupHeader?: IRenderFunction<IGroupHeaderProps>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.IGroupHeaderProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupedListSectionProps.onRenderGroupShowAll
    name: onRenderGroupShowAll
    fullName: onRenderGroupShowAll
    children: []
    langs:
      - typeScript
    type: property
    summary: Override for rendering the group Show All link.
    optional: true
    syntax:
      content: 'onRenderGroupShowAll?: IRenderFunction<IGroupShowAllProps>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.IGroupShowAllProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupedListSectionProps.onShouldVirtualize
    name: onShouldVirtualize
    fullName: onShouldVirtualize
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional callback to determine whether the list should be rendered in
      full, or virtualized.

      Virtualization will add and remove pages of items as the user scrolls them
      into the visible range.

      This benefits larger list scenarios by reducing the DOM on the screen, but
      can negatively affect performance for smaller lists.

      The default implementation will virtualize when this callback is not
      provided.
    optional: true
    syntax:
      content: 'onShouldVirtualize?: (props: IListProps) => boolean'
      return:
        type:
          - '(props: IListProps) => boolean'
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupedListSectionProps.selection
    name: selection
    fullName: selection
    children: []
    langs:
      - typeScript
    type: property
    summary: Optional selection model to track selection state.
    optional: true
    syntax:
      content: 'selection?: ISelection'
      return:
        type:
          - office-ui-fabric-react.ISelection
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupedListSectionProps.selectionMode
    name: selectionMode
    fullName: selectionMode
    children: []
    langs:
      - typeScript
    type: property
    summary: Controls how/if the details list manages selection.
    optional: true
    syntax:
      content: 'selectionMode?: SelectionMode'
      return:
        type:
          - office-ui-fabric-react.SelectionMode
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupedListSectionProps.showAllProps
    name: showAllProps
    fullName: showAllProps
    children: []
    langs:
      - typeScript
    type: property
    summary: Information to pass in to the group Show All footer.
    optional: true
    syntax:
      content: 'showAllProps?: IGroupShowAllProps'
      return:
        type:
          - office-ui-fabric-react.IGroupShowAllProps
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IGroupedListSectionProps.viewport
    name: viewport
    fullName: viewport
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Optional Viewport, provided by the parent component.'
    optional: true
    syntax:
      content: 'viewport?: IViewport'
      return:
        type:
          - office-ui-fabric-react.IViewport
    package: office-ui-fabric-react
references:
  - uid: ClassAttributes<office-ui-fabric-react.GroupedListSection>
    name: GroupedListSection>
    spec.typeScript:
      - name: ClassAttributes<
        fullName: ClassAttributes<
      - name: GroupedListSection
        fullName: GroupedListSection
        uid: office-ui-fabric-react.GroupedListSection
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.IDragDropEvents
    name: IDragDropEvents
    spec.typeScript:
      - name: IDragDropEvents
        fullName: IDragDropEvents
        uid: office-ui-fabric-react.IDragDropEvents
  - uid: office-ui-fabric-react.IDragDropHelper
    name: IDragDropHelper
    spec.typeScript:
      - name: IDragDropHelper
        fullName: IDragDropHelper
        uid: office-ui-fabric-react.IDragDropHelper
  - uid: office-ui-fabric-react.IGroupFooterProps
    name: IGroupFooterProps
    spec.typeScript:
      - name: IGroupFooterProps
        fullName: IGroupFooterProps
        uid: office-ui-fabric-react.IGroupFooterProps
  - uid: office-ui-fabric-react.IGroup
    name: IGroup
    spec.typeScript:
      - name: IGroup
        fullName: IGroup
        uid: office-ui-fabric-react.IGroup
  - uid: office-ui-fabric-react.IGroupRenderProps
    name: IGroupRenderProps
    spec.typeScript:
      - name: IGroupRenderProps
        fullName: IGroupRenderProps
        uid: office-ui-fabric-react.IGroupRenderProps
  - uid: IClassNames<office-ui-fabric-react.IGroupedListStyles>
    name: IGroupedListStyles>
    spec.typeScript:
      - name: IClassNames<
        fullName: IClassNames<
      - name: IGroupedListStyles
        fullName: IGroupedListStyles
        uid: office-ui-fabric-react.IGroupedListStyles
      - name: '>'
        fullName: '>'
  - uid: 'office-ui-fabric-react.IGroup[]'
    name: 'IGroup[]'
    spec.typeScript:
      - name: IGroup
        fullName: IGroup
        uid: office-ui-fabric-react.IGroup
      - name: '[]'
        fullName: '[]'
  - uid: office-ui-fabric-react.IGroupHeaderProps
    name: IGroupHeaderProps
    spec.typeScript:
      - name: IGroupHeaderProps
        fullName: IGroupHeaderProps
        uid: office-ui-fabric-react.IGroupHeaderProps
  - uid: office-ui-fabric-react.IListProps
    name: IListProps
    spec.typeScript:
      - name: IListProps
        fullName: IListProps
        uid: office-ui-fabric-react.IListProps
  - uid: IRenderFunction<office-ui-fabric-react.IGroupFooterProps>
    name: IGroupFooterProps>
    spec.typeScript:
      - name: IRenderFunction<
        fullName: IRenderFunction<
      - name: IGroupFooterProps
        fullName: IGroupFooterProps
        uid: office-ui-fabric-react.IGroupFooterProps
      - name: '>'
        fullName: '>'
  - uid: IRenderFunction<office-ui-fabric-react.IGroupHeaderProps>
    name: IGroupHeaderProps>
    spec.typeScript:
      - name: IRenderFunction<
        fullName: IRenderFunction<
      - name: IGroupHeaderProps
        fullName: IGroupHeaderProps
        uid: office-ui-fabric-react.IGroupHeaderProps
      - name: '>'
        fullName: '>'
  - uid: IRenderFunction<office-ui-fabric-react.IGroupShowAllProps>
    name: IGroupShowAllProps>
    spec.typeScript:
      - name: IRenderFunction<
        fullName: IRenderFunction<
      - name: IGroupShowAllProps
        fullName: IGroupShowAllProps
        uid: office-ui-fabric-react.IGroupShowAllProps
      - name: '>'
        fullName: '>'
  - uid: office-ui-fabric-react.ISelection
    name: ISelection
    spec.typeScript:
      - name: ISelection
        fullName: ISelection
        uid: office-ui-fabric-react.ISelection
  - uid: office-ui-fabric-react.SelectionMode
    name: SelectionMode
    spec.typeScript:
      - name: SelectionMode
        fullName: SelectionMode
        uid: office-ui-fabric-react.SelectionMode
  - uid: office-ui-fabric-react.IGroupShowAllProps
    name: IGroupShowAllProps
    spec.typeScript:
      - name: IGroupShowAllProps
        fullName: IGroupShowAllProps
        uid: office-ui-fabric-react.IGroupShowAllProps
  - uid: office-ui-fabric-react.IViewport
    name: IViewport
    spec.typeScript:
      - name: IViewport
        fullName: IViewport
        uid: office-ui-fabric-react.IViewport
