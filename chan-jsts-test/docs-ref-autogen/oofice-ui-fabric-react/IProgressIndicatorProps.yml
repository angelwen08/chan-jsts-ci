### YamlMime:UniversalReference
items:
  - uid: office-ui-fabric-react.IProgressIndicatorProps
    name: IProgressIndicatorProps
    fullName: IProgressIndicatorProps
    children:
      - office-ui-fabric-react.IProgressIndicatorProps.ariaValueText
      - office-ui-fabric-react.IProgressIndicatorProps.barHeight
      - office-ui-fabric-react.IProgressIndicatorProps.className
      - office-ui-fabric-react.IProgressIndicatorProps.description
      - office-ui-fabric-react.IProgressIndicatorProps.label
      - office-ui-fabric-react.IProgressIndicatorProps.onRenderProgress
      - office-ui-fabric-react.IProgressIndicatorProps.percentComplete
      - office-ui-fabric-react.IProgressIndicatorProps.progressHidden
      - office-ui-fabric-react.IProgressIndicatorProps.styles
      - office-ui-fabric-react.IProgressIndicatorProps.theme
      - office-ui-fabric-react.IProgressIndicatorProps.title
    syntax:
      content: ''
    langs:
      - typeScript
    type: interface
    summary: '{@docCategory ProgressIndicator}'
    extends:
      name: ClassAttributes<office-ui-fabric-react.ProgressIndicatorBase>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IProgressIndicatorProps.ariaValueText
    name: ariaValueText
    fullName: ariaValueText
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Text alternative of the progress status, used by screen readers for
      reading the value of the progress.
    optional: true
    syntax:
      content: 'ariaValueText?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IProgressIndicatorProps.barHeight
    name: barHeight
    fullName: barHeight
    children: []
    langs:
      - typeScript
    type: property
    summary: Height of the ProgressIndicator
    optional: true
    syntax:
      content: 'barHeight?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IProgressIndicatorProps.className
    name: className
    fullName: className
    children: []
    langs:
      - typeScript
    type: property
    summary: Additional css class to apply to the ProgressIndicator
    optional: true
    syntax:
      content: 'className?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IProgressIndicatorProps.description
    name: description
    fullName: description
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Text describing or supplementing the operation. May be a string or React
      virtual elements.
    optional: true
    syntax:
      content: 'description?: React.ReactNode'
      return:
        type:
          - React.ReactNode
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IProgressIndicatorProps.label
    name: label
    fullName: label
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Label to display above the control. May be a string or React virtual
      elements.
    optional: true
    syntax:
      content: 'label?: React.ReactNode'
      return:
        type:
          - React.ReactNode
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IProgressIndicatorProps.onRenderProgress
    name: onRenderProgress
    fullName: onRenderProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: A render override for the progress track.
    optional: true
    syntax:
      content: 'onRenderProgress?: IRenderFunction<IProgressIndicatorProps>'
      return:
        type:
          - IRenderFunction<office-ui-fabric-react.IProgressIndicatorProps>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IProgressIndicatorProps.percentComplete
    name: percentComplete
    fullName: percentComplete
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Percentage of the operation's completeness, numerically between 0 and 1.
      If this is not set,

      the indeterminate progress animation will be shown instead.
    optional: true
    syntax:
      content: 'percentComplete?: number'
      return:
        type:
          - number
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IProgressIndicatorProps.progressHidden
    name: progressHidden
    fullName: progressHidden
    children: []
    langs:
      - typeScript
    type: property
    summary: Whether or not to hide the progress state.
    optional: true
    syntax:
      content: 'progressHidden?: boolean'
      return:
        type:
          - boolean
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IProgressIndicatorProps.styles
    name: styles
    fullName: styles
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules.
    optional: true
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<IProgressIndicatorStyleProps,
        IProgressIndicatorStyles>
      return:
        type:
          - >-
            IStyleFunctionOrObject<office-ui-fabric-react.IProgressIndicatorStyleProps,
            office-ui-fabric-react.IProgressIndicatorStyles>
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IProgressIndicatorProps.theme
    name: theme
    fullName: theme
    children: []
    langs:
      - typeScript
    type: property
    summary: Theme provided by High-Order Component.
    optional: true
    syntax:
      content: 'theme?: ITheme'
      return:
        type:
          - ITheme
    package: office-ui-fabric-react
  - uid: office-ui-fabric-react.IProgressIndicatorProps.title
    name: title
    fullName: title
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Deprecated at v0.43.0, to be removed at \>= v0.53.0. Use `label` instead.'
    optional: true
    syntax:
      content: 'title?: string'
      return:
        type:
          - string
    package: office-ui-fabric-react
    deprecated:
      content: Use `label` instead.
references:
  - uid: ClassAttributes<office-ui-fabric-react.ProgressIndicatorBase>
    name: ProgressIndicatorBase>
    spec.typeScript:
      - name: ClassAttributes<
        fullName: ClassAttributes<
      - name: ProgressIndicatorBase
        fullName: ProgressIndicatorBase
        uid: office-ui-fabric-react.ProgressIndicatorBase
      - name: '>'
        fullName: '>'
  - uid: IRenderFunction<office-ui-fabric-react.IProgressIndicatorProps>
    name: IProgressIndicatorProps>
    spec.typeScript:
      - name: IRenderFunction<
        fullName: IRenderFunction<
      - name: IProgressIndicatorProps
        fullName: IProgressIndicatorProps
        uid: office-ui-fabric-react.IProgressIndicatorProps
      - name: '>'
        fullName: '>'
  - uid: >-
      IStyleFunctionOrObject<office-ui-fabric-react.IProgressIndicatorStyleProps,
      office-ui-fabric-react.IProgressIndicatorStyles>
    name: IProgressIndicatorStyles>
    spec.typeScript:
      - name: IStyleFunctionOrObject<
        fullName: IStyleFunctionOrObject<
      - name: IProgressIndicatorStyleProps
        fullName: IProgressIndicatorStyleProps
        uid: office-ui-fabric-react.IProgressIndicatorStyleProps
      - name: ', '
        fullName: ', '
      - name: IProgressIndicatorStyles
        fullName: IProgressIndicatorStyles
        uid: office-ui-fabric-react.IProgressIndicatorStyles
      - name: '>'
        fullName: '>'
