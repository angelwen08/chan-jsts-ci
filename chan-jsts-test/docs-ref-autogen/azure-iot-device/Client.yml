### YamlMime:UniversalReference
items:
  - uid: azure-iot-device.Client
    name: Client
    fullName: Client
    children:
      - azure-iot-device.Client.abandon_1
      - azure-iot-device.Client.abandon
      - azure-iot-device.Client.constructor
      - azure-iot-device.Client.close_1
      - azure-iot-device.Client.close
      - azure-iot-device.Client.complete_1
      - azure-iot-device.Client.complete
      - azure-iot-device.Client.fromAuthenticationProvider
      - azure-iot-device.Client.fromConnectionString
      - azure-iot-device.Client.fromSharedAccessSignature
      - azure-iot-device.Client.getTwin_1
      - azure-iot-device.Client.getTwin
      - azure-iot-device.Client.onDeviceMethod
      - azure-iot-device.Client.open_1
      - azure-iot-device.Client.open
      - azure-iot-device.Client.reject_1
      - azure-iot-device.Client.reject
      - azure-iot-device.Client.sendEvent_1
      - azure-iot-device.Client.sendEvent
      - azure-iot-device.Client.sendEventBatch_1
      - azure-iot-device.Client.sendEventBatch
      - azure-iot-device.Client.setOptions_1
      - azure-iot-device.Client.setOptions
      - azure-iot-device.Client.setRetryPolicy
      - azure-iot-device.Client.setTransportOptions_1
      - azure-iot-device.Client.setTransportOptions
      - azure-iot-device.Client.updateSharedAccessSignature
      - azure-iot-device.Client.uploadToBlob_1
      - azure-iot-device.Client.uploadToBlob
    langs:
      - typeScript
    type: class
    summary: >
      IoT Hub device client used to connect a device with an Azure IoT hub.

      Users of the SDK should call one of the factory methods,

      [fromConnectionString](xref:azure-iot-device.Client.fromConnectionString)

      or
      [fromSharedAccessSignature](xref:azure-iot-device.Client.fromSharedAccessSignature)

      to create an IoT Hub device client.
    extends:
      name: InternalClient
    package: azure-iot-device
  - uid: azure-iot-device.Client.abandon_1
    name: abandon(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function abandon(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<results.MessageAbandoned>
    package: azure-iot-device
  - uid: azure-iot-device.Client.abandon
    name: 'abandon(Message, Callback<results.MessageAbandoned>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function abandon(message: Message, abandonCallback:
        Callback<results.MessageAbandoned>)
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: abandonCallback
          type:
            - Callback<results.MessageAbandoned>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.Client.constructor
    name: 'Client(DeviceTransport, string, BlobUploadClient)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new Client(transport: DeviceTransport, connStr?: string,
        blobUploadClient?: BlobUploadClient)
      parameters:
        - id: transport
          type:
            - azure-iot-device.DeviceTransport
          description: |-
            An object that implements the interface
                                               expected of a transport object, e.g.,
                                               [Http](xref:azure-iot-device-http.Http).
        - id: connStr
          type:
            - string
          description: >-
            A connection string (optional: when not provided,
            updateSharedAccessSignature must be called to set the
            SharedAccessSignature token directly).
          optional: true
        - id: blobUploadClient
          type:
            - BlobUploadClient
          description: |
            An object that is capable of uploading a stream to a blob.
          optional: true
    package: azure-iot-device
  - uid: azure-iot-device.Client.close_1
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Closes the transport connection and destroys the client resources.
      *Note: After calling this method the Client object cannot be reused.*
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<results.Disconnected>
    package: azure-iot-device
  - uid: azure-iot-device.Client.close
    name: close(Callback<results.Disconnected>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Closes the transport connection and destroys the client resources.
      *Note: After calling this method the Client object cannot be reused.*
    syntax:
      content: 'function close(closeCallback: Callback<results.Disconnected>)'
      parameters:
        - id: closeCallback
          type:
            - Callback<results.Disconnected>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.Client.complete_1
    name: complete(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function complete(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<results.MessageCompleted>
    package: azure-iot-device
  - uid: azure-iot-device.Client.complete
    name: 'complete(Message, Callback<results.MessageCompleted>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function complete(message: Message, completeCallback:
        Callback<results.MessageCompleted>)
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: completeCallback
          type:
            - Callback<results.MessageCompleted>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.Client.fromAuthenticationProvider
    name: 'fromAuthenticationProvider(AuthenticationProvider, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates an IoT Hub device client from the given authentication method and
      using the given transport type.
    syntax:
      content: >-
        static function fromAuthenticationProvider(authenticationProvider:
        AuthenticationProvider, transportCtor: any)
      parameters:
        - id: authenticationProvider
          type:
            - AuthenticationProvider
          description: Object used to obtain the authentication parameters for the IoT hub.
        - id: transportCtor
          type:
            - any
          description: |
            Transport protocol used to connect to IoT hub.
      return:
        type:
          - azure-iot-device.Client
    package: azure-iot-device
  - uid: azure-iot-device.Client.fromConnectionString
    name: 'fromConnectionString(string, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates an IoT Hub device client from the given connection string using
      the given transport type.
    syntax:
      content: >-
        static function fromConnectionString(connStr: string, transportCtor:
        any)
      parameters:
        - id: connStr
          type:
            - string
          description: >-
            A connection string which encapsulates "device connect" permissions
            on an IoT hub.
        - id: transportCtor
          type:
            - any
          description: |
            A transport constructor.
      return:
        type:
          - azure-iot-device.Client
    package: azure-iot-device
  - uid: azure-iot-device.Client.fromSharedAccessSignature
    name: 'fromSharedAccessSignature(string, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates an IoT Hub device client from the given
                         shared access signature using the given transport type.
    syntax:
      content: >-
        static function fromSharedAccessSignature(sharedAccessSignature: string,
        transportCtor: any)
      parameters:
        - id: sharedAccessSignature
          type:
            - string
          description: |-
            A shared access signature which encapsulates "device
                                             connect" permissions on an IoT hub.
        - id: transportCtor
          type:
            - any
          description: ''
      return:
        type:
          - azure-iot-device.Client
    package: azure-iot-device
  - uid: azure-iot-device.Client.getTwin_1
    name: getTwin()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getTwin()
      parameters: []
      return:
        type:
          - Promise<azure-iot-device.Twin>
    package: azure-iot-device
  - uid: azure-iot-device.Client.getTwin
    name: getTwin(Callback<Twin>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTwin(done: Callback<Twin>)'
      parameters:
        - id: done
          type:
            - Callback<azure-iot-device.Twin>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.Client.onDeviceMethod
    name: >-
      onDeviceMethod(string, (request: DeviceMethodRequest, response:
      DeviceMethodResponse) => void)
    children: []
    type: method
    langs:
      - typeScript
    summary: Registers a callback for a method named `methodName`.
    syntax:
      content: >-
        function onDeviceMethod(methodName: string, callback: (request:
        DeviceMethodRequest, response: DeviceMethodResponse) => void)
      parameters:
        - id: methodName
          type:
            - string
          description: Name of the method that will be handled by the callback
        - id: callback
          type:
            - >-
              (request: DeviceMethodRequest, response: DeviceMethodResponse) =>
              void
          description: >
            Function that shall be called whenever a method request for the
            method called `methodName` is received.
    package: azure-iot-device
  - uid: azure-iot-device.Client.open_1
    name: open()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function open()
      parameters: []
      return:
        type:
          - Promise<results.Connected>
    package: azure-iot-device
  - uid: azure-iot-device.Client.open
    name: open(Callback<results.Connected>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function open(openCallback: Callback<results.Connected>)'
      parameters:
        - id: openCallback
          type:
            - Callback<results.Connected>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.Client.reject_1
    name: reject(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reject(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<results.MessageRejected>
    package: azure-iot-device
  - uid: azure-iot-device.Client.reject
    name: 'reject(Message, Callback<results.MessageRejected>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function reject(message: Message, rejectCallback:
        Callback<results.MessageRejected>)
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: rejectCallback
          type:
            - Callback<results.MessageRejected>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.Client.sendEvent_1
    name: sendEvent(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendEvent(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<results.MessageEnqueued>
    package: azure-iot-device
  - uid: azure-iot-device.Client.sendEvent
    name: 'sendEvent(Message, Callback<results.MessageEnqueued>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function sendEvent(message: Message, sendEventCallback:
        Callback<results.MessageEnqueued>)
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: sendEventCallback
          type:
            - Callback<results.MessageEnqueued>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.Client.sendEventBatch_1
    name: 'sendEventBatch(Message[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendEventBatch(messages: Message[])'
      parameters:
        - id: messages
          type:
            - 'Message[]'
          description: ''
      return:
        type:
          - Promise<results.MessageEnqueued>
    package: azure-iot-device
  - uid: azure-iot-device.Client.sendEventBatch
    name: 'sendEventBatch(Message[], Callback<results.MessageEnqueued>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function sendEventBatch(messages: Message[], sendEventBatchCallback:
        Callback<results.MessageEnqueued>)
      parameters:
        - id: messages
          type:
            - 'Message[]'
          description: ''
        - id: sendEventBatchCallback
          type:
            - Callback<results.MessageEnqueued>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.Client.setOptions_1
    name: setOptions(DeviceClientOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Passes options to the `Client` object that can be used to configure the
      transport.
    syntax:
      content: 'function setOptions(options: DeviceClientOptions)'
      parameters:
        - id: options
          type:
            - azure-iot-device.DeviceClientOptions
          description: ''
      return:
        type:
          - Promise<results.TransportConfigured>
    package: azure-iot-device
  - uid: azure-iot-device.Client.setOptions
    name: 'setOptions(DeviceClientOptions, Callback<results.TransportConfigured>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Passes options to the `Client` object that can be used to configure the
      transport.
    syntax:
      content: >-
        function setOptions(options: DeviceClientOptions, done:
        Callback<results.TransportConfigured>)
      parameters:
        - id: options
          type:
            - azure-iot-device.DeviceClientOptions
          description: 'A <xref:DeviceClientOptions> object.'
        - id: done
          type:
            - Callback<results.TransportConfigured>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.Client.setRetryPolicy
    name: setRetryPolicy(RetryPolicy)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets the retry policy used by the client on all operations. The default is
      [ExponentialBackoffWithJitter](xref:azure-iot-common.ExponentialBackoffWithJitter).
    syntax:
      content: 'function setRetryPolicy(policy: RetryPolicy)'
      parameters:
        - id: policy
          type:
            - RetryPolicy
          description: |
            The retry policy that should be used for all future operations.
    package: azure-iot-device
  - uid: azure-iot-device.Client.setTransportOptions_1
    name: setTransportOptions(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setTransportOptions(options: any)'
      parameters:
        - id: options
          type:
            - any
          description: ''
      return:
        type:
          - Promise<results.TransportConfigured>
    package: azure-iot-device
  - uid: azure-iot-device.Client.setTransportOptions
    name: 'setTransportOptions(any, Callback<results.TransportConfigured>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setTransportOptions(options: any, done:
        Callback<results.TransportConfigured>)
      parameters:
        - id: options
          type:
            - any
          description: ''
        - id: done
          type:
            - Callback<results.TransportConfigured>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.Client.updateSharedAccessSignature
    name: >-
      updateSharedAccessSignature(string,
      Callback<results.SharedAccessSignatureUpdated>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSharedAccessSignature(sharedAccessSignature: string,
        updateSasCallback?: Callback<results.SharedAccessSignatureUpdated>)
      parameters:
        - id: sharedAccessSignature
          type:
            - string
          description: ''
        - id: updateSasCallback
          type:
            - Callback<results.SharedAccessSignatureUpdated>
          description: ''
          optional: true
    package: azure-iot-device
  - uid: azure-iot-device.Client.uploadToBlob_1
    name: 'uploadToBlob(string, Stream, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The `uploadToBlob` method uploads a stream to a blob.
    syntax:
      content: >-
        function uploadToBlob(blobName: string, stream: Stream, streamLength:
        number)
      parameters:
        - id: blobName
          type:
            - string
          description: ''
        - id: stream
          type:
            - Stream
          description: ''
        - id: streamLength
          type:
            - number
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-iot-device
  - uid: azure-iot-device.Client.uploadToBlob
    name: 'uploadToBlob(string, Stream, number, ErrorCallback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: The `uploadToBlob` method uploads a stream to a blob.
    syntax:
      content: >-
        function uploadToBlob(blobName: string, stream: Stream, streamLength:
        number, callback: ErrorCallback)
      parameters:
        - id: blobName
          type:
            - string
          description: >-
            The name to use for the blob that will be created with the content
            of the stream.
        - id: stream
          type:
            - Stream
          description: The data to that should be uploaded to the blob.
        - id: streamLength
          type:
            - number
          description: The size of the data to that should be uploaded to the blob.
        - id: callback
          type:
            - ErrorCallback
          description: ''
    package: azure-iot-device
references:
  - uid: azure-iot-device.DeviceTransport
    name: DeviceTransport
    spec.typeScript:
      - name: DeviceTransport
        fullName: DeviceTransport
        uid: azure-iot-device.DeviceTransport
  - uid: Callback<azure-iot-device.Twin>
    name: Twin>
    spec.typeScript:
      - name: Callback<
        fullName: Callback<
      - name: Twin
        fullName: Twin
        uid: azure-iot-device.Twin
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-iot-device.Twin>
    name: Twin>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Twin
        fullName: Twin
        uid: azure-iot-device.Twin
      - name: '>'
        fullName: '>'
  - uid: azure-iot-device.DeviceClientOptions
    name: DeviceClientOptions
    spec.typeScript:
      - name: DeviceClientOptions
        fullName: DeviceClientOptions
        uid: azure-iot-device.DeviceClientOptions
  - uid: azure-iot-device.Client
    name: Client
    spec.typeScript:
      - name: Client
        fullName: Client
        uid: azure-iot-device.Client
