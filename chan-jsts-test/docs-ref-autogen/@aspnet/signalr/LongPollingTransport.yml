### YamlMime:UniversalReference
items:
  - uid: '@aspnet/signalr.LongPollingTransport'
    name: LongPollingTransport
    fullName: LongPollingTransport
    children:
      - '@aspnet/signalr.LongPollingTransport.connect'
      - '@aspnet/signalr.LongPollingTransport.constructor'
      - '@aspnet/signalr.LongPollingTransport.onclose'
      - '@aspnet/signalr.LongPollingTransport.onreceive'
      - '@aspnet/signalr.LongPollingTransport.pollAborted'
      - '@aspnet/signalr.LongPollingTransport.send'
      - '@aspnet/signalr.LongPollingTransport.stop'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@aspnet/signalr'
  - uid: '@aspnet/signalr.LongPollingTransport.connect'
    name: connect
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function connect(url: string, transferFormat: TransferFormat)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: transferFormat
          type:
            - '@aspnet/signalr.TransferFormat'
          description: ''
      return:
        type:
          - Promise<void>
    package: '@aspnet/signalr'
  - uid: '@aspnet/signalr.LongPollingTransport.constructor'
    name: LongPollingTransport
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new LongPollingTransport(httpClient: HttpClient, accessTokenFactory: ()
        => string | Promise<string>, logger: ILogger, logMessageContent:
        boolean, shutdownTimeout?: number)
      parameters:
        - id: httpClient
          type:
            - '@aspnet/signalr.HttpClient'
          description: ''
        - id: accessTokenFactory
          type:
            - () => string | Promise<string>
          description: ''
        - id: logger
          type:
            - '@aspnet/signalr.ILogger'
          description: ''
        - id: logMessageContent
          type:
            - boolean
          description: ''
        - id: shutdownTimeout
          type:
            - number
          description: ''
          optional: true
    package: '@aspnet/signalr'
  - uid: '@aspnet/signalr.LongPollingTransport.onclose'
    name: onclose
    fullName: onclose
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onclose: (error?: Error) => void'
      return:
        type:
          - '(error?: Error) => void'
    package: '@aspnet/signalr'
  - uid: '@aspnet/signalr.LongPollingTransport.onreceive'
    name: onreceive
    fullName: onreceive
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'onreceive: (data: string | ArrayBuffer) => void'
      return:
        type:
          - '(data: string | ArrayBuffer) => void'
    package: '@aspnet/signalr'
  - uid: '@aspnet/signalr.LongPollingTransport.pollAborted'
    name: pollAborted
    fullName: pollAborted
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'pollAborted: boolean'
      return:
        type:
          - boolean
    package: '@aspnet/signalr'
  - uid: '@aspnet/signalr.LongPollingTransport.send'
    name: send
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function send(data: any)'
      parameters:
        - id: data
          type:
            - any
          description: ''
      return:
        type:
          - Promise<void>
    package: '@aspnet/signalr'
  - uid: '@aspnet/signalr.LongPollingTransport.stop'
    name: stop
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function stop()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@aspnet/signalr'
references:
  - uid: '@aspnet/signalr.HttpClient'
    spec.typeScript:
      - name: HttpClient
        fullName: HttpClient
        uid: '@aspnet/signalr.HttpClient'
  - uid: '@aspnet/signalr.ILogger'
    spec.typeScript:
      - name: ILogger
        fullName: ILogger
        uid: '@aspnet/signalr.ILogger'
  - uid: '@aspnet/signalr.TransferFormat'
    spec.typeScript:
      - name: TransferFormat
        fullName: TransferFormat
        uid: '@aspnet/signalr.TransferFormat'
