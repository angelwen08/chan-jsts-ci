### YamlMime:UniversalReference
items:
  - uid: '@azure/cosmos.getTestContainer'
    name: >-
      getTestContainer(string, CosmosClient, ContainerDefinition,
      RequestOptions)
    children: []
    type: function
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getTestContainer(testName: string, client?: CosmosClient,
        containerDef?: ContainerDefinition, options?: RequestOptions)
      parameters:
        - id: testName
          type:
            - string
          description: ''
        - id: client
          type:
            - '@azure/cosmos.CosmosClient'
          description: ''
          optional: true
        - id: containerDef
          type:
            - '@azure/cosmos.ContainerDefinition'
          description: ''
          optional: true
        - id: options
          type:
            - '@azure/cosmos.RequestOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/cosmos.Container>
    package: '@azure/cosmos'
references:
  - uid: '@azure/cosmos.CosmosClient'
    name: CosmosClient
    spec.typeScript:
      - name: CosmosClient
        fullName: CosmosClient
        uid: '@azure/cosmos.CosmosClient'
  - uid: '@azure/cosmos.ContainerDefinition'
    name: ContainerDefinition
    spec.typeScript:
      - name: ContainerDefinition
        fullName: ContainerDefinition
        uid: '@azure/cosmos.ContainerDefinition'
  - uid: '@azure/cosmos.RequestOptions'
    name: RequestOptions
    spec.typeScript:
      - name: RequestOptions
        fullName: RequestOptions
        uid: '@azure/cosmos.RequestOptions'
  - uid: Promise<@azure/cosmos.Container>
    name: Container>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Container
        fullName: Container
        uid: '@azure/cosmos.Container'
      - name: '>'
        fullName: '>'
