### YamlMime:UniversalReference
items:
  - uid: '@azure/cosmos.Users'
    name: Users
    fullName: Users
    children:
      - '@azure/cosmos.Users.create'
      - '@azure/cosmos.Users.database'
      - '@azure/cosmos.Users.query'
      - '@azure/cosmos.Users.query_1'
      - '@azure/cosmos.Users.readAll'
      - '@azure/cosmos.Users.upsert'
    langs:
      - typeScript
    type: class
    summary: 'Used to create, upsert, query, and read all users.'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Users.create'
    name: 'create(UserDefinition, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Create a database user with the specified <xref:UserDefinition>.'
    syntax:
      content: 'function create(body: UserDefinition, options?: RequestOptions)'
      parameters:
        - id: body
          type:
            - '@azure/cosmos.UserDefinition'
          description: 'The specified <xref:UserDefinition>.'
        - id: options
          type:
            - '@azure/cosmos.RequestOptions'
          description: |+

          optional: true
      return:
        type:
          - Promise<@azure/cosmos.UserResponse>
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Users.database'
    name: database
    fullName: database
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'database: Database'
      return:
        type:
          - '@azure/cosmos.Database'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Users.query'
    name: 'query(SqlQuerySpec, FeedOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Query all users.
    syntax:
      content: 'function query(query: SqlQuerySpec, options?: FeedOptions)'
      parameters:
        - id: query
          type:
            - '@azure/cosmos.SqlQuerySpec'
          description: >-
            Query configuration for the operation. See <xref:SqlQuerySpec> for
            more info on how to configure a query.
        - id: options
          type:
            - '@azure/cosmos.FeedOptions'
          description: |+

          optional: true
      return:
        type:
          - '@azure/cosmos.QueryIterator<any>'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Users.query_1'
    name: 'query(SqlQuerySpec, FeedOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Query all users.
    syntax:
      content: 'function query<T>(query: SqlQuerySpec, options?: FeedOptions)'
      parameters:
        - id: query
          type:
            - '@azure/cosmos.SqlQuerySpec'
          description: >-
            Query configuration for the operation. See <xref:SqlQuerySpec> for
            more info on how to configure a query.
        - id: options
          type:
            - '@azure/cosmos.FeedOptions'
          description: |+

          optional: true
      return:
        type:
          - '@azure/cosmos.QueryIterator<T>'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Users.readAll'
    name: readAll(FeedOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: Read all users.
    syntax:
      content: 'function readAll(options?: FeedOptions)'
      parameters:
        - id: options
          type:
            - '@azure/cosmos.FeedOptions'
          description: ''
          optional: true
      return:
        type:
          - >-
            @azure/cosmos.QueryIterator<@azure/cosmos.UserDefinition &
            @azure/cosmos.Resource>
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Users.upsert'
    name: 'upsert(UserDefinition, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Upsert a database user with a specified <xref:UserDefinition>.'
    syntax:
      content: 'function upsert(body: UserDefinition, options?: RequestOptions)'
      parameters:
        - id: body
          type:
            - '@azure/cosmos.UserDefinition'
          description: 'The specified <xref:UserDefinition>.'
        - id: options
          type:
            - '@azure/cosmos.RequestOptions'
          description: |+

          optional: true
      return:
        type:
          - Promise<@azure/cosmos.UserResponse>
    package: '@azure/cosmos'
references:
  - uid: '@azure/cosmos.Database'
    name: Database
    spec.typeScript:
      - name: Database
        fullName: Database
        uid: '@azure/cosmos.Database'
  - uid: '@azure/cosmos.UserDefinition'
    name: UserDefinition
    spec.typeScript:
      - name: UserDefinition
        fullName: UserDefinition
        uid: '@azure/cosmos.UserDefinition'
  - uid: '@azure/cosmos.RequestOptions'
    name: RequestOptions
    spec.typeScript:
      - name: RequestOptions
        fullName: RequestOptions
        uid: '@azure/cosmos.RequestOptions'
  - uid: Promise<@azure/cosmos.UserResponse>
    name: UserResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: UserResponse
        fullName: UserResponse
        uid: '@azure/cosmos.UserResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cosmos.SqlQuerySpec'
    name: SqlQuerySpec
    spec.typeScript:
      - name: SqlQuerySpec
        fullName: SqlQuerySpec
        uid: '@azure/cosmos.SqlQuerySpec'
  - uid: '@azure/cosmos.FeedOptions'
    name: FeedOptions
    spec.typeScript:
      - name: FeedOptions
        fullName: FeedOptions
        uid: '@azure/cosmos.FeedOptions'
  - uid: '@azure/cosmos.QueryIterator<any>'
    name: QueryIterator<any>
    spec.typeScript:
      - name: QueryIterator
        fullName: QueryIterator
        uid: '@azure/cosmos.QueryIterator'
      - name: <any>
        fullName: <any>
  - uid: '@azure/cosmos.QueryIterator<T>'
    name: QueryIterator<T>
    spec.typeScript:
      - name: QueryIterator
        fullName: QueryIterator
        uid: '@azure/cosmos.QueryIterator'
      - name: <T>
        fullName: <T>
  - uid: >-
      @azure/cosmos.QueryIterator<@azure/cosmos.UserDefinition &
      @azure/cosmos.Resource>
    name: Resource>
    spec.typeScript:
      - name: QueryIterator
        fullName: QueryIterator
        uid: '@azure/cosmos.QueryIterator'
      - name: <
        fullName: <
      - name: UserDefinition
        fullName: UserDefinition
        uid: '@azure/cosmos.UserDefinition'
      - name: ' & '
        fullName: ' & '
      - name: Resource
        fullName: Resource
        uid: '@azure/cosmos.Resource'
      - name: '>'
        fullName: '>'
