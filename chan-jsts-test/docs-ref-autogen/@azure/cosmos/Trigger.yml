### YamlMime:UniversalReference
items:
  - uid: '@azure/cosmos.Trigger'
    name: Trigger
    fullName: Trigger
    children:
      - '@azure/cosmos.Trigger.container'
      - '@azure/cosmos.Trigger.delete'
      - '@azure/cosmos.Trigger.id'
      - '@azure/cosmos.Trigger.read'
      - '@azure/cosmos.Trigger.replace'
      - '@azure/cosmos.Trigger.url'
    langs:
      - typeScript
    type: class
    summary: |
      Operations to read, replace, or delete a <xref:Trigger>.
      Use `container.triggers` to create, upsert, query, or read all.
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Trigger.container'
    name: container
    fullName: container
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'container: Container'
      return:
        type:
          - '@azure/cosmos.Container'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Trigger.delete'
    name: delete(RequestOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Delete the given <xref:Trigger>.'
    syntax:
      content: 'function delete(options?: RequestOptions)'
      parameters:
        - id: options
          type:
            - '@azure/cosmos.RequestOptions'
          description: |+

          optional: true
      return:
        type:
          - Promise<@azure/cosmos.TriggerResponse>
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Trigger.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'id: string'
      return:
        type:
          - string
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Trigger.read'
    name: read(RequestOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Read the <xref:TriggerDefinition> for the given <xref:Trigger>.'
    syntax:
      content: 'function read(options?: RequestOptions)'
      parameters:
        - id: options
          type:
            - '@azure/cosmos.RequestOptions'
          description: |+

          optional: true
      return:
        type:
          - Promise<@azure/cosmos.TriggerResponse>
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Trigger.replace'
    name: 'replace(TriggerDefinition, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Replace the given <xref:Trigger> with the specified
      <xref:TriggerDefinition>.
    syntax:
      content: 'function replace(body: TriggerDefinition, options?: RequestOptions)'
      parameters:
        - id: body
          type:
            - '@azure/cosmos.TriggerDefinition'
          description: >-
            The specified <xref:TriggerDefinition> to replace the existing
            definition with.
        - id: options
          type:
            - '@azure/cosmos.RequestOptions'
          description: |+

          optional: true
      return:
        type:
          - Promise<@azure/cosmos.TriggerResponse>
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.Trigger.url'
    name: url
    fullName: url
    children: []
    langs:
      - typeScript
    type: property
    summary: Returns a reference URL to the resource. Used for linking in Permissions.
    syntax:
      content: 'url: string'
      return:
        type:
          - string
    package: '@azure/cosmos'
references:
  - uid: '@azure/cosmos.Container'
    name: Container
    spec.typeScript:
      - name: Container
        fullName: Container
        uid: '@azure/cosmos.Container'
  - uid: '@azure/cosmos.RequestOptions'
    name: RequestOptions
    spec.typeScript:
      - name: RequestOptions
        fullName: RequestOptions
        uid: '@azure/cosmos.RequestOptions'
  - uid: Promise<@azure/cosmos.TriggerResponse>
    name: TriggerResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: TriggerResponse
        fullName: TriggerResponse
        uid: '@azure/cosmos.TriggerResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cosmos.TriggerDefinition'
    name: TriggerDefinition
    spec.typeScript:
      - name: TriggerDefinition
        fullName: TriggerDefinition
        uid: '@azure/cosmos.TriggerDefinition'
