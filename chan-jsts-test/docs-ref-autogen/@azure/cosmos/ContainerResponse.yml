### YamlMime:UniversalReference
items:
  - uid: '@azure/cosmos.ContainerResponse'
    name: ContainerResponse
    fullName: ContainerResponse
    children:
      - '@azure/cosmos.ContainerResponse.container'
    langs:
      - typeScript
    type: interface
    summary: Response object for Container operations
    extends:
      name: >-
        @azure/cosmos.CosmosResponse<@azure/cosmos.ContainerDefinition &
        @azure/cosmos.Resource, @azure/cosmos.Container>
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.ContainerResponse.container'
    name: container
    fullName: container
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A reference to the <xref:Container> that the returned
      <xref:ContainerDefinition> corresponds to.
    syntax:
      content: 'container: Container'
      return:
        type:
          - '@azure/cosmos.Container'
    package: '@azure/cosmos'
references:
  - uid: >-
      @azure/cosmos.CosmosResponse<@azure/cosmos.ContainerDefinition &
      @azure/cosmos.Resource, @azure/cosmos.Container>
    name: Container>
    spec.typeScript:
      - name: CosmosResponse
        fullName: CosmosResponse
        uid: '@azure/cosmos.CosmosResponse'
      - name: <
        fullName: <
      - name: ContainerDefinition
        fullName: ContainerDefinition
        uid: '@azure/cosmos.ContainerDefinition'
      - name: ' & '
        fullName: ' & '
      - name: Resource
        fullName: Resource
        uid: '@azure/cosmos.Resource'
      - name: ', '
        fullName: ', '
      - name: Container
        fullName: Container
        uid: '@azure/cosmos.Container'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cosmos.Container'
    name: Container
    spec.typeScript:
      - name: Container
        fullName: Container
        uid: '@azure/cosmos.Container'
