### YamlMime:UniversalReference
items:
  - uid: '@azure/cosmos.User'
    name: User
    fullName: User
    children:
      - '@azure/cosmos.User.database'
      - '@azure/cosmos.User.delete'
      - '@azure/cosmos.User.id'
      - '@azure/cosmos.User.permission'
      - '@azure/cosmos.User.permissions'
      - '@azure/cosmos.User.read'
      - '@azure/cosmos.User.replace'
      - '@azure/cosmos.User.url'
    langs:
      - typeScript
    type: class
    summary: >
      Used to read, replace, and delete Users.

      Additionally, you can access the permissions for a given user via
      `user.permission` and `user.permissions`.
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.User.database'
    name: database
    fullName: database
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'database: Database'
      return:
        type:
          - '@azure/cosmos.Database'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.User.delete'
    name: delete(RequestOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Delete the given <xref:User>.'
    syntax:
      content: 'function delete(options?: RequestOptions)'
      parameters:
        - id: options
          type:
            - '@azure/cosmos.RequestOptions'
          description: |+

          optional: true
      return:
        type:
          - Promise<@azure/cosmos.UserResponse>
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.User.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'id: string'
      return:
        type:
          - string
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.User.permission'
    name: permission(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Operations to read, replace, or delete a specific Permission by id.

      See `client.permissions` for creating, upserting, querying, or reading all
      operations.
    syntax:
      content: 'function permission(id: string)'
      parameters:
        - id: id
          type:
            - string
          description: |+

      return:
        type:
          - '@azure/cosmos.Permission'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.User.permissions'
    name: permissions
    fullName: permissions
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Operations for creating, upserting, querying, or reading all operations.

      See `client.permission(id)` to read, replace, or delete a specific
      Permission by id.
    syntax:
      content: 'permissions: Permissions'
      return:
        type:
          - '@azure/cosmos.Permissions'
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.User.read'
    name: read(RequestOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Read the <xref:UserDefinition> for the given <xref:User>.'
    syntax:
      content: 'function read(options?: RequestOptions)'
      parameters:
        - id: options
          type:
            - '@azure/cosmos.RequestOptions'
          description: |+

          optional: true
      return:
        type:
          - Promise<@azure/cosmos.UserResponse>
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.User.replace'
    name: 'replace(UserDefinition, RequestOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Replace the given <xref:User>'s definition with the specified
      <xref:UserDefinition>.
    syntax:
      content: 'function replace(body: UserDefinition, options?: RequestOptions)'
      parameters:
        - id: body
          type:
            - '@azure/cosmos.UserDefinition'
          description: 'The specified <xref:UserDefinition> to replace the definition.'
        - id: options
          type:
            - '@azure/cosmos.RequestOptions'
          description: |+

          optional: true
      return:
        type:
          - Promise<@azure/cosmos.UserResponse>
    package: '@azure/cosmos'
  - uid: '@azure/cosmos.User.url'
    name: url
    fullName: url
    children: []
    langs:
      - typeScript
    type: property
    summary: Returns a reference URL to the resource. Used for linking in Permissions.
    syntax:
      content: 'url: string'
      return:
        type:
          - string
    package: '@azure/cosmos'
references:
  - uid: '@azure/cosmos.Database'
    name: Database
    spec.typeScript:
      - name: Database
        fullName: Database
        uid: '@azure/cosmos.Database'
  - uid: '@azure/cosmos.Permissions'
    name: Permissions
    spec.typeScript:
      - name: Permissions
        fullName: Permissions
        uid: '@azure/cosmos.Permissions'
  - uid: '@azure/cosmos.RequestOptions'
    name: RequestOptions
    spec.typeScript:
      - name: RequestOptions
        fullName: RequestOptions
        uid: '@azure/cosmos.RequestOptions'
  - uid: Promise<@azure/cosmos.UserResponse>
    name: UserResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: UserResponse
        fullName: UserResponse
        uid: '@azure/cosmos.UserResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cosmos.Permission'
    name: Permission
    spec.typeScript:
      - name: Permission
        fullName: Permission
        uid: '@azure/cosmos.Permission'
  - uid: '@azure/cosmos.UserDefinition'
    name: UserDefinition
    spec.typeScript:
      - name: UserDefinition
        fullName: UserDefinition
        uid: '@azure/cosmos.UserDefinition'
