### YamlMime:UniversalReference
items:
  - uid: az-blob-temp.BlobURL
    name: BlobURL
    fullName: BlobURL
    children: []
    langs:
      - typeScript
    type: class
    summary: >-
      A BlobURL represents a URL to an Azure Storage blob; the blob may be a
      block blob,

      append blob, or page blob.
    extends:
      name: az-blob-temp.StorageURL
    package: az-blob-temp
  - uid: az-blob-temp.BlobURL.abortCopyFromURL
    name: abortCopyFromURL
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Aborts a pending Copy Blob operation, and leaves a destination blob with
      zero

      length and full metadata. Version 2012-02-12 and newer.
    syntax:
      content: >-
        function abortCopyFromURL(copyId: string, options?:
        BlobsAbortCopyFromURLOptionalParams)
      parameters:
        - id: copyId
          type:
            - string
          description: ''
        - id: options
          type:
            - az-blob-temp.BlobsAbortCopyFromURLOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.BlobsAbortCopyFromURLResponse>
    package: az-blob-temp
  - uid: az-blob-temp.BlobURL.acquireLease
    name: acquireLease
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Establishes and manages a lock on a blob for write and delete operations.
      The lock duration can be 15 to 60 seconds, or can be infinite.
      In versions prior to 2012-02-12, the lock duration is 60 seconds.
    syntax:
      content: >-
        function acquireLease(proposedLeaseId: string, options?:
        BlobsAcquireLeaseOptionalParams)
      parameters:
        - id: proposedLeaseId
          type:
            - string
          description: Can be specified in any valid GUID string format
        - id: options
          type:
            - az-blob-temp.BlobsAcquireLeaseOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.BlobsAcquireLeaseResponse>
    package: az-blob-temp
  - uid: az-blob-temp.BlobURL.constructor
    name: BlobURL
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new BlobURL(url: string, pipeline: Pipeline)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: pipeline
          type:
            - az-blob-temp.Pipeline
          description: ''
    package: az-blob-temp
  - uid: az-blob-temp.BlobURL.breakLease
    name: breakLease
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      To end the lease but ensure that another client cannot acquire a new lease
      until the current lease period has expired.
    syntax:
      content: 'function breakLease(options?: BlobsBreakLeaseOptionalParams)'
      parameters:
        - id: options
          type:
            - az-blob-temp.BlobsBreakLeaseOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.BlobsBreakLeaseResponse>
    package: az-blob-temp
  - uid: az-blob-temp.BlobURL.changeLease
    name: changeLease
    children: []
    type: method
    langs:
      - typeScript
    summary: To change the ID of an existing lease.
    syntax:
      content: >-
        function changeLease(leaseId: string, proposedLeaseId: string, options?:
        BlobsChangeLeaseOptionalParams)
      parameters:
        - id: leaseId
          type:
            - string
          description: ''
        - id: proposedLeaseId
          type:
            - string
          description: ''
        - id: options
          type:
            - az-blob-temp.BlobsChangeLeaseOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.BlobsChangeLeaseResponse>
    package: az-blob-temp
  - uid: az-blob-temp.BlobURL.createSnapshot
    name: createSnapshot
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a read-only snapshot of a blob.
    syntax:
      content: 'function createSnapshot(options?: BlobsCreateSnapshotOptionalParams)'
      parameters:
        - id: options
          type:
            - az-blob-temp.BlobsCreateSnapshotOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.BlobsCreateSnapshotResponse>
    package: az-blob-temp
  - uid: az-blob-temp.BlobURL.delete
    name: delete
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Marks the specified blob or snapshot for deletion. The blob is later
      deleted

      during garbage collection. Note that in order to delete a blob, you must
      delete

      all of its snapshots. You can delete both at the same time with the Delete

      Blob operation.
    syntax:
      content: 'function delete(options?: BlobsDeleteMethodOptionalParams)'
      parameters:
        - id: options
          type:
            - az-blob-temp.BlobsDeleteMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.BlobsDeleteResponse>
    package: az-blob-temp
  - uid: az-blob-temp.BlobURL.download
    name: download
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Reads or downloads a blob from the system, including its metadata and
      properties.

      You can also call Get Blob to read a snapshot.
    syntax:
      content: 'function download(options?: BlobsDownloadOptionalParams)'
      parameters:
        - id: options
          type:
            - az-blob-temp.BlobsDownloadOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.BlobsDownloadResponse>
    package: az-blob-temp
  - uid: az-blob-temp.BlobURL.getProperties
    name: getProperties
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns all user-defined metadata, standard HTTP properties, and system
      properties

      for the blob. It does not return the content of the blob.
    syntax:
      content: 'function getProperties(options?: BlobsGetPropertiesOptionalParams)'
      parameters:
        - id: options
          type:
            - az-blob-temp.BlobsGetPropertiesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.BlobsGetPropertiesResponse>
    package: az-blob-temp
  - uid: az-blob-temp.BlobURL.releaseLease
    name: releaseLease
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      To free the lease if it is no longer needed so that another client may
      immediately

      acquire a lease against the blob.
    syntax:
      content: >-
        function releaseLease(leaseId: string, options?:
        BlobsReleaseLeaseOptionalParams)
      parameters:
        - id: leaseId
          type:
            - string
          description: ''
        - id: options
          type:
            - az-blob-temp.BlobsReleaseLeaseOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.BlobsReleaseLeaseResponse>
    package: az-blob-temp
  - uid: az-blob-temp.BlobURL.renewLease
    name: renewLease
    children: []
    type: method
    langs:
      - typeScript
    summary: To renew an existing lease.
    syntax:
      content: >-
        function renewLease(leaseId: string, options?:
        BlobsRenewLeaseOptionalParams)
      parameters:
        - id: leaseId
          type:
            - string
          description: ''
        - id: options
          type:
            - az-blob-temp.BlobsRenewLeaseOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.BlobsRenewLeaseResponse>
    package: az-blob-temp
  - uid: az-blob-temp.BlobURL.setHTTPHeaders
    name: setHTTPHeaders
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets system properties on the blob.

      If no option provided, or no value provided for the blob HTTP headers in
      the options,

      these blob HTTP headers without a value will be cleared.
    syntax:
      content: 'function setHTTPHeaders(options?: BlobsSetHTTPHeadersOptionalParams)'
      parameters:
        - id: options
          type:
            - az-blob-temp.BlobsSetHTTPHeadersOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.BlobsSetHTTPHeadersResponse>
    package: az-blob-temp
  - uid: az-blob-temp.BlobURL.setMetadata
    name: setMetadata
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets user-defined metadata for the specified blob as one or more
      name-value pairs.

      If no option provided, or no metadata defined in the option parameter, the
      blob

      metadata will be removed.
    syntax:
      content: 'function setMetadata(options?: BlobsSetMetadataOptionalParams)'
      parameters:
        - id: options
          type:
            - az-blob-temp.BlobsSetMetadataOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.BlobsSetMetadataResponse>
    package: az-blob-temp
  - uid: az-blob-temp.BlobURL.setTier
    name: setTier
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets the tier on a blob. The operation is allowed on a page blob in a
      premium

      storage account and on a block blob in a blob storage account (locally
      redundant

      storage only). A premium page blob's tier determines the allowed size,
      IOPS,

      and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive

      storage type. This operation does not update the blob's ETag.
    syntax:
      content: 'function setTier(tier: AccessTier, options?: BlobsSetTierOptionalParams)'
      parameters:
        - id: tier
          type:
            - az-blob-temp.AccessTier
          description: ''
        - id: options
          type:
            - az-blob-temp.BlobsSetTierOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.BlobsSetTierResponse>
    package: az-blob-temp
  - uid: az-blob-temp.BlobURL.startCopyFromURL
    name: startCopyFromURL
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Copies a blob to a destination within the storage account.

      In version 2012-02-12 and later, the source for a Copy Blob operation can
      be

      a committed blob in any Azure storage account.

      Beginning with version 2015-02-21, the source for a Copy Blob operation
      can be

      an Azure file in any Azure storage account.

      Only storage accounts created on or after June 7th, 2012 allow the Copy
      Blob

      operation to copy from another storage account.
    syntax:
      content: >-
        function startCopyFromURL(copySource: string, options?:
        BlobsStartCopyFromURLOptionalParams)
      parameters:
        - id: copySource
          type:
            - string
          description: ''
        - id: options
          type:
            - az-blob-temp.BlobsStartCopyFromURLOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.BlobsStartCopyFromURLResponse>
    package: az-blob-temp
  - uid: az-blob-temp.BlobURL.toAppendBlobURL
    name: toAppendBlobURL
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      toAppendBlobURL creates an AppendBlobURL using the source's URL and
      pipeline.
    syntax:
      content: function toAppendBlobURL()
      parameters: []
      return:
        type:
          - az-blob-temp.AppendBlobURL
    package: az-blob-temp
  - uid: az-blob-temp.BlobURL.toBlockBlobURL
    name: toBlockBlobURL
    children: []
    type: method
    langs:
      - typeScript
    summary: toBlockBlobURL creates a BlockBlobURL using the source's URL and pipeline.
    syntax:
      content: function toBlockBlobURL()
      parameters: []
      return:
        type:
          - az-blob-temp.BlockBlobURL
    package: az-blob-temp
  - uid: az-blob-temp.BlobURL.toPageBlobURL
    name: toPageBlobURL
    children: []
    type: method
    langs:
      - typeScript
    summary: toPageBlobURL creates a PageBlobURL using the source's URL and pipeline.
    syntax:
      content: function toPageBlobURL()
      parameters: []
      return:
        type:
          - az-blob-temp.PageBlobURL
    package: az-blob-temp
  - uid: az-blob-temp.BlobURL.undelete
    name: undelete
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Restores the contents and metadata of soft deleted blob and any associated

      soft deleted snapshots. Undelete Blob is supported only on version
      2017-07-29

      or later.
    syntax:
      content: 'function undelete(options?: BlobsUndeleteOptionalParams)'
      parameters:
        - id: options
          type:
            - az-blob-temp.BlobsUndeleteOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.BlobsUndeleteResponse>
    package: az-blob-temp
  - uid: az-blob-temp.BlobURL.withPipeline
    name: withPipeline
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates a new BlobURL object identical to the source but with the
      specified request policy pipeline.
    syntax:
      content: 'function withPipeline(pipeline: Pipeline)'
      parameters:
        - id: pipeline
          type:
            - az-blob-temp.Pipeline
          description: ''
      return:
        type:
          - az-blob-temp.BlobURL
    package: az-blob-temp
  - uid: az-blob-temp.BlobURL.withSnapshot
    name: withSnapshot
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new BlobURL object identical to the source but with the
      specified snapshot timestamp.

      Provide "" will remove the snapshot and return a URL to the base blob.
    syntax:
      content: 'function withSnapshot(snapshot: string)'
      parameters:
        - id: snapshot
          type:
            - string
          description: ''
      return:
        type:
          - az-blob-temp.BlobURL
    package: az-blob-temp
references:
  - uid: az-blob-temp.StorageURL
    name: StorageURL
    spec.typeScript:
      - name: StorageURL
        fullName: StorageURL
        uid: az-blob-temp.StorageURL
  - uid: az-blob-temp.Pipeline
    name: Pipeline
    spec.typeScript:
      - name: Pipeline
        fullName: Pipeline
        uid: az-blob-temp.Pipeline
  - uid: az-blob-temp.BlobsAbortCopyFromURLOptionalParams
    name: BlobsAbortCopyFromURLOptionalParams
    spec.typeScript:
      - name: BlobsAbortCopyFromURLOptionalParams
        fullName: BlobsAbortCopyFromURLOptionalParams
        uid: az-blob-temp.BlobsAbortCopyFromURLOptionalParams
  - uid: Promise<az-blob-temp.BlobsAbortCopyFromURLResponse>
    name: BlobsAbortCopyFromURLResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BlobsAbortCopyFromURLResponse
        fullName: BlobsAbortCopyFromURLResponse
        uid: az-blob-temp.BlobsAbortCopyFromURLResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.BlobsAcquireLeaseOptionalParams
    name: BlobsAcquireLeaseOptionalParams
    spec.typeScript:
      - name: BlobsAcquireLeaseOptionalParams
        fullName: BlobsAcquireLeaseOptionalParams
        uid: az-blob-temp.BlobsAcquireLeaseOptionalParams
  - uid: Promise<az-blob-temp.BlobsAcquireLeaseResponse>
    name: BlobsAcquireLeaseResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BlobsAcquireLeaseResponse
        fullName: BlobsAcquireLeaseResponse
        uid: az-blob-temp.BlobsAcquireLeaseResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.BlobsBreakLeaseOptionalParams
    name: BlobsBreakLeaseOptionalParams
    spec.typeScript:
      - name: BlobsBreakLeaseOptionalParams
        fullName: BlobsBreakLeaseOptionalParams
        uid: az-blob-temp.BlobsBreakLeaseOptionalParams
  - uid: Promise<az-blob-temp.BlobsBreakLeaseResponse>
    name: BlobsBreakLeaseResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BlobsBreakLeaseResponse
        fullName: BlobsBreakLeaseResponse
        uid: az-blob-temp.BlobsBreakLeaseResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.BlobsChangeLeaseOptionalParams
    name: BlobsChangeLeaseOptionalParams
    spec.typeScript:
      - name: BlobsChangeLeaseOptionalParams
        fullName: BlobsChangeLeaseOptionalParams
        uid: az-blob-temp.BlobsChangeLeaseOptionalParams
  - uid: Promise<az-blob-temp.BlobsChangeLeaseResponse>
    name: BlobsChangeLeaseResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BlobsChangeLeaseResponse
        fullName: BlobsChangeLeaseResponse
        uid: az-blob-temp.BlobsChangeLeaseResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.BlobsCreateSnapshotOptionalParams
    name: BlobsCreateSnapshotOptionalParams
    spec.typeScript:
      - name: BlobsCreateSnapshotOptionalParams
        fullName: BlobsCreateSnapshotOptionalParams
        uid: az-blob-temp.BlobsCreateSnapshotOptionalParams
  - uid: Promise<az-blob-temp.BlobsCreateSnapshotResponse>
    name: BlobsCreateSnapshotResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BlobsCreateSnapshotResponse
        fullName: BlobsCreateSnapshotResponse
        uid: az-blob-temp.BlobsCreateSnapshotResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.BlobsDeleteMethodOptionalParams
    name: BlobsDeleteMethodOptionalParams
    spec.typeScript:
      - name: BlobsDeleteMethodOptionalParams
        fullName: BlobsDeleteMethodOptionalParams
        uid: az-blob-temp.BlobsDeleteMethodOptionalParams
  - uid: Promise<az-blob-temp.BlobsDeleteResponse>
    name: BlobsDeleteResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BlobsDeleteResponse
        fullName: BlobsDeleteResponse
        uid: az-blob-temp.BlobsDeleteResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.BlobsDownloadOptionalParams
    name: BlobsDownloadOptionalParams
    spec.typeScript:
      - name: BlobsDownloadOptionalParams
        fullName: BlobsDownloadOptionalParams
        uid: az-blob-temp.BlobsDownloadOptionalParams
  - uid: Promise<az-blob-temp.BlobsDownloadResponse>
    name: BlobsDownloadResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BlobsDownloadResponse
        fullName: BlobsDownloadResponse
        uid: az-blob-temp.BlobsDownloadResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.BlobsGetPropertiesOptionalParams
    name: BlobsGetPropertiesOptionalParams
    spec.typeScript:
      - name: BlobsGetPropertiesOptionalParams
        fullName: BlobsGetPropertiesOptionalParams
        uid: az-blob-temp.BlobsGetPropertiesOptionalParams
  - uid: Promise<az-blob-temp.BlobsGetPropertiesResponse>
    name: BlobsGetPropertiesResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BlobsGetPropertiesResponse
        fullName: BlobsGetPropertiesResponse
        uid: az-blob-temp.BlobsGetPropertiesResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.BlobsReleaseLeaseOptionalParams
    name: BlobsReleaseLeaseOptionalParams
    spec.typeScript:
      - name: BlobsReleaseLeaseOptionalParams
        fullName: BlobsReleaseLeaseOptionalParams
        uid: az-blob-temp.BlobsReleaseLeaseOptionalParams
  - uid: Promise<az-blob-temp.BlobsReleaseLeaseResponse>
    name: BlobsReleaseLeaseResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BlobsReleaseLeaseResponse
        fullName: BlobsReleaseLeaseResponse
        uid: az-blob-temp.BlobsReleaseLeaseResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.BlobsRenewLeaseOptionalParams
    name: BlobsRenewLeaseOptionalParams
    spec.typeScript:
      - name: BlobsRenewLeaseOptionalParams
        fullName: BlobsRenewLeaseOptionalParams
        uid: az-blob-temp.BlobsRenewLeaseOptionalParams
  - uid: Promise<az-blob-temp.BlobsRenewLeaseResponse>
    name: BlobsRenewLeaseResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BlobsRenewLeaseResponse
        fullName: BlobsRenewLeaseResponse
        uid: az-blob-temp.BlobsRenewLeaseResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.BlobsSetHTTPHeadersOptionalParams
    name: BlobsSetHTTPHeadersOptionalParams
    spec.typeScript:
      - name: BlobsSetHTTPHeadersOptionalParams
        fullName: BlobsSetHTTPHeadersOptionalParams
        uid: az-blob-temp.BlobsSetHTTPHeadersOptionalParams
  - uid: Promise<az-blob-temp.BlobsSetHTTPHeadersResponse>
    name: BlobsSetHTTPHeadersResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BlobsSetHTTPHeadersResponse
        fullName: BlobsSetHTTPHeadersResponse
        uid: az-blob-temp.BlobsSetHTTPHeadersResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.BlobsSetMetadataOptionalParams
    name: BlobsSetMetadataOptionalParams
    spec.typeScript:
      - name: BlobsSetMetadataOptionalParams
        fullName: BlobsSetMetadataOptionalParams
        uid: az-blob-temp.BlobsSetMetadataOptionalParams
  - uid: Promise<az-blob-temp.BlobsSetMetadataResponse>
    name: BlobsSetMetadataResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BlobsSetMetadataResponse
        fullName: BlobsSetMetadataResponse
        uid: az-blob-temp.BlobsSetMetadataResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.AccessTier
    name: AccessTier
    spec.typeScript:
      - name: AccessTier
        fullName: AccessTier
        uid: az-blob-temp.AccessTier
  - uid: az-blob-temp.BlobsSetTierOptionalParams
    name: BlobsSetTierOptionalParams
    spec.typeScript:
      - name: BlobsSetTierOptionalParams
        fullName: BlobsSetTierOptionalParams
        uid: az-blob-temp.BlobsSetTierOptionalParams
  - uid: Promise<az-blob-temp.BlobsSetTierResponse>
    name: BlobsSetTierResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BlobsSetTierResponse
        fullName: BlobsSetTierResponse
        uid: az-blob-temp.BlobsSetTierResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.BlobsStartCopyFromURLOptionalParams
    name: BlobsStartCopyFromURLOptionalParams
    spec.typeScript:
      - name: BlobsStartCopyFromURLOptionalParams
        fullName: BlobsStartCopyFromURLOptionalParams
        uid: az-blob-temp.BlobsStartCopyFromURLOptionalParams
  - uid: Promise<az-blob-temp.BlobsStartCopyFromURLResponse>
    name: BlobsStartCopyFromURLResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BlobsStartCopyFromURLResponse
        fullName: BlobsStartCopyFromURLResponse
        uid: az-blob-temp.BlobsStartCopyFromURLResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.AppendBlobURL
    name: AppendBlobURL
    spec.typeScript:
      - name: AppendBlobURL
        fullName: AppendBlobURL
        uid: az-blob-temp.AppendBlobURL
  - uid: az-blob-temp.BlockBlobURL
    name: BlockBlobURL
    spec.typeScript:
      - name: BlockBlobURL
        fullName: BlockBlobURL
        uid: az-blob-temp.BlockBlobURL
  - uid: az-blob-temp.PageBlobURL
    name: PageBlobURL
    spec.typeScript:
      - name: PageBlobURL
        fullName: PageBlobURL
        uid: az-blob-temp.PageBlobURL
  - uid: az-blob-temp.BlobsUndeleteOptionalParams
    name: BlobsUndeleteOptionalParams
    spec.typeScript:
      - name: BlobsUndeleteOptionalParams
        fullName: BlobsUndeleteOptionalParams
        uid: az-blob-temp.BlobsUndeleteOptionalParams
  - uid: Promise<az-blob-temp.BlobsUndeleteResponse>
    name: BlobsUndeleteResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BlobsUndeleteResponse
        fullName: BlobsUndeleteResponse
        uid: az-blob-temp.BlobsUndeleteResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.BlobURL
    name: BlobURL
    spec.typeScript:
      - name: BlobURL
        fullName: BlobURL
        uid: az-blob-temp.BlobURL
