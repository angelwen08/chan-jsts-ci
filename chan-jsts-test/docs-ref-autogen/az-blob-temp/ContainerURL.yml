### YamlMime:UniversalReference
items:
  - uid: az-blob-temp.ContainerURL
    name: ContainerURL
    fullName: ContainerURL
    children: []
    langs:
      - typeScript
    type: class
    summary: >-
      A ContainerURL represents a URL to the Azure Storage container allowing
      you to manipulate its blobs.
    extends:
      name: az-blob-temp.StorageURL
    package: az-blob-temp
  - uid: az-blob-temp.ContainerURL.acquireLease
    name: acquireLease
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Establishes and manages a lock on a container for delete operations.
      The lock duration can be 15 to 60 seconds, or can be infinite.
    syntax:
      content: >-
        function acquireLease(proposedLeaseId: string, options?:
        ContainersAcquireLeaseOptionalParams)
      parameters:
        - id: proposedLeaseId
          type:
            - string
          description: Can be specified in any valid GUID string format
        - id: options
          type:
            - az-blob-temp.ContainersAcquireLeaseOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.ContainersAcquireLeaseResponse>
    package: az-blob-temp
  - uid: az-blob-temp.ContainerURL.breakLease
    name: breakLease
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      To end the lease but ensure that another client cannot acquire a new lease
      until the current lease period has expired.
    syntax:
      content: 'function breakLease(options?: ContainersBreakLeaseOptionalParams)'
      parameters:
        - id: options
          type:
            - az-blob-temp.ContainersBreakLeaseOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.ContainersBreakLeaseResponse>
    package: az-blob-temp
  - uid: az-blob-temp.ContainerURL.changeLease
    name: changeLease
    children: []
    type: method
    langs:
      - typeScript
    summary: To change the ID of an existing lease.
    syntax:
      content: >-
        function changeLease(leaseId: string, proposedLeaseId: string, options?:
        ContainersChangeLeaseOptionalParams)
      parameters:
        - id: leaseId
          type:
            - string
          description: ''
        - id: proposedLeaseId
          type:
            - string
          description: ''
        - id: options
          type:
            - az-blob-temp.ContainersChangeLeaseOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.ContainersChangeLeaseResponse>
    package: az-blob-temp
  - uid: az-blob-temp.ContainerURL.constructor
    name: ContainerURL
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of ContainerURL.
    syntax:
      content: 'new ContainerURL(url: string, pipeline: Pipeline)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: pipeline
          type:
            - az-blob-temp.Pipeline
          description: ''
    package: az-blob-temp
  - uid: az-blob-temp.ContainerURL.create
    name: create
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates a new container under the specified account. If the container with
      the same name already exists, the operation fails.
    syntax:
      content: 'function create(options?: ContainersCreateOptionalParams)'
      parameters:
        - id: options
          type:
            - az-blob-temp.ContainersCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.ContainersCreateResponse>
    package: az-blob-temp
  - uid: az-blob-temp.ContainerURL.delete
    name: delete
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Marks the specified container for deletion. The container and any blobs
      contained within it are later deleted during garbage collection.
    syntax:
      content: 'function delete(options?: ContainersDeleteMethodOptionalParams)'
      parameters:
        - id: options
          type:
            - az-blob-temp.ContainersDeleteMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.ContainersDeleteResponse>
    package: az-blob-temp
  - uid: az-blob-temp.ContainerURL.getAccessPolicy
    name: getAccessPolicy
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the permissions for the specified container. The permissions indicate
      whether container data may be accessed publicly.
    syntax:
      content: >-
        function getAccessPolicy(options?:
        ContainersGetAccessPolicyOptionalParams)
      parameters:
        - id: options
          type:
            - az-blob-temp.ContainersGetAccessPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.ContainersGetAccessPolicyResponse>
    package: az-blob-temp
  - uid: az-blob-temp.ContainerURL.getProperties
    name: getProperties
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns all user-defined metadata and system properties for the specified

      container. The data returned does not include the container's list of
      blobs.
    syntax:
      content: 'function getProperties(options?: ContainersGetPropertiesOptionalParams)'
      parameters:
        - id: options
          type:
            - az-blob-temp.ContainersGetPropertiesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.ContainersGetPropertiesResponse>
    package: az-blob-temp
  - uid: az-blob-temp.ContainerURL.listBlobFlatSegment
    name: listBlobFlatSegment
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      listBlobFlatSegment returns a single segment of blobs starting from the

      specified Marker. Use an empty Marker to start enumeration from the
      beginning.

      After getting a segment, process it, and then call ListBlobsFlatSegment
      again

      (passing the the previously-returned Marker) to get the next segment.
    syntax:
      content: >-
        function listBlobFlatSegment(options?:
        ContainersListBlobFlatSegmentOptionalParams)
      parameters:
        - id: options
          type:
            - az-blob-temp.ContainersListBlobFlatSegmentOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.ContainersListBlobFlatSegmentResponse>
    package: az-blob-temp
  - uid: az-blob-temp.ContainerURL.listBlobHierarchySegment
    name: listBlobHierarchySegment
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      listBlobHierarchySegment returns a single segment of blobs starting from

      the specified Marker. Use an empty Marker to start enumeration from the

      beginning. After getting a segment, process it, and then call
      ListBlobsHierarchicalSegment

      again (passing the the previously-returned Marker) to get the next
      segment.
    syntax:
      content: >-
        function listBlobHierarchySegment(delimiter: string, options?:
        ContainersListBlobHierarchySegmentOptionalParams)
      parameters:
        - id: delimiter
          type:
            - string
          description: ''
        - id: options
          type:
            - az-blob-temp.ContainersListBlobHierarchySegmentOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.ContainersListBlobHierarchySegmentResponse>
    package: az-blob-temp
  - uid: az-blob-temp.ContainerURL.newAppendBlobURL
    name: newAppendBlobURL
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new AppendBlobURL object by concatenating blobName to the end of

      ContainerURL's URL. The new AppendBlobURL uses the same request policy
      pipeline as the ContainerURL.

      To change the pipeline, create the AppendBlobURL and then call its
      WithPipeline method passing in the

      desired pipeline object. Or, call this AppendBlobURL's constructor instead
      of calling this object's

      newAppendBlobURL method.
    syntax:
      content: 'function newAppendBlobURL(blobName: string)'
      parameters:
        - id: blobName
          type:
            - string
          description: ''
      return:
        type:
          - az-blob-temp.AppendBlobURL
    package: az-blob-temp
  - uid: az-blob-temp.ContainerURL.newBlobURL
    name: newBlobURL
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates a new BlobURL object by concatenating blobName to the end of
      ContainerURL's URL. The new BlobURL uses the same request policy pipeline
      as the ContainerURL.
      To change the pipeline, create the BlobURL and then call its withPipeline
      method passing in the desired pipeline object. Or, call this BlobURL's
      constructor instead of calling this object's newBlobURL method.
    syntax:
      content: 'function newBlobURL(blobName: string)'
      parameters:
        - id: blobName
          type:
            - string
          description: ''
      return:
        type:
          - az-blob-temp.BlobURL
    package: az-blob-temp
  - uid: az-blob-temp.ContainerURL.newBlockBlobURL
    name: newBlockBlobURL
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new BlockBlobURL object by concatenating blobName to the end of

      ContainerURL's URL. The new BlockBlobURL uses the same request policy
      pipeline as the ContainerURL.

      To change the pipeline, create the BlockBlobURL and then call its
      WithPipeline method passing in the

      desired pipeline object. Or, call this BlockBlobURL's

      constructor instead of calling this object's newBlockBlobURL method.
    syntax:
      content: 'function newBlockBlobURL(blobName: string)'
      parameters:
        - id: blobName
          type:
            - string
          description: ''
      return:
        type:
          - az-blob-temp.BlockBlobURL
    package: az-blob-temp
  - uid: az-blob-temp.ContainerURL.newPageBlobURL
    name: newPageBlobURL
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new PageBlobURL object by concatenating blobName to the end of

      ContainerURL's URL. The new PageBlobURL uses the same request policy
      pipeline as the ContainerURL.

      To change the pipeline, create the PageBlobURL and then call its
      WithPipeline method passing in the

      desired pipeline object. Or, call this PageBlobURL's constructor instead
      of calling this object's

      newPageBlobURL method.
    syntax:
      content: 'function newPageBlobURL(blobName: string)'
      parameters:
        - id: blobName
          type:
            - string
          description: ''
      return:
        type:
          - az-blob-temp.PageBlobURL
    package: az-blob-temp
  - uid: az-blob-temp.ContainerURL.releaseLease
    name: releaseLease
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      To free the lease if it is no longer needed so that another client may
      immediately acquire a lease against the container.
    syntax:
      content: >-
        function releaseLease(leaseId: string, options?:
        ContainersReleaseLeaseOptionalParams)
      parameters:
        - id: leaseId
          type:
            - string
          description: ''
        - id: options
          type:
            - az-blob-temp.ContainersReleaseLeaseOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.ContainersReleaseLeaseResponse>
    package: az-blob-temp
  - uid: az-blob-temp.ContainerURL.renewLease
    name: renewLease
    children: []
    type: method
    langs:
      - typeScript
    summary: To renew an existing lease.
    syntax:
      content: >-
        function renewLease(leaseId: string, options?:
        ContainersRenewLeaseOptionalParams)
      parameters:
        - id: leaseId
          type:
            - string
          description: ''
        - id: options
          type:
            - az-blob-temp.ContainersRenewLeaseOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.ContainersRenewLeaseResponse>
    package: az-blob-temp
  - uid: az-blob-temp.ContainerURL.setAccessPolicy
    name: setAccessPolicy
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets the permissions for the specified container. The permissions indicate

      whether blobs in a container may be accessed publicly.

      When you set permissions for a container, the existing permissions are
      replaced.

      If no options or options.containerAcl provided, the existing container ACL
      will be

      removed.
    syntax:
      content: >-
        function setAccessPolicy(options?:
        ContainersSetAccessPolicyOptionalParams)
      parameters:
        - id: options
          type:
            - az-blob-temp.ContainersSetAccessPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.ContainersSetAccessPolicyResponse>
    package: az-blob-temp
  - uid: az-blob-temp.ContainerURL.setMetadata
    name: setMetadata
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets one or more user-defined name-value pairs for the specified
      container.

      If no option provided, or no metadata defined in the option parameter, the
      container

      metadata will be removed.
    syntax:
      content: 'function setMetadata(options?: ContainersSetMetadataOptionalParams)'
      parameters:
        - id: options
          type:
            - az-blob-temp.ContainersSetMetadataOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.ContainersSetMetadataResponse>
    package: az-blob-temp
  - uid: az-blob-temp.ContainerURL.withPipeline
    name: withPipeline
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates a new ContainerURL object identical to the source but with the
      specified request policy pipeline.
    syntax:
      content: 'function withPipeline(pipeline: Pipeline)'
      parameters:
        - id: pipeline
          type:
            - az-blob-temp.Pipeline
          description: ''
      return:
        type:
          - az-blob-temp.ContainerURL
    package: az-blob-temp
references:
  - uid: az-blob-temp.StorageURL
    name: StorageURL
    spec.typeScript:
      - name: StorageURL
        fullName: StorageURL
        uid: az-blob-temp.StorageURL
  - uid: az-blob-temp.Pipeline
    name: Pipeline
    spec.typeScript:
      - name: Pipeline
        fullName: Pipeline
        uid: az-blob-temp.Pipeline
  - uid: az-blob-temp.ContainersAcquireLeaseOptionalParams
    name: ContainersAcquireLeaseOptionalParams
    spec.typeScript:
      - name: ContainersAcquireLeaseOptionalParams
        fullName: ContainersAcquireLeaseOptionalParams
        uid: az-blob-temp.ContainersAcquireLeaseOptionalParams
  - uid: Promise<az-blob-temp.ContainersAcquireLeaseResponse>
    name: ContainersAcquireLeaseResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ContainersAcquireLeaseResponse
        fullName: ContainersAcquireLeaseResponse
        uid: az-blob-temp.ContainersAcquireLeaseResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.ContainersBreakLeaseOptionalParams
    name: ContainersBreakLeaseOptionalParams
    spec.typeScript:
      - name: ContainersBreakLeaseOptionalParams
        fullName: ContainersBreakLeaseOptionalParams
        uid: az-blob-temp.ContainersBreakLeaseOptionalParams
  - uid: Promise<az-blob-temp.ContainersBreakLeaseResponse>
    name: ContainersBreakLeaseResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ContainersBreakLeaseResponse
        fullName: ContainersBreakLeaseResponse
        uid: az-blob-temp.ContainersBreakLeaseResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.ContainersChangeLeaseOptionalParams
    name: ContainersChangeLeaseOptionalParams
    spec.typeScript:
      - name: ContainersChangeLeaseOptionalParams
        fullName: ContainersChangeLeaseOptionalParams
        uid: az-blob-temp.ContainersChangeLeaseOptionalParams
  - uid: Promise<az-blob-temp.ContainersChangeLeaseResponse>
    name: ContainersChangeLeaseResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ContainersChangeLeaseResponse
        fullName: ContainersChangeLeaseResponse
        uid: az-blob-temp.ContainersChangeLeaseResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.ContainersCreateOptionalParams
    name: ContainersCreateOptionalParams
    spec.typeScript:
      - name: ContainersCreateOptionalParams
        fullName: ContainersCreateOptionalParams
        uid: az-blob-temp.ContainersCreateOptionalParams
  - uid: Promise<az-blob-temp.ContainersCreateResponse>
    name: ContainersCreateResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ContainersCreateResponse
        fullName: ContainersCreateResponse
        uid: az-blob-temp.ContainersCreateResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.ContainersDeleteMethodOptionalParams
    name: ContainersDeleteMethodOptionalParams
    spec.typeScript:
      - name: ContainersDeleteMethodOptionalParams
        fullName: ContainersDeleteMethodOptionalParams
        uid: az-blob-temp.ContainersDeleteMethodOptionalParams
  - uid: Promise<az-blob-temp.ContainersDeleteResponse>
    name: ContainersDeleteResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ContainersDeleteResponse
        fullName: ContainersDeleteResponse
        uid: az-blob-temp.ContainersDeleteResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.ContainersGetAccessPolicyOptionalParams
    name: ContainersGetAccessPolicyOptionalParams
    spec.typeScript:
      - name: ContainersGetAccessPolicyOptionalParams
        fullName: ContainersGetAccessPolicyOptionalParams
        uid: az-blob-temp.ContainersGetAccessPolicyOptionalParams
  - uid: Promise<az-blob-temp.ContainersGetAccessPolicyResponse>
    name: ContainersGetAccessPolicyResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ContainersGetAccessPolicyResponse
        fullName: ContainersGetAccessPolicyResponse
        uid: az-blob-temp.ContainersGetAccessPolicyResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.ContainersGetPropertiesOptionalParams
    name: ContainersGetPropertiesOptionalParams
    spec.typeScript:
      - name: ContainersGetPropertiesOptionalParams
        fullName: ContainersGetPropertiesOptionalParams
        uid: az-blob-temp.ContainersGetPropertiesOptionalParams
  - uid: Promise<az-blob-temp.ContainersGetPropertiesResponse>
    name: ContainersGetPropertiesResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ContainersGetPropertiesResponse
        fullName: ContainersGetPropertiesResponse
        uid: az-blob-temp.ContainersGetPropertiesResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.ContainersListBlobFlatSegmentOptionalParams
    name: ContainersListBlobFlatSegmentOptionalParams
    spec.typeScript:
      - name: ContainersListBlobFlatSegmentOptionalParams
        fullName: ContainersListBlobFlatSegmentOptionalParams
        uid: az-blob-temp.ContainersListBlobFlatSegmentOptionalParams
  - uid: Promise<az-blob-temp.ContainersListBlobFlatSegmentResponse>
    name: ContainersListBlobFlatSegmentResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ContainersListBlobFlatSegmentResponse
        fullName: ContainersListBlobFlatSegmentResponse
        uid: az-blob-temp.ContainersListBlobFlatSegmentResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.ContainersListBlobHierarchySegmentOptionalParams
    name: ContainersListBlobHierarchySegmentOptionalParams
    spec.typeScript:
      - name: ContainersListBlobHierarchySegmentOptionalParams
        fullName: ContainersListBlobHierarchySegmentOptionalParams
        uid: az-blob-temp.ContainersListBlobHierarchySegmentOptionalParams
  - uid: Promise<az-blob-temp.ContainersListBlobHierarchySegmentResponse>
    name: ContainersListBlobHierarchySegmentResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ContainersListBlobHierarchySegmentResponse
        fullName: ContainersListBlobHierarchySegmentResponse
        uid: az-blob-temp.ContainersListBlobHierarchySegmentResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.AppendBlobURL
    name: AppendBlobURL
    spec.typeScript:
      - name: AppendBlobURL
        fullName: AppendBlobURL
        uid: az-blob-temp.AppendBlobURL
  - uid: az-blob-temp.BlobURL
    name: BlobURL
    spec.typeScript:
      - name: BlobURL
        fullName: BlobURL
        uid: az-blob-temp.BlobURL
  - uid: az-blob-temp.BlockBlobURL
    name: BlockBlobURL
    spec.typeScript:
      - name: BlockBlobURL
        fullName: BlockBlobURL
        uid: az-blob-temp.BlockBlobURL
  - uid: az-blob-temp.PageBlobURL
    name: PageBlobURL
    spec.typeScript:
      - name: PageBlobURL
        fullName: PageBlobURL
        uid: az-blob-temp.PageBlobURL
  - uid: az-blob-temp.ContainersReleaseLeaseOptionalParams
    name: ContainersReleaseLeaseOptionalParams
    spec.typeScript:
      - name: ContainersReleaseLeaseOptionalParams
        fullName: ContainersReleaseLeaseOptionalParams
        uid: az-blob-temp.ContainersReleaseLeaseOptionalParams
  - uid: Promise<az-blob-temp.ContainersReleaseLeaseResponse>
    name: ContainersReleaseLeaseResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ContainersReleaseLeaseResponse
        fullName: ContainersReleaseLeaseResponse
        uid: az-blob-temp.ContainersReleaseLeaseResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.ContainersRenewLeaseOptionalParams
    name: ContainersRenewLeaseOptionalParams
    spec.typeScript:
      - name: ContainersRenewLeaseOptionalParams
        fullName: ContainersRenewLeaseOptionalParams
        uid: az-blob-temp.ContainersRenewLeaseOptionalParams
  - uid: Promise<az-blob-temp.ContainersRenewLeaseResponse>
    name: ContainersRenewLeaseResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ContainersRenewLeaseResponse
        fullName: ContainersRenewLeaseResponse
        uid: az-blob-temp.ContainersRenewLeaseResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.ContainersSetAccessPolicyOptionalParams
    name: ContainersSetAccessPolicyOptionalParams
    spec.typeScript:
      - name: ContainersSetAccessPolicyOptionalParams
        fullName: ContainersSetAccessPolicyOptionalParams
        uid: az-blob-temp.ContainersSetAccessPolicyOptionalParams
  - uid: Promise<az-blob-temp.ContainersSetAccessPolicyResponse>
    name: ContainersSetAccessPolicyResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ContainersSetAccessPolicyResponse
        fullName: ContainersSetAccessPolicyResponse
        uid: az-blob-temp.ContainersSetAccessPolicyResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.ContainersSetMetadataOptionalParams
    name: ContainersSetMetadataOptionalParams
    spec.typeScript:
      - name: ContainersSetMetadataOptionalParams
        fullName: ContainersSetMetadataOptionalParams
        uid: az-blob-temp.ContainersSetMetadataOptionalParams
  - uid: Promise<az-blob-temp.ContainersSetMetadataResponse>
    name: ContainersSetMetadataResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ContainersSetMetadataResponse
        fullName: ContainersSetMetadataResponse
        uid: az-blob-temp.ContainersSetMetadataResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.ContainerURL
    name: ContainerURL
    spec.typeScript:
      - name: ContainerURL
        fullName: ContainerURL
        uid: az-blob-temp.ContainerURL
