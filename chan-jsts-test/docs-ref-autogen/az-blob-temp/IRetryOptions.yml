### YamlMime:UniversalReference
items:
  - uid: az-blob-temp.IRetryOptions
    name: IRetryOptions
    fullName: IRetryOptions
    children:
      - az-blob-temp.IRetryOptions.maxRetryDelayInMs
      - az-blob-temp.IRetryOptions.maxTries
      - az-blob-temp.IRetryOptions.retryDelayInMs
      - az-blob-temp.IRetryOptions.retryPolicyType
      - az-blob-temp.IRetryOptions.secondaryHost
      - az-blob-temp.IRetryOptions.tryTimeoutInMs
    langs:
      - typeScript
    type: interface
    summary: Retry options interface.
    package: az-blob-temp
  - uid: az-blob-temp.IRetryOptions.maxRetryDelayInMs
    name: maxRetryDelayInMs
    fullName: maxRetryDelayInMs
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional. Specifies the maximum delay allowed before retrying an operation
      (default is 120s or 120 * 1000ms).

      If you specify 0, then you must also specify 0 for retryDelayInMs.
    optional: true
    syntax:
      content: 'maxRetryDelayInMs?: number'
      return:
        type:
          - number
    package: az-blob-temp
  - uid: az-blob-temp.IRetryOptions.maxTries
    name: maxTries
    fullName: maxTries
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Optional. Max try number of attempts, default is 4.
      A value of 1 means 1 try and no retries.
      A value smaller than 1 means default retry time.
    optional: true
    syntax:
      content: 'maxTries?: number'
      return:
        type:
          - number
    package: az-blob-temp
  - uid: az-blob-temp.IRetryOptions.retryDelayInMs
    name: retryDelayInMs
    fullName: retryDelayInMs
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional. Specifies the amount of delay to use before retrying an
      operation (default is 4s or 4 * 1000ms).

      The delay increases (exponentially or linearly) with each retry up to a
      maximum specified by

      maxRetryDelayInMs. If you specify 0, then you must also specify 0 for
      maxRetryDelayInMs.
    optional: true
    syntax:
      content: 'retryDelayInMs?: number'
      return:
        type:
          - number
    package: az-blob-temp
  - uid: az-blob-temp.IRetryOptions.retryPolicyType
    name: retryPolicyType
    fullName: retryPolicyType
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Optional. RetryPolicyType, default is exponential retry policy.'
    optional: true
    syntax:
      content: 'retryPolicyType?: RetryPolicyType'
      return:
        type:
          - az-blob-temp.RetryPolicyType
    package: az-blob-temp
  - uid: az-blob-temp.IRetryOptions.secondaryHost
    name: secondaryHost
    fullName: secondaryHost
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If a secondaryHost is specified, retries will be tried against this host.
      If secondaryHost is ""

      (the default) then operations are not retried against another host. NOTE:
      Before setting this field, make

      sure you understand the issues around reading stale and
      potentially-inconsistent data at

      <xref:https%3A%2F%2Fdocs.microsoft.com%2Fen-us%2Fazure%2Fstorage%2Fcommon%2Fstorage-designing-ha-apps-with-ragrs>
    optional: true
    syntax:
      content: 'secondaryHost?: string'
      return:
        type:
          - string
    package: az-blob-temp
  - uid: az-blob-temp.IRetryOptions.tryTimeoutInMs
    name: tryTimeoutInMs
    fullName: tryTimeoutInMs
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional. Indicates the maximum time in ms allowed for any single try of
      an HTTP request.

      A value of zero means that you accept our default timeout, 30s or 30 *
      1000ms.

      NOTE: When transferring large amounts of data, the default TryTimeout will
      probably

      not be sufficient. You should override this value based on the bandwidth
      available to

      the host machine and proximity to the Storage service. A good starting
      point may be something

      like (60 seconds per MB of anticipated-payload-size)
    optional: true
    syntax:
      content: 'tryTimeoutInMs?: number'
      return:
        type:
          - number
    package: az-blob-temp
references:
  - uid: az-blob-temp.RetryPolicyType
    name: RetryPolicyType
    spec.typeScript:
      - name: RetryPolicyType
        fullName: RetryPolicyType
        uid: az-blob-temp.RetryPolicyType
