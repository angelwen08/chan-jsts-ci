### YamlMime:UniversalReference
items:
  - uid: az-blob-temp.BlobsStartCopyFromURLOptionalParams
    name: BlobsStartCopyFromURLOptionalParams
    fullName: BlobsStartCopyFromURLOptionalParams
    children:
      - az-blob-temp.BlobsStartCopyFromURLOptionalParams.ifMatches
      - az-blob-temp.BlobsStartCopyFromURLOptionalParams.ifModifiedSince
      - az-blob-temp.BlobsStartCopyFromURLOptionalParams.ifNoneMatch
      - az-blob-temp.BlobsStartCopyFromURLOptionalParams.ifUnmodifiedSince
      - az-blob-temp.BlobsStartCopyFromURLOptionalParams.leaseId
      - az-blob-temp.BlobsStartCopyFromURLOptionalParams.metadata
      - az-blob-temp.BlobsStartCopyFromURLOptionalParams.requestId
      - az-blob-temp.BlobsStartCopyFromURLOptionalParams.sourceIfMatches
      - az-blob-temp.BlobsStartCopyFromURLOptionalParams.sourceIfModifiedSince
      - az-blob-temp.BlobsStartCopyFromURLOptionalParams.sourceIfNoneMatch
      - az-blob-temp.BlobsStartCopyFromURLOptionalParams.sourceIfUnmodifiedSince
      - az-blob-temp.BlobsStartCopyFromURLOptionalParams.sourceLeaseId
      - az-blob-temp.BlobsStartCopyFromURLOptionalParams.timeout
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: any
    package: az-blob-temp
  - uid: az-blob-temp.BlobsStartCopyFromURLOptionalParams.ifMatches
    name: ifMatches
    fullName: ifMatches
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'ifMatches?: string'
      return:
        type:
          - string
    package: az-blob-temp
  - uid: az-blob-temp.BlobsStartCopyFromURLOptionalParams.ifModifiedSince
    name: ifModifiedSince
    fullName: ifModifiedSince
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'ifModifiedSince?: Date'
      return:
        type:
          - Date
    package: az-blob-temp
  - uid: az-blob-temp.BlobsStartCopyFromURLOptionalParams.ifNoneMatch
    name: ifNoneMatch
    fullName: ifNoneMatch
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'ifNoneMatch?: string'
      return:
        type:
          - string
    package: az-blob-temp
  - uid: az-blob-temp.BlobsStartCopyFromURLOptionalParams.ifUnmodifiedSince
    name: ifUnmodifiedSince
    fullName: ifUnmodifiedSince
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'ifUnmodifiedSince?: Date'
      return:
        type:
          - Date
    package: az-blob-temp
  - uid: az-blob-temp.BlobsStartCopyFromURLOptionalParams.leaseId
    name: leaseId
    fullName: leaseId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'leaseId?: string'
      return:
        type:
          - string
    package: az-blob-temp
  - uid: az-blob-temp.BlobsStartCopyFromURLOptionalParams.metadata
    name: metadata
    fullName: metadata
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'metadata?: [key: string]: string'
      return:
        type:
          - '[key: string]: string'
    package: az-blob-temp
  - uid: az-blob-temp.BlobsStartCopyFromURLOptionalParams.requestId
    name: requestId
    fullName: requestId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'requestId?: string'
      return:
        type:
          - string
    package: az-blob-temp
  - uid: az-blob-temp.BlobsStartCopyFromURLOptionalParams.sourceIfMatches
    name: sourceIfMatches
    fullName: sourceIfMatches
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'sourceIfMatches?: string'
      return:
        type:
          - string
    package: az-blob-temp
  - uid: az-blob-temp.BlobsStartCopyFromURLOptionalParams.sourceIfModifiedSince
    name: sourceIfModifiedSince
    fullName: sourceIfModifiedSince
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'sourceIfModifiedSince?: Date'
      return:
        type:
          - Date
    package: az-blob-temp
  - uid: az-blob-temp.BlobsStartCopyFromURLOptionalParams.sourceIfNoneMatch
    name: sourceIfNoneMatch
    fullName: sourceIfNoneMatch
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'sourceIfNoneMatch?: string'
      return:
        type:
          - string
    package: az-blob-temp
  - uid: az-blob-temp.BlobsStartCopyFromURLOptionalParams.sourceIfUnmodifiedSince
    name: sourceIfUnmodifiedSince
    fullName: sourceIfUnmodifiedSince
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'sourceIfUnmodifiedSince?: Date'
      return:
        type:
          - Date
    package: az-blob-temp
  - uid: az-blob-temp.BlobsStartCopyFromURLOptionalParams.sourceLeaseId
    name: sourceLeaseId
    fullName: sourceLeaseId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'sourceLeaseId?: string'
      return:
        type:
          - string
    package: az-blob-temp
  - uid: az-blob-temp.BlobsStartCopyFromURLOptionalParams.timeout
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'timeout?: number'
      return:
        type:
          - number
    package: az-blob-temp
