### YamlMime:UniversalReference
items:
  - uid: az-blob-temp.BlobsSetHTTPHeadersOptionalParams
    name: BlobsSetHTTPHeadersOptionalParams
    fullName: BlobsSetHTTPHeadersOptionalParams
    children:
      - az-blob-temp.BlobsSetHTTPHeadersOptionalParams.blobCacheControl
      - az-blob-temp.BlobsSetHTTPHeadersOptionalParams.blobContentDisposition
      - az-blob-temp.BlobsSetHTTPHeadersOptionalParams.blobContentEncoding
      - az-blob-temp.BlobsSetHTTPHeadersOptionalParams.blobContentLanguage
      - az-blob-temp.BlobsSetHTTPHeadersOptionalParams.blobContentMD5
      - az-blob-temp.BlobsSetHTTPHeadersOptionalParams.blobContentType
      - az-blob-temp.BlobsSetHTTPHeadersOptionalParams.ifMatches
      - az-blob-temp.BlobsSetHTTPHeadersOptionalParams.ifModifiedSince
      - az-blob-temp.BlobsSetHTTPHeadersOptionalParams.ifNoneMatch
      - az-blob-temp.BlobsSetHTTPHeadersOptionalParams.ifUnmodifiedSince
      - az-blob-temp.BlobsSetHTTPHeadersOptionalParams.leaseId
      - az-blob-temp.BlobsSetHTTPHeadersOptionalParams.requestId
      - az-blob-temp.BlobsSetHTTPHeadersOptionalParams.timeout
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: any
    package: az-blob-temp
  - uid: az-blob-temp.BlobsSetHTTPHeadersOptionalParams.blobCacheControl
    name: blobCacheControl
    fullName: blobCacheControl
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'blobCacheControl?: string'
      return:
        type:
          - string
    package: az-blob-temp
  - uid: az-blob-temp.BlobsSetHTTPHeadersOptionalParams.blobContentDisposition
    name: blobContentDisposition
    fullName: blobContentDisposition
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'blobContentDisposition?: string'
      return:
        type:
          - string
    package: az-blob-temp
  - uid: az-blob-temp.BlobsSetHTTPHeadersOptionalParams.blobContentEncoding
    name: blobContentEncoding
    fullName: blobContentEncoding
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'blobContentEncoding?: string'
      return:
        type:
          - string
    package: az-blob-temp
  - uid: az-blob-temp.BlobsSetHTTPHeadersOptionalParams.blobContentLanguage
    name: blobContentLanguage
    fullName: blobContentLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'blobContentLanguage?: string'
      return:
        type:
          - string
    package: az-blob-temp
  - uid: az-blob-temp.BlobsSetHTTPHeadersOptionalParams.blobContentMD5
    name: blobContentMD5
    fullName: blobContentMD5
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'blobContentMD5?: Uint8Array'
      return:
        type:
          - Uint8Array
    package: az-blob-temp
  - uid: az-blob-temp.BlobsSetHTTPHeadersOptionalParams.blobContentType
    name: blobContentType
    fullName: blobContentType
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'blobContentType?: string'
      return:
        type:
          - string
    package: az-blob-temp
  - uid: az-blob-temp.BlobsSetHTTPHeadersOptionalParams.ifMatches
    name: ifMatches
    fullName: ifMatches
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'ifMatches?: string'
      return:
        type:
          - string
    package: az-blob-temp
  - uid: az-blob-temp.BlobsSetHTTPHeadersOptionalParams.ifModifiedSince
    name: ifModifiedSince
    fullName: ifModifiedSince
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'ifModifiedSince?: Date'
      return:
        type:
          - Date
    package: az-blob-temp
  - uid: az-blob-temp.BlobsSetHTTPHeadersOptionalParams.ifNoneMatch
    name: ifNoneMatch
    fullName: ifNoneMatch
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'ifNoneMatch?: string'
      return:
        type:
          - string
    package: az-blob-temp
  - uid: az-blob-temp.BlobsSetHTTPHeadersOptionalParams.ifUnmodifiedSince
    name: ifUnmodifiedSince
    fullName: ifUnmodifiedSince
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'ifUnmodifiedSince?: Date'
      return:
        type:
          - Date
    package: az-blob-temp
  - uid: az-blob-temp.BlobsSetHTTPHeadersOptionalParams.leaseId
    name: leaseId
    fullName: leaseId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'leaseId?: string'
      return:
        type:
          - string
    package: az-blob-temp
  - uid: az-blob-temp.BlobsSetHTTPHeadersOptionalParams.requestId
    name: requestId
    fullName: requestId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'requestId?: string'
      return:
        type:
          - string
    package: az-blob-temp
  - uid: az-blob-temp.BlobsSetHTTPHeadersOptionalParams.timeout
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'timeout?: number'
      return:
        type:
          - number
    package: az-blob-temp
