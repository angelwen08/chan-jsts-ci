### YamlMime:UniversalReference
items:
  - uid: az-blob-temp.AppendBlobsAppendBlockOptionalParams
    name: AppendBlobsAppendBlockOptionalParams
    fullName: AppendBlobsAppendBlockOptionalParams
    children:
      - az-blob-temp.AppendBlobsAppendBlockOptionalParams.appendPosition
      - az-blob-temp.AppendBlobsAppendBlockOptionalParams.ifMatches
      - az-blob-temp.AppendBlobsAppendBlockOptionalParams.ifModifiedSince
      - az-blob-temp.AppendBlobsAppendBlockOptionalParams.ifNoneMatch
      - az-blob-temp.AppendBlobsAppendBlockOptionalParams.ifUnmodifiedSince
      - az-blob-temp.AppendBlobsAppendBlockOptionalParams.leaseId
      - az-blob-temp.AppendBlobsAppendBlockOptionalParams.maxSize
      - az-blob-temp.AppendBlobsAppendBlockOptionalParams.requestId
      - az-blob-temp.AppendBlobsAppendBlockOptionalParams.timeout
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: any
    package: az-blob-temp
  - uid: az-blob-temp.AppendBlobsAppendBlockOptionalParams.appendPosition
    name: appendPosition
    fullName: appendPosition
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'appendPosition?: number'
      return:
        type:
          - number
    package: az-blob-temp
  - uid: az-blob-temp.AppendBlobsAppendBlockOptionalParams.ifMatches
    name: ifMatches
    fullName: ifMatches
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'ifMatches?: string'
      return:
        type:
          - string
    package: az-blob-temp
  - uid: az-blob-temp.AppendBlobsAppendBlockOptionalParams.ifModifiedSince
    name: ifModifiedSince
    fullName: ifModifiedSince
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'ifModifiedSince?: Date'
      return:
        type:
          - Date
    package: az-blob-temp
  - uid: az-blob-temp.AppendBlobsAppendBlockOptionalParams.ifNoneMatch
    name: ifNoneMatch
    fullName: ifNoneMatch
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'ifNoneMatch?: string'
      return:
        type:
          - string
    package: az-blob-temp
  - uid: az-blob-temp.AppendBlobsAppendBlockOptionalParams.ifUnmodifiedSince
    name: ifUnmodifiedSince
    fullName: ifUnmodifiedSince
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'ifUnmodifiedSince?: Date'
      return:
        type:
          - Date
    package: az-blob-temp
  - uid: az-blob-temp.AppendBlobsAppendBlockOptionalParams.leaseId
    name: leaseId
    fullName: leaseId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'leaseId?: string'
      return:
        type:
          - string
    package: az-blob-temp
  - uid: az-blob-temp.AppendBlobsAppendBlockOptionalParams.maxSize
    name: maxSize
    fullName: maxSize
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'maxSize?: number'
      return:
        type:
          - number
    package: az-blob-temp
  - uid: az-blob-temp.AppendBlobsAppendBlockOptionalParams.requestId
    name: requestId
    fullName: requestId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'requestId?: string'
      return:
        type:
          - string
    package: az-blob-temp
  - uid: az-blob-temp.AppendBlobsAppendBlockOptionalParams.timeout
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'timeout?: number'
      return:
        type:
          - number
    package: az-blob-temp
