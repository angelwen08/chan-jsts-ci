### YamlMime:UniversalReference
items:
  - uid: az-blob-temp.BlockBlobURL
    name: BlockBlobURL
    fullName: BlockBlobURL
    children: []
    langs:
      - typeScript
    type: class
    summary: BlockBlobURL defines a set of operations applicable to block blobs.
    extends:
      name: az-blob-temp.StorageURL
    package: az-blob-temp
  - uid: az-blob-temp.BlockBlobURL.constructor
    name: BlockBlobURL
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new BlockBlobURL(url: string, pipeline: Pipeline)'
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: pipeline
          type:
            - az-blob-temp.Pipeline
          description: ''
    package: az-blob-temp
  - uid: az-blob-temp.BlockBlobURL.commitBlockList
    name: commitBlockList
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Writes a blob by specifying the list of block IDs that make up the blob.

      In order to be written as part of a blob, a block must have been
      successfully written

      to the server in a prior stageBlock operation. You can call
      commitBlockList to update a blob

      by uploading only those blocks that have changed, then committing the new
      and existing

      blocks together. Any blocks not specified in the block list and
      permanently deleted.
    syntax:
      content: >-
        function commitBlockList(blocks: string[], options?:
        BlockBlobsCommitBlockListOptionalParams)
      parameters:
        - id: blocks
          type:
            - 'string[]'
          description: Array of 64-byte value that is base64-encoded
        - id: options
          type:
            - az-blob-temp.BlockBlobsCommitBlockListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.BlockBlobsCommitBlockListResponse>
    package: az-blob-temp
  - uid: az-blob-temp.BlockBlobURL.getBlockList
    name: getBlockList
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Returns the list of blocks that have been uploaded as part of a block blob
      using the specified block list filter.
    syntax:
      content: >-
        function getBlockList(listType: BlockListType, options?:
        BlockBlobsGetBlockListOptionalParams)
      parameters:
        - id: listType
          type:
            - az-blob-temp.BlockListType
          description: ''
        - id: options
          type:
            - az-blob-temp.BlockBlobsGetBlockListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.BlockBlobsGetBlockListResponse>
    package: az-blob-temp
  - uid: az-blob-temp.BlockBlobURL.stageBlock
    name: stageBlock
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Uploads the specified block to the block blob's "staging area" to be later
      committed by a call to commitBlockList.
    syntax:
      content: >-
        function stageBlock(blockId: string, body: HttpRequestBody,
        contentLength: number, options?: BlockBlobsStageBlockOptionalParams)
      parameters:
        - id: blockId
          type:
            - string
          description: A 64-byte value that is base64-encoded
        - id: body
          type:
            - HttpRequestBody
          description: ''
        - id: contentLength
          type:
            - number
          description: ''
        - id: options
          type:
            - az-blob-temp.BlockBlobsStageBlockOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.BlockBlobsStageBlockResponse>
    package: az-blob-temp
  - uid: az-blob-temp.BlockBlobURL.upload
    name: upload
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new block blob, or updates the content of an existing block
      blob.

      Updating an existing block blob overwrites any existing metadata on the
      blob.

      Partial updates are not supported; the content of the existing blob is

      overwritten with the new content. To perform a partial update of a block
      blob's,

      use stageBlock and commitBlockList.
    syntax:
      content: >-
        function upload(body: HttpRequestBody, contentLength: number, options?:
        BlockBlobsUploadOptionalParams)
      parameters:
        - id: body
          type:
            - HttpRequestBody
          description: ''
        - id: contentLength
          type:
            - number
          description: ''
        - id: options
          type:
            - az-blob-temp.BlockBlobsUploadOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<az-blob-temp.BlockBlobsUploadResponse>
    package: az-blob-temp
  - uid: az-blob-temp.BlockBlobURL.withPipeline
    name: withPipeline
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates a new BlockBlobURL object identical to the source but with the
      specified request policy pipeline.
    syntax:
      content: 'function withPipeline(pipeline: Pipeline)'
      parameters:
        - id: pipeline
          type:
            - az-blob-temp.Pipeline
          description: ''
      return:
        type:
          - az-blob-temp.BlockBlobURL
    package: az-blob-temp
  - uid: az-blob-temp.BlockBlobURL.withSnapshot
    name: withSnapshot
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates a new BlockBlobURL object identical to the source but with the
      specified snapshot timestamp.
      Provide "" will remove the snapshot and return a URL to the base blob.
    syntax:
      content: 'function withSnapshot(snapshot: string)'
      parameters:
        - id: snapshot
          type:
            - string
          description: ''
      return:
        type:
          - az-blob-temp.BlockBlobURL
    package: az-blob-temp
references:
  - uid: az-blob-temp.StorageURL
    name: StorageURL
    spec.typeScript:
      - name: StorageURL
        fullName: StorageURL
        uid: az-blob-temp.StorageURL
  - uid: az-blob-temp.Pipeline
    name: Pipeline
    spec.typeScript:
      - name: Pipeline
        fullName: Pipeline
        uid: az-blob-temp.Pipeline
  - uid: az-blob-temp.BlockBlobsCommitBlockListOptionalParams
    name: BlockBlobsCommitBlockListOptionalParams
    spec.typeScript:
      - name: BlockBlobsCommitBlockListOptionalParams
        fullName: BlockBlobsCommitBlockListOptionalParams
        uid: az-blob-temp.BlockBlobsCommitBlockListOptionalParams
  - uid: Promise<az-blob-temp.BlockBlobsCommitBlockListResponse>
    name: BlockBlobsCommitBlockListResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BlockBlobsCommitBlockListResponse
        fullName: BlockBlobsCommitBlockListResponse
        uid: az-blob-temp.BlockBlobsCommitBlockListResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.BlockListType
    name: BlockListType
    spec.typeScript:
      - name: BlockListType
        fullName: BlockListType
        uid: az-blob-temp.BlockListType
  - uid: az-blob-temp.BlockBlobsGetBlockListOptionalParams
    name: BlockBlobsGetBlockListOptionalParams
    spec.typeScript:
      - name: BlockBlobsGetBlockListOptionalParams
        fullName: BlockBlobsGetBlockListOptionalParams
        uid: az-blob-temp.BlockBlobsGetBlockListOptionalParams
  - uid: Promise<az-blob-temp.BlockBlobsGetBlockListResponse>
    name: BlockBlobsGetBlockListResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BlockBlobsGetBlockListResponse
        fullName: BlockBlobsGetBlockListResponse
        uid: az-blob-temp.BlockBlobsGetBlockListResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.BlockBlobsStageBlockOptionalParams
    name: BlockBlobsStageBlockOptionalParams
    spec.typeScript:
      - name: BlockBlobsStageBlockOptionalParams
        fullName: BlockBlobsStageBlockOptionalParams
        uid: az-blob-temp.BlockBlobsStageBlockOptionalParams
  - uid: Promise<az-blob-temp.BlockBlobsStageBlockResponse>
    name: BlockBlobsStageBlockResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BlockBlobsStageBlockResponse
        fullName: BlockBlobsStageBlockResponse
        uid: az-blob-temp.BlockBlobsStageBlockResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.BlockBlobsUploadOptionalParams
    name: BlockBlobsUploadOptionalParams
    spec.typeScript:
      - name: BlockBlobsUploadOptionalParams
        fullName: BlockBlobsUploadOptionalParams
        uid: az-blob-temp.BlockBlobsUploadOptionalParams
  - uid: Promise<az-blob-temp.BlockBlobsUploadResponse>
    name: BlockBlobsUploadResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BlockBlobsUploadResponse
        fullName: BlockBlobsUploadResponse
        uid: az-blob-temp.BlockBlobsUploadResponse
      - name: '>'
        fullName: '>'
  - uid: az-blob-temp.BlockBlobURL
    name: BlockBlobURL
    spec.typeScript:
      - name: BlockBlobURL
        fullName: BlockBlobURL
        uid: az-blob-temp.BlockBlobURL
