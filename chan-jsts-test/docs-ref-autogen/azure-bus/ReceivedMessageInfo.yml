### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.ReceivedMessageInfo'
    name: ReceivedMessageInfo
    fullName: ReceivedMessageInfo
    children:
      - '@azure/service-bus.ReceivedMessageInfo.deadLetterSource'
      - '@azure/service-bus.ReceivedMessageInfo.deliveryCount'
      - '@azure/service-bus.ReceivedMessageInfo.enqueuedSequenceNumber'
      - '@azure/service-bus.ReceivedMessageInfo.enqueuedTimeUtc'
      - '@azure/service-bus.ReceivedMessageInfo.expiresAtUtc'
      - '@azure/service-bus.ReceivedMessageInfo.lockedUntilUtc'
      - '@azure/service-bus.ReceivedMessageInfo.lockToken'
      - '@azure/service-bus.ReceivedMessageInfo.sequenceNumber'
    langs:
      - typeScript
    type: module
    summary: >-
      Describes the module that is responsible for converting the message
      received from ServiceBus

      to/from AmqpMessage.
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ReceivedMessageInfo.deadLetterSource'
    name: deadLetterSource
    fullName: deadLetterSource
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {string} [deadLetterSource] The name of the queue or subscription that
      this message

      was enqueued on, before it was deadlettered. Only set in messages that
      have been dead-lettered

      and subsequently auto-forwarded from the dead-letter queue to another
      entity. Indicates the

      entity in which the message was dead-lettered.
    optional: true
    syntax:
      content: 'deadLetterSource?: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ReceivedMessageInfo.deliveryCount'
    name: deliveryCount
    fullName: deliveryCount
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {number} [deliveryCount] The current delivery count. The value start from
      1. Number

      of deliveries that have been attempted for this message. The count is
      incremented when a

      message lock expires, or the message is explicitly abandoned by the
      receiver.
    optional: true
    syntax:
      content: 'deliveryCount?: number'
      return:
        type:
          - number
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ReceivedMessageInfo.enqueuedSequenceNumber'
    name: enqueuedSequenceNumber
    fullName: enqueuedSequenceNumber
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {number} [enqueuedSequenceNumber] The original sequence number of the
      message. For

      messages that have been auto-forwarded, this property reflects the
      sequence number that had

      first been assigned to the message at its original point of submission.
    optional: true
    syntax:
      content: 'enqueuedSequenceNumber?: number'
      return:
        type:
          - number
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ReceivedMessageInfo.enqueuedTimeUtc'
    name: enqueuedTimeUtc
    fullName: enqueuedTimeUtc
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {Date} [enqueuedTimeUtc] The date and time of the sent message in UTC. The
      UTC

      instant at which the message has been accepted and stored in the entity.
      This value can be

      used as an authoritative and neutral arrival time indicator when the
      receiver does not

      want to trust the sender's clock.
    optional: true
    syntax:
      content: 'enqueuedTimeUtc?: Date'
      return:
        type:
          - Date
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ReceivedMessageInfo.expiresAtUtc'
    name: expiresAtUtc
    fullName: expiresAtUtc
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {Date} [expiresAtUtc] The date and time in UTC at which the message is set
      to expire.

      The UTC instant at which the message is marked for removal and no longer
      available for

      retrieval from the entity due to expiration. Expiry is controlled by the
      `timeToLive` property

      and this property is computed from `enqueuedTimeUtc` + `timeToLive`.
    optional: true
    syntax:
      content: 'expiresAtUtc?: Date'
      return:
        type:
          - Date
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ReceivedMessageInfo.lockedUntilUtc'
    name: lockedUntilUtc
    fullName: lockedUntilUtc
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {Date} [lockedUntilUtc] The date and time in UTC until which the message
      will be

      locked in the queue/subscription. For messages retrieved under a lock
      (peek-lock receive mode,

      not pre-settled) this property reflects the UTC instant until which the
      message is held

      locked in the queue/subscription. When the lock expires, the
      `deliveryCount` is incremented

      and the message is again available for retrieval.
    optional: true
    syntax:
      content: 'lockedUntilUtc?: Date'
      return:
        type:
          - Date
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ReceivedMessageInfo.lockToken'
    name: lockToken
    fullName: lockToken
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {string} [lockToken] The lock token for the current message. The lock
      token is a

      reference to the lock that is being held by the broker in
      `ReceiveMode.PeekLock` mode. Locks

      are used to explicitly settle messages as explained in the [product
      documentation in more
      detail](https://docs.microsoft.com/azure/service-bus-messaging/message-transfers-locks-settlement)

      The token can also be used to pin the lock permanently through the
      [Deferral
      API](https://docs.microsoft.com/azure/service-bus-messaging/message-deferral)

      and, with that, take the message out of the regular delivery state flow.
    optional: true
    syntax:
      content: 'lockToken?: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ReceivedMessageInfo.sequenceNumber'
    name: sequenceNumber
    fullName: sequenceNumber
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {number} [sequenceNumber] The unique number assigned to a message by
      Service Bus.

      The sequence number is a unique 64-bit integer assigned to a message as it
      is accepted

      and stored by the broker and functions as its true identifier. For
      partitioned entities,

      the topmost 16 bits reflect the partition identifier. Sequence numbers
      monotonically increase.

      They roll over to 0 when the 48-64 bit range is exhausted.


      **Max safe integer** that Javascript currently supports is `2^53 - 1`. The
      sequence number

      is an AMQP `Long` type which can be upto 64 bits long. To represent that
      we are using a

      library named [long.js](https://github.com/dcodeIO/long.js). We expect
      customers

      to use the **`Long`** type exported by this library.
    optional: true
    syntax:
      content: 'sequenceNumber?: Long'
      return:
        type:
          - Long
    package: '@azure/service-bus'
