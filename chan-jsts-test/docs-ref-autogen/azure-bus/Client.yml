### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.Client'
    name: Client
    fullName: Client
    children:
      - '@azure/service-bus.Client.close'
      - '@azure/service-bus.Client.detached'
      - '@azure/service-bus.Client.entityPath'
      - '@azure/service-bus.Client.id'
    langs:
      - typeScript
    type: interface
    summary: Interface for Queue/Topic/Subscription clients
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Client.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: Closes the client.
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Client.detached'
    name: detached(AmqpError | Error)
    children: []
    type: method
    langs:
      - typeScript
    summary: Will reconnect the client if neccessary.
    syntax:
      content: 'function detached(error?: AmqpError | Error)'
      parameters:
        - id: error
          type:
            - AmqpError | Error
          description: |
            Error if any
          optional: true
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Client.entityPath'
    name: entityPath
    fullName: entityPath
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {string} The entitypath for the Service Bus entity for which this client
      is created.
    syntax:
      content: 'entityPath: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Client.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: '{string} A unique identifier for the client.'
    syntax:
      content: 'id: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
