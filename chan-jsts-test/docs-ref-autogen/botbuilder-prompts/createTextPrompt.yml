### YamlMime:UniversalReference
items:
  - uid: botbuilder-prompts.createTextPrompt
    name: createTextPrompt
    children: []
    type: function
    langs:
      - typeScript
    summary: Creates a new prompt that asks the user to enter some text.
    syntax:
      content: 'function createTextPrompt<O>(validator?: PromptValidator<string, O>)'
      parameters:
        - id: validator
          type:
            - 'botbuilder-prompts.PromptValidator<string, O>'
          description: >
            (Optional) validator for providing additional validation logic or
            customizing the prompt sent to the user when invalid.
          optional: true
      return:
        type:
          - botbuilder-prompts.TextPrompt<O>
    package: botbuilder-prompts
    remarks: >-
      This example shows creating a text prompt with a custom validator that
      ensures the length of

      the users answer matches some minimum length requirement:


      ```JavaScript

      const { createTextPrompt } = require('botbuilder-prompts');


      const namePrompt = createTextPrompt(async (context, value) => {
         if (value && value.length >= 3) {
            return value;
         }
         await namePrompt.prompt(context, `Your entry must be at least 3 characters in length.`);
         return undefined;
      });

      ```
references:
  - uid: 'botbuilder-prompts.PromptValidator<string, O>'
    spec.typeScript:
      - name: PromptValidator
        fullName: PromptValidator
        uid: botbuilder-prompts.PromptValidator
      - name: '<string, O>'
        fullName: '<string, O>'
  - uid: botbuilder-prompts.TextPrompt<O>
    spec.typeScript:
      - name: TextPrompt
        fullName: TextPrompt
        uid: botbuilder-prompts.TextPrompt
      - name: <O>
        fullName: <O>
