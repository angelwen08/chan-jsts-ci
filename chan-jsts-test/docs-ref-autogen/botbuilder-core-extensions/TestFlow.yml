### YamlMime:UniversalReference
items:
  - uid: botbuilder-core-extensions.TestFlow
    name: TestFlow
    fullName: TestFlow
    children:
      - botbuilder-core-extensions.TestFlow.assertReply
      - botbuilder-core-extensions.TestFlow.assertReplyOneOf
      - botbuilder-core-extensions.TestFlow.catch
      - botbuilder-core-extensions.TestFlow.delay
      - botbuilder-core-extensions.TestFlow.previous
      - botbuilder-core-extensions.TestFlow.send
      - botbuilder-core-extensions.TestFlow.test
      - botbuilder-core-extensions.TestFlow.then
    langs:
      - typeScript
    type: class
    summary: >-
      Support class for `TestAdapter` that allows for the simple construction of
      a sequence of tests.
    package: botbuilder-core-extensions
    remarks: >-
      Calling `adapter.send()` or `adapter.test()` will create a new test flow
      which you can chain

      together additional tests using a fluent syntax.


      ```JavaScript

      const { TestAdapter } = require('botbuilder');


      const adapter = new TestAdapter(async (context) => {
         if (context.text === 'hi') {
            await context.sendActivity(`Hello World`);
         } else if (context.text === 'bye') {
            await context.sendActivity(`Goodbye`);
         }
      });


      adapter.test(`hi`, `Hello World`)
             .test(`bye`, `Goodbye`)
             .then(() => done());
      ```
  - uid: botbuilder-core-extensions.TestFlow.assertReply
    name: assertReply
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Generates an assertion if the bots response doesn't match the expected
      text/activity.
    syntax:
      content: >-
        function assertReply(expected: string | Partial<Activity> |
        TestActivityInspector, description?: string, timeout?: number)
      parameters:
        - id: expected
          type:
            - >-
              string | Partial<Activity> |
              botbuilder-core-extensions.TestActivityInspector
          description: >-
            Expected text or activity from the bot. Can be a callback to inspect
            the response using custom logic.
        - id: description
          type:
            - string
          description: >-
            (Optional) Description of the test case. If not provided one will be
            generated.
          optional: true
        - id: timeout
          type:
            - number
          description: >
            (Optional) number of milliseconds to wait for a response from bot.
            Defaults to a value of `3000`.
          optional: true
      return:
        type:
          - botbuilder-core-extensions.TestFlow
    package: botbuilder-core-extensions
  - uid: botbuilder-core-extensions.TestFlow.assertReplyOneOf
    name: assertReplyOneOf
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Generates an assertion if the bots response is not one of the candidate
      strings.
    syntax:
      content: >-
        function assertReplyOneOf(candidates: string[], description?: string,
        timeout?: number)
      parameters:
        - id: candidates
          type:
            - 'string[]'
          description: List of candidate responses.
        - id: description
          type:
            - string
          description: >-
            (Optional) Description of the test case. If not provided one will be
            generated.
          optional: true
        - id: timeout
          type:
            - number
          description: >
            (Optional) number of milliseconds to wait for a response from bot.
            Defaults to a value of `3000`.
          optional: true
      return:
        type:
          - botbuilder-core-extensions.TestFlow
    package: botbuilder-core-extensions
  - uid: botbuilder-core-extensions.TestFlow.catch
    name: catch
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds a `catch()` clause to the tests promise chain.
    syntax:
      content: 'function catch(onRejected?: (reason: any) => void)'
      parameters:
        - id: onRejected
          type:
            - '(reason: any) => void'
          description: |
            Code to run if the test has thrown an error.
          optional: true
      return:
        type:
          - botbuilder-core-extensions.TestFlow
    package: botbuilder-core-extensions
  - uid: botbuilder-core-extensions.TestFlow.delay
    name: delay
    children: []
    type: method
    langs:
      - typeScript
    summary: Inserts a delay before continuing.
    syntax:
      content: 'function delay(ms: number)'
      parameters:
        - id: ms
          type:
            - number
          description: |
            ms to wait
      return:
        type:
          - botbuilder-core-extensions.TestFlow
    package: botbuilder-core-extensions
  - uid: botbuilder-core-extensions.TestFlow.previous
    name: previous
    fullName: previous
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'previous: Promise<void>'
      return:
        type:
          - Promise<void>
    package: botbuilder-core-extensions
  - uid: botbuilder-core-extensions.TestFlow.send
    name: send
    children: []
    type: method
    langs:
      - typeScript
    summary: Sends something to the bot.
    syntax:
      content: 'function send(userSays: string | Partial<Activity>)'
      parameters:
        - id: userSays
          type:
            - string | Partial<Activity>
          description: |
            Text or activity simulating user input.
      return:
        type:
          - botbuilder-core-extensions.TestFlow
    package: botbuilder-core-extensions
  - uid: botbuilder-core-extensions.TestFlow.test
    name: test
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Send something to the bot and expects the bot to return with a given
      reply. This is simply a

      wrapper around calls to `send()` and `assertReply()`. This is such a
      common pattern that a

      helper is provided.
    syntax:
      content: >-
        function test(userSays: string | Partial<Activity>, expected: string |
        Partial<Activity> | (activity: Partial<Activity>, description?: string)
        => void, description?: string, timeout?: number)
      parameters:
        - id: userSays
          type:
            - string | Partial<Activity>
          description: Text or activity simulating user input.
        - id: expected
          type:
            - >-
              string | Partial<Activity> | (activity: Partial<Activity>,
              description?: string) => void
          description: Expected text or activity of the reply sent by the bot.
        - id: description
          type:
            - string
          description: >-
            (Optional) Description of the test case. If not provided one will be
            generated.
          optional: true
        - id: timeout
          type:
            - number
          description: >
            (Optional) number of milliseconds to wait for a response from bot.
            Defaults to a value of `3000`.
          optional: true
      return:
        type:
          - botbuilder-core-extensions.TestFlow
    package: botbuilder-core-extensions
  - uid: botbuilder-core-extensions.TestFlow.then
    name: then
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds a `then()` step to the tests promise chain.
    syntax:
      content: 'function then(onFulfilled?: () => void)'
      parameters:
        - id: onFulfilled
          type:
            - () => void
          description: |
            Code to run if the test is currently passing.
          optional: true
      return:
        type:
          - botbuilder-core-extensions.TestFlow
    package: botbuilder-core-extensions
references:
  - uid: >-
      string | Partial<Activity> |
      botbuilder-core-extensions.TestActivityInspector
    spec.typeScript:
      - name: 'string | Partial<Activity> | '
        fullName: 'string | Partial<Activity> | '
      - name: TestActivityInspector
        fullName: TestActivityInspector
        uid: botbuilder-core-extensions.TestActivityInspector
  - uid: botbuilder-core-extensions.TestFlow
    spec.typeScript:
      - name: TestFlow
        fullName: TestFlow
        uid: botbuilder-core-extensions.TestFlow
