### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-blob.IBlobDownloadOptions'
    name: IBlobDownloadOptions
    fullName: IBlobDownloadOptions
    children:
      - '@azure/storage-blob.IBlobDownloadOptions.blobAccessConditions'
      - '@azure/storage-blob.IBlobDownloadOptions.maxRetryRequests'
      - '@azure/storage-blob.IBlobDownloadOptions.progress'
      - '@azure/storage-blob.IBlobDownloadOptions.rangeGetContentMD5'
      - '@azure/storage-blob.IBlobDownloadOptions.snapshot'
    langs:
      - typeScript
    type: interface
    summary: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.IBlobDownloadOptions.blobAccessConditions'
    name: blobAccessConditions
    fullName: blobAccessConditions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'blobAccessConditions?: IBlobAccessConditions'
      return:
        type:
          - '@azure/storage-blob.IBlobAccessConditions'
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.IBlobDownloadOptions.maxRetryRequests'
    name: maxRetryRequests
    fullName: maxRetryRequests
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Optional. ONLY AVAILABLE IN NODE.JS.

      How many retries will perform when original body download stream
      unexpected ends.

      Above kind of ends will not trigger retry policy defined in a pipeline,

      because they doesn't emit network errors.


      With this option, every additional retry means an additional
      FileURL.download() request will be made

      from the broken point, until the requested range has been successfully
      downloaded or maxRetryRequests is reached.


      Default value is 5, please set a larger value when loading large files in
      poor network.
    optional: true
    syntax:
      content: 'maxRetryRequests?: number'
      return:
        type:
          - number
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.IBlobDownloadOptions.progress'
    name: progress
    fullName: progress
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'progress?: (progress: TransferProgressEvent) => void'
      return:
        type:
          - '(progress: TransferProgressEvent) => void'
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.IBlobDownloadOptions.rangeGetContentMD5'
    name: rangeGetContentMD5
    fullName: rangeGetContentMD5
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'rangeGetContentMD5?: boolean'
      return:
        type:
          - boolean
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.IBlobDownloadOptions.snapshot'
    name: snapshot
    fullName: snapshot
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'snapshot?: string'
      return:
        type:
          - string
    package: '@azure/storage-blob'
references:
  - uid: '@azure/storage-blob.IBlobAccessConditions'
    name: IBlobAccessConditions
    spec.typeScript:
      - name: IBlobAccessConditions
        fullName: IBlobAccessConditions
        uid: '@azure/storage-blob.IBlobAccessConditions'
