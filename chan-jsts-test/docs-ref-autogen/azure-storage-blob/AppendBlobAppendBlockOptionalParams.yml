### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-blob.AppendBlobAppendBlockOptionalParams'
    name: AppendBlobAppendBlockOptionalParams
    fullName: AppendBlobAppendBlockOptionalParams
    children:
      - '@azure/storage-blob.AppendBlobAppendBlockOptionalParams.abortSignal'
      - >-
        @azure/storage-blob.AppendBlobAppendBlockOptionalParams.appendPositionAccessConditions
      - '@azure/storage-blob.AppendBlobAppendBlockOptionalParams.customHeaders'
      - >-
        @azure/storage-blob.AppendBlobAppendBlockOptionalParams.leaseAccessConditions
      - >-
        @azure/storage-blob.AppendBlobAppendBlockOptionalParams.modifiedAccessConditions
      - >-
        @azure/storage-blob.AppendBlobAppendBlockOptionalParams.onDownloadProgress
      - '@azure/storage-blob.AppendBlobAppendBlockOptionalParams.onUploadProgress'
      - '@azure/storage-blob.AppendBlobAppendBlockOptionalParams.requestId'
      - '@azure/storage-blob.AppendBlobAppendBlockOptionalParams.timeout'
      - '@azure/storage-blob.AppendBlobAppendBlockOptionalParams.timeoutParameter'
      - >-
        @azure/storage-blob.AppendBlobAppendBlockOptionalParams.transactionalContentMD5
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: RequestOptionsBase
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.AppendBlobAppendBlockOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: The signal which can be used to abort requests.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/storage-blob'
  - uid: >-
      @azure/storage-blob.AppendBlobAppendBlockOptionalParams.appendPositionAccessConditions
    name: appendPositionAccessConditions
    fullName: appendPositionAccessConditions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'appendPositionAccessConditions?: AppendPositionAccessConditions'
      return:
        type:
          - '@azure/storage-blob.AppendPositionAccessConditions'
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.AppendBlobAppendBlockOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    optional: true
    syntax:
      content: 'customHeaders?: [key: string]: string'
      return:
        type:
          - '[key: string]: string'
    package: '@azure/storage-blob'
  - uid: >-
      @azure/storage-blob.AppendBlobAppendBlockOptionalParams.leaseAccessConditions
    name: leaseAccessConditions
    fullName: leaseAccessConditions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'leaseAccessConditions?: LeaseAccessConditions'
      return:
        type:
          - '@azure/storage-blob.LeaseAccessConditions'
    package: '@azure/storage-blob'
  - uid: >-
      @azure/storage-blob.AppendBlobAppendBlockOptionalParams.modifiedAccessConditions
    name: modifiedAccessConditions
    fullName: modifiedAccessConditions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'modifiedAccessConditions?: ModifiedAccessConditions'
      return:
        type:
          - '@azure/storage-blob.ModifiedAccessConditions'
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.AppendBlobAppendBlockOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon download progress.
    optional: true
    syntax:
      content: 'onDownloadProgress?: (progress: TransferProgressEvent) => void'
      return:
        type:
          - '(progress: TransferProgressEvent) => void'
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.AppendBlobAppendBlockOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon upload progress.
    optional: true
    syntax:
      content: 'onUploadProgress?: (progress: TransferProgressEvent) => void'
      return:
        type:
          - '(progress: TransferProgressEvent) => void'
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.AppendBlobAppendBlockOptionalParams.requestId'
    name: requestId
    fullName: requestId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'requestId?: string'
      return:
        type:
          - string
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.AppendBlobAppendBlockOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    optional: true
    syntax:
      content: 'timeout?: number'
      return:
        type:
          - number
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.AppendBlobAppendBlockOptionalParams.timeoutParameter'
    name: timeoutParameter
    fullName: timeoutParameter
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'timeoutParameter?: number'
      return:
        type:
          - number
    package: '@azure/storage-blob'
  - uid: >-
      @azure/storage-blob.AppendBlobAppendBlockOptionalParams.transactionalContentMD5
    name: transactionalContentMD5
    fullName: transactionalContentMD5
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'transactionalContentMD5?: Uint8Array'
      return:
        type:
          - Uint8Array
    package: '@azure/storage-blob'
references:
  - uid: '@azure/storage-blob.AppendPositionAccessConditions'
    name: AppendPositionAccessConditions
    spec.typeScript:
      - name: AppendPositionAccessConditions
        fullName: AppendPositionAccessConditions
        uid: '@azure/storage-blob.AppendPositionAccessConditions'
  - uid: '@azure/storage-blob.LeaseAccessConditions'
    name: LeaseAccessConditions
    spec.typeScript:
      - name: LeaseAccessConditions
        fullName: LeaseAccessConditions
        uid: '@azure/storage-blob.LeaseAccessConditions'
  - uid: '@azure/storage-blob.ModifiedAccessConditions'
    name: ModifiedAccessConditions
    spec.typeScript:
      - name: ModifiedAccessConditions
        fullName: ModifiedAccessConditions
        uid: '@azure/storage-blob.ModifiedAccessConditions'
