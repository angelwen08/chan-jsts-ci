### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-blob.ContainerGetPropertiesHeaders'
    name: ContainerGetPropertiesHeaders
    fullName: ContainerGetPropertiesHeaders
    children:
      - '@azure/storage-blob.ContainerGetPropertiesHeaders.blobPublicAccess'
      - '@azure/storage-blob.ContainerGetPropertiesHeaders.date'
      - '@azure/storage-blob.ContainerGetPropertiesHeaders.errorCode'
      - '@azure/storage-blob.ContainerGetPropertiesHeaders.eTag'
      - '@azure/storage-blob.ContainerGetPropertiesHeaders.hasImmutabilityPolicy'
      - '@azure/storage-blob.ContainerGetPropertiesHeaders.hasLegalHold'
      - '@azure/storage-blob.ContainerGetPropertiesHeaders.lastModified'
      - '@azure/storage-blob.ContainerGetPropertiesHeaders.leaseDuration'
      - '@azure/storage-blob.ContainerGetPropertiesHeaders.leaseState'
      - '@azure/storage-blob.ContainerGetPropertiesHeaders.leaseStatus'
      - '@azure/storage-blob.ContainerGetPropertiesHeaders.metadata'
      - '@azure/storage-blob.ContainerGetPropertiesHeaders.requestId'
      - '@azure/storage-blob.ContainerGetPropertiesHeaders.version'
    langs:
      - typeScript
    type: interface
    summary: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ContainerGetPropertiesHeaders.blobPublicAccess'
    name: blobPublicAccess
    fullName: blobPublicAccess
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'blobPublicAccess?: PublicAccessType'
      return:
        type:
          - '@azure/storage-blob.PublicAccessType'
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ContainerGetPropertiesHeaders.date'
    name: date
    fullName: date
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'date?: Date'
      return:
        type:
          - Date
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ContainerGetPropertiesHeaders.errorCode'
    name: errorCode
    fullName: errorCode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'errorCode?: string'
      return:
        type:
          - string
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ContainerGetPropertiesHeaders.eTag'
    name: eTag
    fullName: eTag
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'eTag?: string'
      return:
        type:
          - string
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ContainerGetPropertiesHeaders.hasImmutabilityPolicy'
    name: hasImmutabilityPolicy
    fullName: hasImmutabilityPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'hasImmutabilityPolicy?: boolean'
      return:
        type:
          - boolean
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ContainerGetPropertiesHeaders.hasLegalHold'
    name: hasLegalHold
    fullName: hasLegalHold
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'hasLegalHold?: boolean'
      return:
        type:
          - boolean
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ContainerGetPropertiesHeaders.lastModified'
    name: lastModified
    fullName: lastModified
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'lastModified?: Date'
      return:
        type:
          - Date
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ContainerGetPropertiesHeaders.leaseDuration'
    name: leaseDuration
    fullName: leaseDuration
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'leaseDuration?: LeaseDurationType'
      return:
        type:
          - '@azure/storage-blob.LeaseDurationType'
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ContainerGetPropertiesHeaders.leaseState'
    name: leaseState
    fullName: leaseState
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'leaseState?: LeaseStateType'
      return:
        type:
          - '@azure/storage-blob.LeaseStateType'
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ContainerGetPropertiesHeaders.leaseStatus'
    name: leaseStatus
    fullName: leaseStatus
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'leaseStatus?: LeaseStatusType'
      return:
        type:
          - '@azure/storage-blob.LeaseStatusType'
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ContainerGetPropertiesHeaders.metadata'
    name: metadata
    fullName: metadata
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'metadata?: [key: string]: string'
      return:
        type:
          - '[key: string]: string'
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ContainerGetPropertiesHeaders.requestId'
    name: requestId
    fullName: requestId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'requestId?: string'
      return:
        type:
          - string
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ContainerGetPropertiesHeaders.version'
    name: version
    fullName: version
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'version?: string'
      return:
        type:
          - string
    package: '@azure/storage-blob'
references:
  - uid: '@azure/storage-blob.PublicAccessType'
    name: PublicAccessType
    spec.typeScript:
      - name: PublicAccessType
        fullName: PublicAccessType
        uid: '@azure/storage-blob.PublicAccessType'
  - uid: '@azure/storage-blob.LeaseDurationType'
    name: LeaseDurationType
    spec.typeScript:
      - name: LeaseDurationType
        fullName: LeaseDurationType
        uid: '@azure/storage-blob.LeaseDurationType'
  - uid: '@azure/storage-blob.LeaseStateType'
    name: LeaseStateType
    spec.typeScript:
      - name: LeaseStateType
        fullName: LeaseStateType
        uid: '@azure/storage-blob.LeaseStateType'
  - uid: '@azure/storage-blob.LeaseStatusType'
    name: LeaseStatusType
    spec.typeScript:
      - name: LeaseStatusType
        fullName: LeaseStatusType
        uid: '@azure/storage-blob.LeaseStatusType'
