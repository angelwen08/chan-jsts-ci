### YamlMime:UniversalReference
items:
  - uid: ms-rest.WebResource
    name: WebResource
    fullName: WebResource
    children:
      - ms-rest.WebResource.body
      - ms-rest.WebResource.formData
      - ms-rest.WebResource.headers
      - ms-rest.WebResource.method
      - ms-rest.WebResource.pipeInput
      - ms-rest.WebResource.prepare
      - ms-rest.WebResource.query
      - ms-rest.WebResource.rawResponse
      - ms-rest.WebResource.url
      - ms-rest.WebResource.validateRequestProperties
    langs:
      - typeScript
    type: class
    summary: >-
      This class provides an abstraction over a REST call by being library /
      implementation agnostic and wrapping the necessary

      properties to initiate a request.
    package: ms-rest
  - uid: ms-rest.WebResource.body
    name: body
    fullName: body
    children: []
    langs:
      - typeScript
    type: property
    summary: '{any} [body] The request body'
    optional: true
    syntax:
      content: 'public body?: any'
      return:
        type:
          - any
    package: ms-rest
  - uid: ms-rest.WebResource.formData
    name: formData
    fullName: formData
    children: []
    langs:
      - typeScript
    type: property
    summary: '{any} [formData] Formdata parameters.'
    optional: true
    syntax:
      content: 'public formData?: any'
      return:
        type:
          - any
    package: ms-rest
  - uid: ms-rest.WebResource.headers
    name: headers
    fullName: headers
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Access to raw request headers for requests. Useful when you need to set a
      header

      on every request (like in a credential object) where the prepare method
      does

      far too much work.
    syntax:
      content: 'public headers: [key: string]: string'
      return:
        type:
          - '[key: string]: string'
    package: ms-rest
  - uid: ms-rest.WebResource.method
    name: method
    fullName: method
    children: []
    langs:
      - typeScript
    type: property
    summary: '{string} method The request method'
    syntax:
      content: 'public method: HttpMethods'
      return:
        type:
          - ms-rest.HttpMethods
    package: ms-rest
  - uid: ms-rest.WebResource.pipeInput
    name: pipeInput
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Hook up the given input stream to a destination output stream if the
      WebResource method

      requires a request body and a body is not already set.
    syntax:
      content: >-
        function pipeInput(inputStream: stream.Readable, destStream:
        stream.Writable)
      parameters:
        - id: inputStream
          type:
            - stream.Readable
          description: the stream to pipe from
        - id: destStream
          type:
            - stream.Writable
          description: ''
      return:
        type:
          - stream.Writable
    package: ms-rest
  - uid: ms-rest.WebResource.prepare
    name: prepare
    children: []
    type: method
    langs:
      - typeScript
    summary: Prepares the request.
    syntax:
      content: >-
        function prepare(options?: PathTemplateBasedRequestPrepareOptions |
        UrlBasedRequestPrepareOptions)
      parameters:
        - id: options
          type:
            - >-
              ms-rest.PathTemplateBasedRequestPrepareOptions |
              ms-rest.UrlBasedRequestPrepareOptions
          description: >
            The request options that should be provided to send a request
            successfully
          optional: true
      return:
        type:
          - ms-rest.WebResource
    package: ms-rest
  - uid: ms-rest.WebResource.query
    name: query
    fullName: query
    children: []
    langs:
      - typeScript
    type: property
    summary: '{any} [query] Query parameters'
    optional: true
    syntax:
      content: 'public query?: [key: string]: any'
      return:
        type:
          - '[key: string]: any'
    package: ms-rest
  - uid: ms-rest.WebResource.rawResponse
    name: rawResponse
    fullName: rawResponse
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      {boolean} rawResponse Indicates whether the client should give back the
      response as-is. (Useful for streaming scenarios).
    optional: true
    syntax:
      content: 'public rawResponse?: boolean'
      return:
        type:
          - boolean
    package: ms-rest
  - uid: ms-rest.WebResource.url
    name: url
    fullName: url
    children: []
    langs:
      - typeScript
    type: property
    summary: '{string} url The request url'
    syntax:
      content: 'public url: string'
      return:
        type:
          - string
    package: ms-rest
  - uid: ms-rest.WebResource.validateRequestProperties
    name: validateRequestProperties
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Validates that the required properties such as method, url,
      headers['Content-Type'],

      headers['accept-language'] are defined. It will throw an error if one of
      the above

      mentioned properties are not defined.
    syntax:
      content: function validateRequestProperties()
      parameters: []
    package: ms-rest
references:
  - uid: ms-rest.HttpMethods
    spec.typeScript:
      - name: HttpMethods
        fullName: HttpMethods
        uid: ms-rest.HttpMethods
  - uid: >-
      ms-rest.PathTemplateBasedRequestPrepareOptions |
      ms-rest.UrlBasedRequestPrepareOptions
    spec.typeScript:
      - name: PathTemplateBasedRequestPrepareOptions
        fullName: PathTemplateBasedRequestPrepareOptions
        uid: ms-rest.PathTemplateBasedRequestPrepareOptions
      - name: ' | '
        fullName: ' | '
      - name: UrlBasedRequestPrepareOptions
        fullName: UrlBasedRequestPrepareOptions
        uid: ms-rest.UrlBasedRequestPrepareOptions
  - uid: ms-rest.WebResource
    spec.typeScript:
      - name: WebResource
        fullName: WebResource
        uid: ms-rest.WebResource
