### YamlMime:UniversalReference
items:
  - uid: azure-event-hubs.Connection
    name: Connection
    fullName: Connection
    children:
      - azure-event-hubs.Connection.close
      - azure-event-hubs.Connection.constructor
      - azure-event-hubs.Connection.createReceiver
      - azure-event-hubs.Connection.createRequestResponseLink
      - azure-event-hubs.Connection.createSender
      - azure-event-hubs.Connection.createSession
      - azure-event-hubs.Connection.id
      - azure-event-hubs.Connection.isOpen
      - azure-event-hubs.Connection.open
      - azure-event-hubs.Connection.options
      - azure-event-hubs.Connection.registerHandler
      - azure-event-hubs.Connection.removeHandler
      - azure-event-hubs.Connection.wasCloseInitiated
    langs:
      - typeScript
    type: class
    summary: ''
    package: azure-event-hubs
  - uid: azure-event-hubs.Connection.close
    name: close
    children: []
    type: method
    langs:
      - typeScript
    summary: Closes the amqp connection.
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: azure-event-hubs
  - uid: azure-event-hubs.Connection.constructor
    name: Connection
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new Connection(options?: ConnectionOptions)'
      parameters:
        - id: options
          type:
            - ConnectionOptions
          description: ''
          optional: true
    package: azure-event-hubs
  - uid: azure-event-hubs.Connection.createReceiver
    name: createReceiver
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates an amqp receiver link. It either uses the provided session or
      creates a new one.
    syntax:
      content: 'function createReceiver(options?: ReceiverOptionsWithSession)'
      parameters:
        - id: options
          type:
            - azure-event-hubs.ReceiverOptionsWithSession
          description: Optional parameters to create a receiver link.
          optional: true
      return:
        type:
          - Promise<azure-event-hubs.Receiver>
    package: azure-event-hubs
  - uid: azure-event-hubs.Connection.createRequestResponseLink
    name: createRequestResponseLink
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates an amqp sender-receiver link. It either uses the provided session
      or creates a new one.

      This method creates a sender-receiver link on the same session. It is
      useful for management

      style operations where one may want to send a request and await for
      response.
    syntax:
      content: >-
        function createRequestResponseLink(senderOptions: SenderOptions,
        receiverOptions: ReceiverOptions, providedSession?: Session)
      parameters:
        - id: senderOptions
          type:
            - azure-event-hubs.SenderOptions
          description: Parameters to create a sender.
        - id: receiverOptions
          type:
            - azure-event-hubs.ReceiverOptions
          description: Parameters to create a receiver.
        - id: providedSession
          type:
            - azure-event-hubs.Session
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-event-hubs.ReqResLink>
    package: azure-event-hubs
  - uid: azure-event-hubs.Connection.createSender
    name: createSender
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates an amqp sender link. It either uses the provided session or
      creates a new one.
    syntax:
      content: 'function createSender(options?: SenderOptionsWithSession)'
      parameters:
        - id: options
          type:
            - azure-event-hubs.SenderOptionsWithSession
          description: Optional parameters to create a sender link.
          optional: true
      return:
        type:
          - Promise<azure-event-hubs.Sender>
    package: azure-event-hubs
  - uid: azure-event-hubs.Connection.createSession
    name: createSession
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates an amqp session on the provided amqp connection.
    syntax:
      content: function createSession()
      parameters: []
      return:
        type:
          - Promise<azure-event-hubs.Session>
    package: azure-event-hubs
  - uid: azure-event-hubs.Connection.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'id: string'
      return:
        type:
          - string
    package: azure-event-hubs
  - uid: azure-event-hubs.Connection.isOpen
    name: isOpen
    children: []
    type: method
    langs:
      - typeScript
    summary: Determines whether the connection is open.
    syntax:
      content: function isOpen()
      parameters: []
      return:
        type:
          - boolean
    package: azure-event-hubs
  - uid: azure-event-hubs.Connection.open
    name: open
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new amqp connection.
    syntax:
      content: function open()
      parameters: []
      return:
        type:
          - Promise<azure-event-hubs.Connection>
    package: azure-event-hubs
  - uid: azure-event-hubs.Connection.options
    name: options
    fullName: options
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'options?: ConnectionOptions'
      return:
        type:
          - ConnectionOptions
    package: azure-event-hubs
  - uid: azure-event-hubs.Connection.registerHandler
    name: registerHandler
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function registerHandler(event: ConnectionEvents, handler:
        rhea.OnAmqpEvent)
      parameters:
        - id: event
          type:
            - ConnectionEvents
          description: ''
        - id: handler
          type:
            - rhea.OnAmqpEvent
          description: ''
    package: azure-event-hubs
  - uid: azure-event-hubs.Connection.removeHandler
    name: removeHandler
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeHandler(event: ConnectionEvents, handler:
        rhea.OnAmqpEvent)
      parameters:
        - id: event
          type:
            - ConnectionEvents
          description: ''
        - id: handler
          type:
            - rhea.OnAmqpEvent
          description: ''
    package: azure-event-hubs
  - uid: azure-event-hubs.Connection.wasCloseInitiated
    name: wasCloseInitiated
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Determines whether the close from the peer is a response to a locally
      initiated close request

      for the connection.
    syntax:
      content: function wasCloseInitiated()
      parameters: []
      return:
        type:
          - boolean
    package: azure-event-hubs
references:
  - uid: azure-event-hubs.ReceiverOptionsWithSession
    name: ReceiverOptionsWithSession
    spec.typeScript:
      - name: ReceiverOptionsWithSession
        fullName: ReceiverOptionsWithSession
        uid: azure-event-hubs.ReceiverOptionsWithSession
  - uid: Promise<azure-event-hubs.Receiver>
    name: Receiver>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Receiver
        fullName: Receiver
        uid: azure-event-hubs.Receiver
      - name: '>'
        fullName: '>'
  - uid: azure-event-hubs.SenderOptions
    name: SenderOptions
    spec.typeScript:
      - name: SenderOptions
        fullName: SenderOptions
        uid: azure-event-hubs.SenderOptions
  - uid: azure-event-hubs.ReceiverOptions
    name: ReceiverOptions
    spec.typeScript:
      - name: ReceiverOptions
        fullName: ReceiverOptions
        uid: azure-event-hubs.ReceiverOptions
  - uid: azure-event-hubs.Session
    name: Session
    spec.typeScript:
      - name: Session
        fullName: Session
        uid: azure-event-hubs.Session
  - uid: Promise<azure-event-hubs.ReqResLink>
    name: ReqResLink>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReqResLink
        fullName: ReqResLink
        uid: azure-event-hubs.ReqResLink
      - name: '>'
        fullName: '>'
  - uid: azure-event-hubs.SenderOptionsWithSession
    name: SenderOptionsWithSession
    spec.typeScript:
      - name: SenderOptionsWithSession
        fullName: SenderOptionsWithSession
        uid: azure-event-hubs.SenderOptionsWithSession
  - uid: Promise<azure-event-hubs.Sender>
    name: Sender>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Sender
        fullName: Sender
        uid: azure-event-hubs.Sender
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-event-hubs.Session>
    name: Session>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Session
        fullName: Session
        uid: azure-event-hubs.Session
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-event-hubs.Connection>
    name: Connection>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Connection
        fullName: Connection
        uid: azure-event-hubs.Connection
      - name: '>'
        fullName: '>'
