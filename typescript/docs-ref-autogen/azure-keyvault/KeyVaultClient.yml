### YamlMime:UniversalReference
items:
  - uid: azure-keyvault.KeyVaultClient
    name: KeyVaultClient
    fullName: KeyVaultClient
    children:
      - azure-keyvault.KeyVaultClient.acceptLanguage
      - azure-keyvault.KeyVaultClient.apiVersion
      - azure-keyvault.KeyVaultClient.backupCertificate
      - azure-keyvault.KeyVaultClient.backupCertificate_2
      - azure-keyvault.KeyVaultClient.backupCertificate_1
      - azure-keyvault.KeyVaultClient.backupCertificateWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.backupKey
      - azure-keyvault.KeyVaultClient.backupKey_2
      - azure-keyvault.KeyVaultClient.backupKey_1
      - azure-keyvault.KeyVaultClient.backupKeyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.backupSecret
      - azure-keyvault.KeyVaultClient.backupSecret_2
      - azure-keyvault.KeyVaultClient.backupSecret_1
      - azure-keyvault.KeyVaultClient.backupSecretWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.backupStorageAccount
      - azure-keyvault.KeyVaultClient.backupStorageAccount_2
      - azure-keyvault.KeyVaultClient.backupStorageAccount_1
      - >-
        azure-keyvault.KeyVaultClient.backupStorageAccountWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.createCertificate
      - azure-keyvault.KeyVaultClient.createCertificate_2
      - azure-keyvault.KeyVaultClient.createCertificate_1
      - azure-keyvault.KeyVaultClient.createCertificateWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.createKey
      - azure-keyvault.KeyVaultClient.createKey_2
      - azure-keyvault.KeyVaultClient.createKey_1
      - azure-keyvault.KeyVaultClient.createKeyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.credentials
      - azure-keyvault.KeyVaultClient.decrypt
      - azure-keyvault.KeyVaultClient.decrypt_2
      - azure-keyvault.KeyVaultClient.decrypt_1
      - azure-keyvault.KeyVaultClient.decryptWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.deleteCertificate
      - azure-keyvault.KeyVaultClient.deleteCertificate_2
      - azure-keyvault.KeyVaultClient.deleteCertificate_1
      - azure-keyvault.KeyVaultClient.deleteCertificateContacts
      - azure-keyvault.KeyVaultClient.deleteCertificateContacts_2
      - azure-keyvault.KeyVaultClient.deleteCertificateContacts_1
      - >-
        azure-keyvault.KeyVaultClient.deleteCertificateContactsWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.deleteCertificateIssuer
      - azure-keyvault.KeyVaultClient.deleteCertificateIssuer_2
      - azure-keyvault.KeyVaultClient.deleteCertificateIssuer_1
      - >-
        azure-keyvault.KeyVaultClient.deleteCertificateIssuerWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.deleteCertificateOperation
      - azure-keyvault.KeyVaultClient.deleteCertificateOperation_2
      - azure-keyvault.KeyVaultClient.deleteCertificateOperation_1
      - >-
        azure-keyvault.KeyVaultClient.deleteCertificateOperationWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.deleteCertificateWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.deleteKey
      - azure-keyvault.KeyVaultClient.deleteKey_2
      - azure-keyvault.KeyVaultClient.deleteKey_1
      - azure-keyvault.KeyVaultClient.deleteKeyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.deleteSasDefinition
      - azure-keyvault.KeyVaultClient.deleteSasDefinition_2
      - azure-keyvault.KeyVaultClient.deleteSasDefinition_1
      - >-
        azure-keyvault.KeyVaultClient.deleteSasDefinitionWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.deleteSecret
      - azure-keyvault.KeyVaultClient.deleteSecret_2
      - azure-keyvault.KeyVaultClient.deleteSecret_1
      - azure-keyvault.KeyVaultClient.deleteSecretWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.deleteStorageAccount
      - azure-keyvault.KeyVaultClient.deleteStorageAccount_2
      - azure-keyvault.KeyVaultClient.deleteStorageAccount_1
      - >-
        azure-keyvault.KeyVaultClient.deleteStorageAccountWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.encrypt
      - azure-keyvault.KeyVaultClient.encrypt_2
      - azure-keyvault.KeyVaultClient.encrypt_1
      - azure-keyvault.KeyVaultClient.encryptWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.generateClientRequestId
      - azure-keyvault.KeyVaultClient.getCertificate
      - azure-keyvault.KeyVaultClient.getCertificate_2
      - azure-keyvault.KeyVaultClient.getCertificate_1
      - azure-keyvault.KeyVaultClient.getCertificateContacts
      - azure-keyvault.KeyVaultClient.getCertificateContacts_2
      - azure-keyvault.KeyVaultClient.getCertificateContacts_1
      - >-
        azure-keyvault.KeyVaultClient.getCertificateContactsWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getCertificateIssuer
      - azure-keyvault.KeyVaultClient.getCertificateIssuer_2
      - azure-keyvault.KeyVaultClient.getCertificateIssuer_1
      - azure-keyvault.KeyVaultClient.getCertificateIssuers
      - azure-keyvault.KeyVaultClient.getCertificateIssuers_2
      - azure-keyvault.KeyVaultClient.getCertificateIssuers_1
      - azure-keyvault.KeyVaultClient.getCertificateIssuersNext
      - azure-keyvault.KeyVaultClient.getCertificateIssuersNext_2
      - azure-keyvault.KeyVaultClient.getCertificateIssuersNext_1
      - >-
        azure-keyvault.KeyVaultClient.getCertificateIssuersNextWithHttpOperationResponse
      - >-
        azure-keyvault.KeyVaultClient.getCertificateIssuersWithHttpOperationResponse
      - >-
        azure-keyvault.KeyVaultClient.getCertificateIssuerWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getCertificateOperation
      - azure-keyvault.KeyVaultClient.getCertificateOperation_2
      - azure-keyvault.KeyVaultClient.getCertificateOperation_1
      - >-
        azure-keyvault.KeyVaultClient.getCertificateOperationWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getCertificatePolicy
      - azure-keyvault.KeyVaultClient.getCertificatePolicy_2
      - azure-keyvault.KeyVaultClient.getCertificatePolicy_1
      - >-
        azure-keyvault.KeyVaultClient.getCertificatePolicyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getCertificates
      - azure-keyvault.KeyVaultClient.getCertificates_2
      - azure-keyvault.KeyVaultClient.getCertificates_1
      - azure-keyvault.KeyVaultClient.getCertificatesNext
      - azure-keyvault.KeyVaultClient.getCertificatesNext_2
      - azure-keyvault.KeyVaultClient.getCertificatesNext_1
      - >-
        azure-keyvault.KeyVaultClient.getCertificatesNextWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getCertificatesWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getCertificateVersions
      - azure-keyvault.KeyVaultClient.getCertificateVersions_2
      - azure-keyvault.KeyVaultClient.getCertificateVersions_1
      - azure-keyvault.KeyVaultClient.getCertificateVersionsNext
      - azure-keyvault.KeyVaultClient.getCertificateVersionsNext_2
      - azure-keyvault.KeyVaultClient.getCertificateVersionsNext_1
      - >-
        azure-keyvault.KeyVaultClient.getCertificateVersionsNextWithHttpOperationResponse
      - >-
        azure-keyvault.KeyVaultClient.getCertificateVersionsWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getCertificateWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getDeletedCertificate
      - azure-keyvault.KeyVaultClient.getDeletedCertificate_2
      - azure-keyvault.KeyVaultClient.getDeletedCertificate_1
      - azure-keyvault.KeyVaultClient.getDeletedCertificates
      - azure-keyvault.KeyVaultClient.getDeletedCertificates_2
      - azure-keyvault.KeyVaultClient.getDeletedCertificates_1
      - azure-keyvault.KeyVaultClient.getDeletedCertificatesNext
      - azure-keyvault.KeyVaultClient.getDeletedCertificatesNext_2
      - azure-keyvault.KeyVaultClient.getDeletedCertificatesNext_1
      - >-
        azure-keyvault.KeyVaultClient.getDeletedCertificatesNextWithHttpOperationResponse
      - >-
        azure-keyvault.KeyVaultClient.getDeletedCertificatesWithHttpOperationResponse
      - >-
        azure-keyvault.KeyVaultClient.getDeletedCertificateWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getDeletedKey
      - azure-keyvault.KeyVaultClient.getDeletedKey_2
      - azure-keyvault.KeyVaultClient.getDeletedKey_1
      - azure-keyvault.KeyVaultClient.getDeletedKeys
      - azure-keyvault.KeyVaultClient.getDeletedKeys_2
      - azure-keyvault.KeyVaultClient.getDeletedKeys_1
      - azure-keyvault.KeyVaultClient.getDeletedKeysNext
      - azure-keyvault.KeyVaultClient.getDeletedKeysNext_2
      - azure-keyvault.KeyVaultClient.getDeletedKeysNext_1
      - >-
        azure-keyvault.KeyVaultClient.getDeletedKeysNextWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getDeletedKeysWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getDeletedKeyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getDeletedSasDefinition
      - azure-keyvault.KeyVaultClient.getDeletedSasDefinition_2
      - azure-keyvault.KeyVaultClient.getDeletedSasDefinition_1
      - azure-keyvault.KeyVaultClient.getDeletedSasDefinitions
      - azure-keyvault.KeyVaultClient.getDeletedSasDefinitions_2
      - azure-keyvault.KeyVaultClient.getDeletedSasDefinitions_1
      - azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNext
      - azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNext_2
      - azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNext_1
      - >-
        azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNextWithHttpOperationResponse
      - >-
        azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsWithHttpOperationResponse
      - >-
        azure-keyvault.KeyVaultClient.getDeletedSasDefinitionWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getDeletedSecret
      - azure-keyvault.KeyVaultClient.getDeletedSecret_2
      - azure-keyvault.KeyVaultClient.getDeletedSecret_1
      - azure-keyvault.KeyVaultClient.getDeletedSecrets
      - azure-keyvault.KeyVaultClient.getDeletedSecrets_2
      - azure-keyvault.KeyVaultClient.getDeletedSecrets_1
      - azure-keyvault.KeyVaultClient.getDeletedSecretsNext
      - azure-keyvault.KeyVaultClient.getDeletedSecretsNext_2
      - azure-keyvault.KeyVaultClient.getDeletedSecretsNext_1
      - >-
        azure-keyvault.KeyVaultClient.getDeletedSecretsNextWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getDeletedSecretsWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getDeletedSecretWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getDeletedStorageAccount
      - azure-keyvault.KeyVaultClient.getDeletedStorageAccount_2
      - azure-keyvault.KeyVaultClient.getDeletedStorageAccount_1
      - azure-keyvault.KeyVaultClient.getDeletedStorageAccounts
      - azure-keyvault.KeyVaultClient.getDeletedStorageAccounts_2
      - azure-keyvault.KeyVaultClient.getDeletedStorageAccounts_1
      - azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNext
      - azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNext_2
      - azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNext_1
      - >-
        azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNextWithHttpOperationResponse
      - >-
        azure-keyvault.KeyVaultClient.getDeletedStorageAccountsWithHttpOperationResponse
      - >-
        azure-keyvault.KeyVaultClient.getDeletedStorageAccountWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getKey
      - azure-keyvault.KeyVaultClient.getKey_2
      - azure-keyvault.KeyVaultClient.getKey_1
      - azure-keyvault.KeyVaultClient.getKeys
      - azure-keyvault.KeyVaultClient.getKeys_2
      - azure-keyvault.KeyVaultClient.getKeys_1
      - azure-keyvault.KeyVaultClient.getKeysNext
      - azure-keyvault.KeyVaultClient.getKeysNext_2
      - azure-keyvault.KeyVaultClient.getKeysNext_1
      - azure-keyvault.KeyVaultClient.getKeysNextWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getKeysWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getKeyVersions
      - azure-keyvault.KeyVaultClient.getKeyVersions_2
      - azure-keyvault.KeyVaultClient.getKeyVersions_1
      - azure-keyvault.KeyVaultClient.getKeyVersionsNext
      - azure-keyvault.KeyVaultClient.getKeyVersionsNext_2
      - azure-keyvault.KeyVaultClient.getKeyVersionsNext_1
      - >-
        azure-keyvault.KeyVaultClient.getKeyVersionsNextWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getKeyVersionsWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getKeyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getSasDefinition
      - azure-keyvault.KeyVaultClient.getSasDefinition_2
      - azure-keyvault.KeyVaultClient.getSasDefinition_1
      - azure-keyvault.KeyVaultClient.getSasDefinitions
      - azure-keyvault.KeyVaultClient.getSasDefinitions_2
      - azure-keyvault.KeyVaultClient.getSasDefinitions_1
      - azure-keyvault.KeyVaultClient.getSasDefinitionsNext
      - azure-keyvault.KeyVaultClient.getSasDefinitionsNext_2
      - azure-keyvault.KeyVaultClient.getSasDefinitionsNext_1
      - >-
        azure-keyvault.KeyVaultClient.getSasDefinitionsNextWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getSasDefinitionsWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getSasDefinitionWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getSecret
      - azure-keyvault.KeyVaultClient.getSecret_2
      - azure-keyvault.KeyVaultClient.getSecret_1
      - azure-keyvault.KeyVaultClient.getSecrets
      - azure-keyvault.KeyVaultClient.getSecrets_2
      - azure-keyvault.KeyVaultClient.getSecrets_1
      - azure-keyvault.KeyVaultClient.getSecretsNext
      - azure-keyvault.KeyVaultClient.getSecretsNext_2
      - azure-keyvault.KeyVaultClient.getSecretsNext_1
      - azure-keyvault.KeyVaultClient.getSecretsNextWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getSecretsWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getSecretVersions
      - azure-keyvault.KeyVaultClient.getSecretVersions_2
      - azure-keyvault.KeyVaultClient.getSecretVersions_1
      - azure-keyvault.KeyVaultClient.getSecretVersionsNext
      - azure-keyvault.KeyVaultClient.getSecretVersionsNext_2
      - azure-keyvault.KeyVaultClient.getSecretVersionsNext_1
      - >-
        azure-keyvault.KeyVaultClient.getSecretVersionsNextWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getSecretVersionsWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getSecretWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getStorageAccount
      - azure-keyvault.KeyVaultClient.getStorageAccount_2
      - azure-keyvault.KeyVaultClient.getStorageAccount_1
      - azure-keyvault.KeyVaultClient.getStorageAccounts
      - azure-keyvault.KeyVaultClient.getStorageAccounts_2
      - azure-keyvault.KeyVaultClient.getStorageAccounts_1
      - azure-keyvault.KeyVaultClient.getStorageAccountsNext
      - azure-keyvault.KeyVaultClient.getStorageAccountsNext_2
      - azure-keyvault.KeyVaultClient.getStorageAccountsNext_1
      - >-
        azure-keyvault.KeyVaultClient.getStorageAccountsNextWithHttpOperationResponse
      - >-
        azure-keyvault.KeyVaultClient.getStorageAccountsWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.getStorageAccountWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.importCertificate
      - azure-keyvault.KeyVaultClient.importCertificate_2
      - azure-keyvault.KeyVaultClient.importCertificate_1
      - azure-keyvault.KeyVaultClient.importCertificateWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.importKey
      - azure-keyvault.KeyVaultClient.importKey_2
      - azure-keyvault.KeyVaultClient.importKey_1
      - azure-keyvault.KeyVaultClient.importKeyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.constructor
      - azure-keyvault.KeyVaultClient.longRunningOperationRetryTimeout
      - azure-keyvault.KeyVaultClient.mergeCertificate
      - azure-keyvault.KeyVaultClient.mergeCertificate_2
      - azure-keyvault.KeyVaultClient.mergeCertificate_1
      - azure-keyvault.KeyVaultClient.mergeCertificateWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.purgeDeletedCertificate
      - azure-keyvault.KeyVaultClient.purgeDeletedCertificate_2
      - azure-keyvault.KeyVaultClient.purgeDeletedCertificate_1
      - >-
        azure-keyvault.KeyVaultClient.purgeDeletedCertificateWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.purgeDeletedKey
      - azure-keyvault.KeyVaultClient.purgeDeletedKey_2
      - azure-keyvault.KeyVaultClient.purgeDeletedKey_1
      - azure-keyvault.KeyVaultClient.purgeDeletedKeyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.purgeDeletedSecret
      - azure-keyvault.KeyVaultClient.purgeDeletedSecret_2
      - azure-keyvault.KeyVaultClient.purgeDeletedSecret_1
      - >-
        azure-keyvault.KeyVaultClient.purgeDeletedSecretWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.purgeDeletedStorageAccount
      - azure-keyvault.KeyVaultClient.purgeDeletedStorageAccount_2
      - azure-keyvault.KeyVaultClient.purgeDeletedStorageAccount_1
      - >-
        azure-keyvault.KeyVaultClient.purgeDeletedStorageAccountWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.recoverDeletedCertificate
      - azure-keyvault.KeyVaultClient.recoverDeletedCertificate_2
      - azure-keyvault.KeyVaultClient.recoverDeletedCertificate_1
      - >-
        azure-keyvault.KeyVaultClient.recoverDeletedCertificateWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.recoverDeletedKey
      - azure-keyvault.KeyVaultClient.recoverDeletedKey_2
      - azure-keyvault.KeyVaultClient.recoverDeletedKey_1
      - azure-keyvault.KeyVaultClient.recoverDeletedKeyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.recoverDeletedSasDefinition
      - azure-keyvault.KeyVaultClient.recoverDeletedSasDefinition_2
      - azure-keyvault.KeyVaultClient.recoverDeletedSasDefinition_1
      - >-
        azure-keyvault.KeyVaultClient.recoverDeletedSasDefinitionWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.recoverDeletedSecret
      - azure-keyvault.KeyVaultClient.recoverDeletedSecret_2
      - azure-keyvault.KeyVaultClient.recoverDeletedSecret_1
      - >-
        azure-keyvault.KeyVaultClient.recoverDeletedSecretWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.recoverDeletedStorageAccount
      - azure-keyvault.KeyVaultClient.recoverDeletedStorageAccount_2
      - azure-keyvault.KeyVaultClient.recoverDeletedStorageAccount_1
      - >-
        azure-keyvault.KeyVaultClient.recoverDeletedStorageAccountWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.regenerateStorageAccountKey
      - azure-keyvault.KeyVaultClient.regenerateStorageAccountKey_2
      - azure-keyvault.KeyVaultClient.regenerateStorageAccountKey_1
      - >-
        azure-keyvault.KeyVaultClient.regenerateStorageAccountKeyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.restoreCertificate
      - azure-keyvault.KeyVaultClient.restoreCertificate_2
      - azure-keyvault.KeyVaultClient.restoreCertificate_1
      - >-
        azure-keyvault.KeyVaultClient.restoreCertificateWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.restoreKey
      - azure-keyvault.KeyVaultClient.restoreKey_2
      - azure-keyvault.KeyVaultClient.restoreKey_1
      - azure-keyvault.KeyVaultClient.restoreKeyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.restoreSecret
      - azure-keyvault.KeyVaultClient.restoreSecret_2
      - azure-keyvault.KeyVaultClient.restoreSecret_1
      - azure-keyvault.KeyVaultClient.restoreSecretWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.restoreStorageAccount
      - azure-keyvault.KeyVaultClient.restoreStorageAccount_2
      - azure-keyvault.KeyVaultClient.restoreStorageAccount_1
      - >-
        azure-keyvault.KeyVaultClient.restoreStorageAccountWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.setCertificateContacts
      - azure-keyvault.KeyVaultClient.setCertificateContacts_2
      - azure-keyvault.KeyVaultClient.setCertificateContacts_1
      - >-
        azure-keyvault.KeyVaultClient.setCertificateContactsWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.setCertificateIssuer
      - azure-keyvault.KeyVaultClient.setCertificateIssuer_2
      - azure-keyvault.KeyVaultClient.setCertificateIssuer_1
      - >-
        azure-keyvault.KeyVaultClient.setCertificateIssuerWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.setSasDefinition
      - azure-keyvault.KeyVaultClient.setSasDefinition_2
      - azure-keyvault.KeyVaultClient.setSasDefinition_1
      - azure-keyvault.KeyVaultClient.setSasDefinitionWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.setSecret
      - azure-keyvault.KeyVaultClient.setSecret_2
      - azure-keyvault.KeyVaultClient.setSecret_1
      - azure-keyvault.KeyVaultClient.setSecretWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.setStorageAccount
      - azure-keyvault.KeyVaultClient.setStorageAccount_2
      - azure-keyvault.KeyVaultClient.setStorageAccount_1
      - azure-keyvault.KeyVaultClient.setStorageAccountWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.sign
      - azure-keyvault.KeyVaultClient.sign_2
      - azure-keyvault.KeyVaultClient.sign_1
      - azure-keyvault.KeyVaultClient.signWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.unwrapKey
      - azure-keyvault.KeyVaultClient.unwrapKey_2
      - azure-keyvault.KeyVaultClient.unwrapKey_1
      - azure-keyvault.KeyVaultClient.unwrapKeyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.updateCertificate
      - azure-keyvault.KeyVaultClient.updateCertificate_2
      - azure-keyvault.KeyVaultClient.updateCertificate_1
      - azure-keyvault.KeyVaultClient.updateCertificateIssuer
      - azure-keyvault.KeyVaultClient.updateCertificateIssuer_2
      - azure-keyvault.KeyVaultClient.updateCertificateIssuer_1
      - >-
        azure-keyvault.KeyVaultClient.updateCertificateIssuerWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.updateCertificateOperation
      - azure-keyvault.KeyVaultClient.updateCertificateOperation_2
      - azure-keyvault.KeyVaultClient.updateCertificateOperation_1
      - >-
        azure-keyvault.KeyVaultClient.updateCertificateOperationWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.updateCertificatePolicy
      - azure-keyvault.KeyVaultClient.updateCertificatePolicy_2
      - azure-keyvault.KeyVaultClient.updateCertificatePolicy_1
      - >-
        azure-keyvault.KeyVaultClient.updateCertificatePolicyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.updateCertificateWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.updateKey
      - azure-keyvault.KeyVaultClient.updateKey_2
      - azure-keyvault.KeyVaultClient.updateKey_1
      - azure-keyvault.KeyVaultClient.updateKeyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.updateSasDefinition
      - azure-keyvault.KeyVaultClient.updateSasDefinition_2
      - azure-keyvault.KeyVaultClient.updateSasDefinition_1
      - >-
        azure-keyvault.KeyVaultClient.updateSasDefinitionWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.updateSecret
      - azure-keyvault.KeyVaultClient.updateSecret_2
      - azure-keyvault.KeyVaultClient.updateSecret_1
      - azure-keyvault.KeyVaultClient.updateSecretWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.updateStorageAccount
      - azure-keyvault.KeyVaultClient.updateStorageAccount_2
      - azure-keyvault.KeyVaultClient.updateStorageAccount_1
      - >-
        azure-keyvault.KeyVaultClient.updateStorageAccountWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.verify
      - azure-keyvault.KeyVaultClient.verify_2
      - azure-keyvault.KeyVaultClient.verify_1
      - azure-keyvault.KeyVaultClient.verifyWithHttpOperationResponse
      - azure-keyvault.KeyVaultClient.wrapKey
      - azure-keyvault.KeyVaultClient.wrapKey_2
      - azure-keyvault.KeyVaultClient.wrapKey_1
      - azure-keyvault.KeyVaultClient.wrapKeyWithHttpOperationResponse
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: AzureServiceClient
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.acceptLanguage
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.apiVersion
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'apiVersion: string'
      return:
        type:
          - string
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupCertificate
    name: 'backupCertificate(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function backupCertificate(vaultBaseUrl: string, certificateName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.BackupCertificateResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupCertificate_2
    name: >-
      backupCertificate(string, string, Object,
      ServiceCallback<BackupCertificateResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function backupCertificate(vaultBaseUrl: string, certificateName:
        string, options: Object, callback:
        ServiceCallback<BackupCertificateResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.BackupCertificateResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.BackupCertificateResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupCertificate_1
    name: >-
      backupCertificate(string, string,
      ServiceCallback<BackupCertificateResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function backupCertificate(vaultBaseUrl: string, certificateName:
        string, callback: ServiceCallback<BackupCertificateResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.BackupCertificateResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.BackupCertificateResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupCertificateWithHttpOperationResponse
    name: 'backupCertificateWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function backupCertificateWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-keyvault.BackupCertificateResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupKey
    name: 'backupKey(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function backupKey(vaultBaseUrl: string, keyName: string, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the key.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.BackupKeyResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupKey_2
    name: 'backupKey(string, string, Object, ServiceCallback<BackupKeyResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function backupKey(vaultBaseUrl: string, keyName: string, options:
        Object, callback: ServiceCallback<BackupKeyResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.BackupKeyResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.BackupKeyResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupKey_1
    name: 'backupKey(string, string, ServiceCallback<BackupKeyResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function backupKey(vaultBaseUrl: string, keyName: string, callback:
        ServiceCallback<BackupKeyResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.BackupKeyResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.BackupKeyResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupKeyWithHttpOperationResponse
    name: 'backupKeyWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function backupKeyWithHttpOperationResponse(vaultBaseUrl: string,
        keyName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the key.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.BackupKeyResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupSecret
    name: 'backupSecret(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function backupSecret(vaultBaseUrl: string, secretName: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: |
            The name of the secret.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.BackupSecretResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupSecret_2
    name: 'backupSecret(string, string, Object, ServiceCallback<BackupSecretResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function backupSecret(vaultBaseUrl: string, secretName: string, options:
        Object, callback: ServiceCallback<BackupSecretResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.BackupSecretResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.BackupSecretResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupSecret_1
    name: 'backupSecret(string, string, ServiceCallback<BackupSecretResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function backupSecret(vaultBaseUrl: string, secretName: string,
        callback: ServiceCallback<BackupSecretResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.BackupSecretResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.BackupSecretResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupSecretWithHttpOperationResponse
    name: 'backupSecretWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function backupSecretWithHttpOperationResponse(vaultBaseUrl: string,
        secretName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: |
            The name of the secret.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.BackupSecretResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupStorageAccount
    name: 'backupStorageAccount(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function backupStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.BackupStorageResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupStorageAccount_2
    name: >-
      backupStorageAccount(string, string, Object,
      ServiceCallback<BackupStorageResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function backupStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, options: Object, callback: ServiceCallback<BackupStorageResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.BackupStorageResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.BackupStorageResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.backupStorageAccount_1
    name: 'backupStorageAccount(string, string, ServiceCallback<BackupStorageResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function backupStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, callback: ServiceCallback<BackupStorageResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.BackupStorageResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.BackupStorageResult>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.backupStorageAccountWithHttpOperationResponse
    name: 'backupStorageAccountWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function backupStorageAccountWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.BackupStorageResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.createCertificate
    name: 'createCertificate(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createCertificate(vaultBaseUrl: string, certificateName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateOperation>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.createCertificate_2
    name: >-
      createCertificate(string, string, Object,
      ServiceCallback<CertificateOperation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createCertificate(vaultBaseUrl: string, certificateName:
        string, options: Object, callback:
        ServiceCallback<CertificateOperation>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateOperation>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateOperation>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.createCertificate_1
    name: 'createCertificate(string, string, ServiceCallback<CertificateOperation>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createCertificate(vaultBaseUrl: string, certificateName:
        string, callback: ServiceCallback<CertificateOperation>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateOperation>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateOperation>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.createCertificateWithHttpOperationResponse
    name: 'createCertificateWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createCertificateWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateOperation>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.createKey
    name: 'createKey(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createKey(vaultBaseUrl: string, keyName: string, kty: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name for the new key. The system will generate
            the version name for the new key.
        - id: kty
          type:
            - string
          description: >
            The type of key to create. For valid values, see

            JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA',
            'RSA-HSM',

            'oct'
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.createKey_2
    name: 'createKey(string, string, string, Object, ServiceCallback<KeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createKey(vaultBaseUrl: string, keyName: string, kty: string,
        options: Object, callback: ServiceCallback<KeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: kty
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.createKey_1
    name: 'createKey(string, string, string, ServiceCallback<KeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createKey(vaultBaseUrl: string, keyName: string, kty: string,
        callback: ServiceCallback<KeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: kty
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.createKeyWithHttpOperationResponse
    name: 'createKeyWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createKeyWithHttpOperationResponse(vaultBaseUrl: string,
        keyName: string, kty: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name for the new key. The system will generate
            the version name for the new key.
        - id: kty
          type:
            - string
          description: >
            The type of key to create. For valid values, see

            JsonWebKeyType. Possible values include: 'EC', 'EC-HSM', 'RSA',
            'RSA-HSM',

            'oct'
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.credentials
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.decrypt
    name: 'decrypt(string, string, string, string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function decrypt(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, value: Buffer, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the key.
        - id: keyVersion
          type:
            - string
          description: |
            The version of the key.
        - id: algorithm
          type:
            - string
          description: |
            algorithm identifier. Possible values include:
            'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'
        - id: value
          type:
            - Buffer
          description: |+

        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.decrypt_2
    name: >-
      decrypt(string, string, string, string, Buffer, Object,
      ServiceCallback<KeyOperationResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function decrypt(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, value: Buffer, options: Object, callback:
        ServiceCallback<KeyOperationResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: algorithm
          type:
            - string
          description: ''
        - id: value
          type:
            - Buffer
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.decrypt_1
    name: >-
      decrypt(string, string, string, string, Buffer,
      ServiceCallback<KeyOperationResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function decrypt(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, value: Buffer, callback:
        ServiceCallback<KeyOperationResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: algorithm
          type:
            - string
          description: ''
        - id: value
          type:
            - Buffer
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.decryptWithHttpOperationResponse
    name: >-
      decryptWithHttpOperationResponse(string, string, string, string, Buffer,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function decryptWithHttpOperationResponse(vaultBaseUrl: string, keyName:
        string, keyVersion: string, algorithm: string, value: Buffer, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the key.
        - id: keyVersion
          type:
            - string
          description: |
            The version of the key.
        - id: algorithm
          type:
            - string
          description: |
            algorithm identifier. Possible values include:
            'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'
        - id: value
          type:
            - Buffer
          description: |+

        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyOperationResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificate
    name: 'deleteCertificate(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteCertificate(vaultBaseUrl: string, certificateName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedCertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificate_2
    name: >-
      deleteCertificate(string, string, Object,
      ServiceCallback<DeletedCertificateBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteCertificate(vaultBaseUrl: string, certificateName:
        string, options: Object, callback:
        ServiceCallback<DeletedCertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedCertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedCertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificate_1
    name: >-
      deleteCertificate(string, string,
      ServiceCallback<DeletedCertificateBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteCertificate(vaultBaseUrl: string, certificateName:
        string, callback: ServiceCallback<DeletedCertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedCertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedCertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificateContacts
    name: 'deleteCertificateContacts(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteCertificateContacts(vaultBaseUrl: string, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.Contacts>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificateContacts_2
    name: 'deleteCertificateContacts(string, Object, ServiceCallback<Contacts>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteCertificateContacts(vaultBaseUrl: string, options:
        Object, callback: ServiceCallback<Contacts>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.Contacts>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.Contacts>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificateContacts_1
    name: 'deleteCertificateContacts(string, ServiceCallback<Contacts>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteCertificateContacts(vaultBaseUrl: string, callback:
        ServiceCallback<Contacts>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.Contacts>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.Contacts>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.deleteCertificateContactsWithHttpOperationResponse
    name: 'deleteCertificateContactsWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        deleteCertificateContactsWithHttpOperationResponse(vaultBaseUrl: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.Contacts>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificateIssuer
    name: 'deleteCertificateIssuer(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteCertificateIssuer(vaultBaseUrl: string, issuerName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: issuerName
          type:
            - string
          description: |
            The name of the issuer.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.IssuerBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificateIssuer_2
    name: >-
      deleteCertificateIssuer(string, string, Object,
      ServiceCallback<IssuerBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteCertificateIssuer(vaultBaseUrl: string, issuerName:
        string, options: Object, callback: ServiceCallback<IssuerBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: issuerName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.IssuerBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.IssuerBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificateIssuer_1
    name: 'deleteCertificateIssuer(string, string, ServiceCallback<IssuerBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteCertificateIssuer(vaultBaseUrl: string, issuerName:
        string, callback: ServiceCallback<IssuerBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: issuerName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.IssuerBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.IssuerBundle>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.deleteCertificateIssuerWithHttpOperationResponse
    name: 'deleteCertificateIssuerWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteCertificateIssuerWithHttpOperationResponse(vaultBaseUrl:
        string, issuerName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: issuerName
          type:
            - string
          description: |
            The name of the issuer.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.IssuerBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificateOperation
    name: 'deleteCertificateOperation(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteCertificateOperation(vaultBaseUrl: string,
        certificateName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateOperation>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificateOperation_2
    name: >-
      deleteCertificateOperation(string, string, Object,
      ServiceCallback<CertificateOperation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteCertificateOperation(vaultBaseUrl: string,
        certificateName: string, options: Object, callback:
        ServiceCallback<CertificateOperation>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateOperation>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateOperation>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificateOperation_1
    name: >-
      deleteCertificateOperation(string, string,
      ServiceCallback<CertificateOperation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteCertificateOperation(vaultBaseUrl: string,
        certificateName: string, callback:
        ServiceCallback<CertificateOperation>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateOperation>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateOperation>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.deleteCertificateOperationWithHttpOperationResponse
    name: >-
      deleteCertificateOperationWithHttpOperationResponse(string, string,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        deleteCertificateOperationWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateOperation>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteCertificateWithHttpOperationResponse
    name: 'deleteCertificateWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteCertificateWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-keyvault.DeletedCertificateBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteKey
    name: 'deleteKey(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteKey(vaultBaseUrl: string, keyName: string, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the key to delete.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedKeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteKey_2
    name: 'deleteKey(string, string, Object, ServiceCallback<DeletedKeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteKey(vaultBaseUrl: string, keyName: string, options:
        Object, callback: ServiceCallback<DeletedKeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedKeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedKeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteKey_1
    name: 'deleteKey(string, string, ServiceCallback<DeletedKeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteKey(vaultBaseUrl: string, keyName: string, callback:
        ServiceCallback<DeletedKeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedKeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedKeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteKeyWithHttpOperationResponse
    name: 'deleteKeyWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteKeyWithHttpOperationResponse(vaultBaseUrl: string,
        keyName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the key to delete.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedKeyBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteSasDefinition
    name: 'deleteSasDefinition(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deletes a SAS definition from a specified storage account. This operation
      requires the storage/deletesas permission.
    syntax:
      content: >-
        function deleteSasDefinition(vaultBaseUrl: string, storageAccountName:
        string, sasDefinitionName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: sasDefinitionName
          type:
            - string
          description: |
            The name of the SAS definition.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedSasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteSasDefinition_2
    name: >-
      deleteSasDefinition(string, string, string, Object,
      ServiceCallback<DeletedSasDefinitionBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deletes a SAS definition from a specified storage account. This operation
      requires the storage/deletesas permission.
    syntax:
      content: >-
        function deleteSasDefinition(vaultBaseUrl: string, storageAccountName:
        string, sasDefinitionName: string, options: Object, callback:
        ServiceCallback<DeletedSasDefinitionBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: sasDefinitionName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSasDefinitionBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteSasDefinition_1
    name: >-
      deleteSasDefinition(string, string, string,
      ServiceCallback<DeletedSasDefinitionBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deletes a SAS definition from a specified storage account. This operation
      requires the storage/deletesas permission.
    syntax:
      content: >-
        function deleteSasDefinition(vaultBaseUrl: string, storageAccountName:
        string, sasDefinitionName: string, callback:
        ServiceCallback<DeletedSasDefinitionBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: sasDefinitionName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSasDefinitionBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteSasDefinitionWithHttpOperationResponse
    name: >-
      deleteSasDefinitionWithHttpOperationResponse(string, string, string,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deletes a SAS definition from a specified storage account. This operation
      requires the storage/deletesas permission.
    syntax:
      content: >-
        function deleteSasDefinitionWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, sasDefinitionName: string, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: sasDefinitionName
          type:
            - string
          description: |
            The name of the SAS definition.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-keyvault.DeletedSasDefinitionBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteSecret
    name: 'deleteSecret(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteSecret(vaultBaseUrl: string, secretName: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: |
            The name of the secret.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedSecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteSecret_2
    name: 'deleteSecret(string, string, Object, ServiceCallback<DeletedSecretBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteSecret(vaultBaseUrl: string, secretName: string, options:
        Object, callback: ServiceCallback<DeletedSecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteSecret_1
    name: 'deleteSecret(string, string, ServiceCallback<DeletedSecretBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteSecret(vaultBaseUrl: string, secretName: string,
        callback: ServiceCallback<DeletedSecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteSecretWithHttpOperationResponse
    name: 'deleteSecretWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteSecretWithHttpOperationResponse(vaultBaseUrl: string,
        secretName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: |
            The name of the secret.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedSecretBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteStorageAccount
    name: 'deleteStorageAccount(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deletes a storage account. This operation requires the storage/delete
      permission.
    syntax:
      content: >-
        function deleteStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedStorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteStorageAccount_2
    name: >-
      deleteStorageAccount(string, string, Object,
      ServiceCallback<DeletedStorageBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deletes a storage account. This operation requires the storage/delete
      permission.
    syntax:
      content: >-
        function deleteStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, options: Object, callback:
        ServiceCallback<DeletedStorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedStorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedStorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.deleteStorageAccount_1
    name: >-
      deleteStorageAccount(string, string,
      ServiceCallback<DeletedStorageBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deletes a storage account. This operation requires the storage/delete
      permission.
    syntax:
      content: >-
        function deleteStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, callback: ServiceCallback<DeletedStorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedStorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedStorageBundle>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.deleteStorageAccountWithHttpOperationResponse
    name: 'deleteStorageAccountWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Deletes a storage account. This operation requires the storage/delete
      permission.
    syntax:
      content: >-
        function deleteStorageAccountWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedStorageBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.encrypt
    name: 'encrypt(string, string, string, string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function encrypt(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, value: Buffer, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the key.
        - id: keyVersion
          type:
            - string
          description: |
            The version of the key.
        - id: algorithm
          type:
            - string
          description: |
            algorithm identifier. Possible values include:
            'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'
        - id: value
          type:
            - Buffer
          description: |+

        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.encrypt_2
    name: >-
      encrypt(string, string, string, string, Buffer, Object,
      ServiceCallback<KeyOperationResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function encrypt(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, value: Buffer, options: Object, callback:
        ServiceCallback<KeyOperationResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: algorithm
          type:
            - string
          description: ''
        - id: value
          type:
            - Buffer
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.encrypt_1
    name: >-
      encrypt(string, string, string, string, Buffer,
      ServiceCallback<KeyOperationResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function encrypt(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, value: Buffer, callback:
        ServiceCallback<KeyOperationResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: algorithm
          type:
            - string
          description: ''
        - id: value
          type:
            - Buffer
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.encryptWithHttpOperationResponse
    name: >-
      encryptWithHttpOperationResponse(string, string, string, string, Buffer,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function encryptWithHttpOperationResponse(vaultBaseUrl: string, keyName:
        string, keyVersion: string, algorithm: string, value: Buffer, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the key.
        - id: keyVersion
          type:
            - string
          description: |
            The version of the key.
        - id: algorithm
          type:
            - string
          description: |
            algorithm identifier. Possible values include:
            'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'
        - id: value
          type:
            - Buffer
          description: |+

        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyOperationResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.generateClientRequestId
    name: generateClientRequestId
    fullName: generateClientRequestId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'generateClientRequestId: boolean'
      return:
        type:
          - boolean
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificate
    name: 'getCertificate(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificate(vaultBaseUrl: string, certificateName: string,
        certificateVersion: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate in the given
            vault.
        - id: certificateVersion
          type:
            - string
          description: |
            The version of the certificate.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificate_2
    name: >-
      getCertificate(string, string, string, Object,
      ServiceCallback<CertificateBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificate(vaultBaseUrl: string, certificateName: string,
        certificateVersion: string, options: Object, callback:
        ServiceCallback<CertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: certificateVersion
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificate_1
    name: 'getCertificate(string, string, string, ServiceCallback<CertificateBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificate(vaultBaseUrl: string, certificateName: string,
        certificateVersion: string, callback:
        ServiceCallback<CertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: certificateVersion
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateContacts
    name: 'getCertificateContacts(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateContacts(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.Contacts>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateContacts_2
    name: 'getCertificateContacts(string, Object, ServiceCallback<Contacts>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificateContacts(vaultBaseUrl: string, options: Object,
        callback: ServiceCallback<Contacts>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.Contacts>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.Contacts>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateContacts_1
    name: 'getCertificateContacts(string, ServiceCallback<Contacts>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificateContacts(vaultBaseUrl: string, callback:
        ServiceCallback<Contacts>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.Contacts>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.Contacts>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.getCertificateContactsWithHttpOperationResponse
    name: 'getCertificateContactsWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificateContactsWithHttpOperationResponse(vaultBaseUrl:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.Contacts>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateIssuer
    name: 'getCertificateIssuer(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificateIssuer(vaultBaseUrl: string, issuerName: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: issuerName
          type:
            - string
          description: |
            The name of the issuer.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.IssuerBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateIssuer_2
    name: >-
      getCertificateIssuer(string, string, Object,
      ServiceCallback<IssuerBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificateIssuer(vaultBaseUrl: string, issuerName: string,
        options: Object, callback: ServiceCallback<IssuerBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: issuerName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.IssuerBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.IssuerBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateIssuer_1
    name: 'getCertificateIssuer(string, string, ServiceCallback<IssuerBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificateIssuer(vaultBaseUrl: string, issuerName: string,
        callback: ServiceCallback<IssuerBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: issuerName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.IssuerBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.IssuerBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateIssuers
    name: 'getCertificateIssuers(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificateIssuers(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateIssuerListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateIssuers_2
    name: >-
      getCertificateIssuers(string, Object,
      ServiceCallback<CertificateIssuerListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificateIssuers(vaultBaseUrl: string, options: Object,
        callback: ServiceCallback<CertificateIssuerListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateIssuerListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateIssuerListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateIssuers_1
    name: >-
      getCertificateIssuers(string,
      ServiceCallback<CertificateIssuerListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificateIssuers(vaultBaseUrl: string, callback:
        ServiceCallback<CertificateIssuerListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateIssuerListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateIssuerListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateIssuersNext
    name: 'getCertificateIssuersNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificateIssuersNext(nextPageLink: string, options?:
        Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateIssuerListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateIssuersNext_2
    name: >-
      getCertificateIssuersNext(string, Object,
      ServiceCallback<CertificateIssuerListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificateIssuersNext(nextPageLink: string, options:
        Object, callback: ServiceCallback<CertificateIssuerListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateIssuerListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateIssuerListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateIssuersNext_1
    name: >-
      getCertificateIssuersNext(string,
      ServiceCallback<CertificateIssuerListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificateIssuersNext(nextPageLink: string, callback:
        ServiceCallback<CertificateIssuerListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateIssuerListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateIssuerListResult>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.getCertificateIssuersNextWithHttpOperationResponse
    name: 'getCertificateIssuersNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        getCertificateIssuersNextWithHttpOperationResponse(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-keyvault.CertificateIssuerListResult>>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.getCertificateIssuersWithHttpOperationResponse
    name: 'getCertificateIssuersWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificateIssuersWithHttpOperationResponse(vaultBaseUrl:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-keyvault.CertificateIssuerListResult>>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.getCertificateIssuerWithHttpOperationResponse
    name: 'getCertificateIssuerWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificateIssuerWithHttpOperationResponse(vaultBaseUrl:
        string, issuerName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: issuerName
          type:
            - string
          description: |
            The name of the issuer.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.IssuerBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateOperation
    name: 'getCertificateOperation(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificateOperation(vaultBaseUrl: string, certificateName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateOperation>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateOperation_2
    name: >-
      getCertificateOperation(string, string, Object,
      ServiceCallback<CertificateOperation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificateOperation(vaultBaseUrl: string, certificateName:
        string, options: Object, callback:
        ServiceCallback<CertificateOperation>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateOperation>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateOperation>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateOperation_1
    name: >-
      getCertificateOperation(string, string,
      ServiceCallback<CertificateOperation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificateOperation(vaultBaseUrl: string, certificateName:
        string, callback: ServiceCallback<CertificateOperation>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateOperation>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateOperation>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.getCertificateOperationWithHttpOperationResponse
    name: 'getCertificateOperationWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificateOperationWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateOperation>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificatePolicy
    name: 'getCertificatePolicy(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificatePolicy(vaultBaseUrl: string, certificateName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate in a given key
            vault.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificatePolicy>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificatePolicy_2
    name: >-
      getCertificatePolicy(string, string, Object,
      ServiceCallback<CertificatePolicy>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificatePolicy(vaultBaseUrl: string, certificateName:
        string, options: Object, callback: ServiceCallback<CertificatePolicy>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificatePolicy>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificatePolicy>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificatePolicy_1
    name: 'getCertificatePolicy(string, string, ServiceCallback<CertificatePolicy>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificatePolicy(vaultBaseUrl: string, certificateName:
        string, callback: ServiceCallback<CertificatePolicy>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificatePolicy>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificatePolicy>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.getCertificatePolicyWithHttpOperationResponse
    name: 'getCertificatePolicyWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificatePolicyWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate in a given key
            vault.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificatePolicy>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificates
    name: 'getCertificates(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificates(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificates_2
    name: 'getCertificates(string, Object, ServiceCallback<CertificateListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificates(vaultBaseUrl: string, options: Object,
        callback: ServiceCallback<CertificateListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificates_1
    name: 'getCertificates(string, ServiceCallback<CertificateListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificates(vaultBaseUrl: string, callback:
        ServiceCallback<CertificateListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificatesNext
    name: 'getCertificatesNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getCertificatesNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificatesNext_2
    name: >-
      getCertificatesNext(string, Object,
      ServiceCallback<CertificateListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificatesNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<CertificateListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificatesNext_1
    name: 'getCertificatesNext(string, ServiceCallback<CertificateListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificatesNext(nextPageLink: string, callback:
        ServiceCallback<CertificateListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificatesNextWithHttpOperationResponse
    name: 'getCertificatesNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificatesNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificatesWithHttpOperationResponse
    name: 'getCertificatesWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificatesWithHttpOperationResponse(vaultBaseUrl: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateVersions
    name: 'getCertificateVersions(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificateVersions(vaultBaseUrl: string, certificateName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateVersions_2
    name: >-
      getCertificateVersions(string, string, Object,
      ServiceCallback<CertificateListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificateVersions(vaultBaseUrl: string, certificateName:
        string, options: Object, callback:
        ServiceCallback<CertificateListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateVersions_1
    name: >-
      getCertificateVersions(string, string,
      ServiceCallback<CertificateListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificateVersions(vaultBaseUrl: string, certificateName:
        string, callback: ServiceCallback<CertificateListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateVersionsNext
    name: 'getCertificateVersionsNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificateVersionsNext(nextPageLink: string, options?:
        Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateVersionsNext_2
    name: >-
      getCertificateVersionsNext(string, Object,
      ServiceCallback<CertificateListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificateVersionsNext(nextPageLink: string, options:
        Object, callback: ServiceCallback<CertificateListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateVersionsNext_1
    name: 'getCertificateVersionsNext(string, ServiceCallback<CertificateListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificateVersionsNext(nextPageLink: string, callback:
        ServiceCallback<CertificateListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateListResult>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.getCertificateVersionsNextWithHttpOperationResponse
    name: 'getCertificateVersionsNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        getCertificateVersionsNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateListResult>>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.getCertificateVersionsWithHttpOperationResponse
    name: 'getCertificateVersionsWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificateVersionsWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getCertificateWithHttpOperationResponse
    name: 'getCertificateWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getCertificateWithHttpOperationResponse(vaultBaseUrl: string,
        certificateName: string, certificateVersion: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate in the given
            vault.
        - id: certificateVersion
          type:
            - string
          description: |
            The version of the certificate.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedCertificate
    name: 'getDeletedCertificate(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedCertificate(vaultBaseUrl: string, certificateName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedCertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedCertificate_2
    name: >-
      getDeletedCertificate(string, string, Object,
      ServiceCallback<DeletedCertificateBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedCertificate(vaultBaseUrl: string, certificateName:
        string, options: Object, callback:
        ServiceCallback<DeletedCertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedCertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedCertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedCertificate_1
    name: >-
      getDeletedCertificate(string, string,
      ServiceCallback<DeletedCertificateBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedCertificate(vaultBaseUrl: string, certificateName:
        string, callback: ServiceCallback<DeletedCertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedCertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedCertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedCertificates
    name: 'getDeletedCertificates(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedCertificates(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedCertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedCertificates_2
    name: >-
      getDeletedCertificates(string, Object,
      ServiceCallback<DeletedCertificateListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedCertificates(vaultBaseUrl: string, options: Object,
        callback: ServiceCallback<DeletedCertificateListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedCertificateListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedCertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedCertificates_1
    name: >-
      getDeletedCertificates(string,
      ServiceCallback<DeletedCertificateListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedCertificates(vaultBaseUrl: string, callback:
        ServiceCallback<DeletedCertificateListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedCertificateListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedCertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedCertificatesNext
    name: 'getDeletedCertificatesNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedCertificatesNext(nextPageLink: string, options?:
        Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedCertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedCertificatesNext_2
    name: >-
      getDeletedCertificatesNext(string, Object,
      ServiceCallback<DeletedCertificateListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedCertificatesNext(nextPageLink: string, options:
        Object, callback: ServiceCallback<DeletedCertificateListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedCertificateListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedCertificateListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedCertificatesNext_1
    name: >-
      getDeletedCertificatesNext(string,
      ServiceCallback<DeletedCertificateListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedCertificatesNext(nextPageLink: string, callback:
        ServiceCallback<DeletedCertificateListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedCertificateListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedCertificateListResult>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.getDeletedCertificatesNextWithHttpOperationResponse
    name: 'getDeletedCertificatesNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        getDeletedCertificatesNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-keyvault.DeletedCertificateListResult>>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.getDeletedCertificatesWithHttpOperationResponse
    name: 'getDeletedCertificatesWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedCertificatesWithHttpOperationResponse(vaultBaseUrl:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-keyvault.DeletedCertificateListResult>>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.getDeletedCertificateWithHttpOperationResponse
    name: 'getDeletedCertificateWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedCertificateWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-keyvault.DeletedCertificateBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedKey
    name: 'getDeletedKey(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedKey(vaultBaseUrl: string, keyName: string, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the key.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedKeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedKey_2
    name: 'getDeletedKey(string, string, Object, ServiceCallback<DeletedKeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedKey(vaultBaseUrl: string, keyName: string, options:
        Object, callback: ServiceCallback<DeletedKeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedKeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedKeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedKey_1
    name: 'getDeletedKey(string, string, ServiceCallback<DeletedKeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedKey(vaultBaseUrl: string, keyName: string, callback:
        ServiceCallback<DeletedKeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedKeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedKeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedKeys
    name: 'getDeletedKeys(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedKeys(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedKeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedKeys_2
    name: 'getDeletedKeys(string, Object, ServiceCallback<DeletedKeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedKeys(vaultBaseUrl: string, options: Object, callback:
        ServiceCallback<DeletedKeyListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedKeyListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedKeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedKeys_1
    name: 'getDeletedKeys(string, ServiceCallback<DeletedKeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedKeys(vaultBaseUrl: string, callback:
        ServiceCallback<DeletedKeyListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedKeyListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedKeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedKeysNext
    name: 'getDeletedKeysNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedKeysNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedKeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedKeysNext_2
    name: 'getDeletedKeysNext(string, Object, ServiceCallback<DeletedKeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedKeysNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<DeletedKeyListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedKeyListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedKeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedKeysNext_1
    name: 'getDeletedKeysNext(string, ServiceCallback<DeletedKeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedKeysNext(nextPageLink: string, callback:
        ServiceCallback<DeletedKeyListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedKeyListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedKeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedKeysNextWithHttpOperationResponse
    name: 'getDeletedKeysNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedKeysNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedKeyListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedKeysWithHttpOperationResponse
    name: 'getDeletedKeysWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedKeysWithHttpOperationResponse(vaultBaseUrl: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedKeyListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedKeyWithHttpOperationResponse
    name: 'getDeletedKeyWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedKeyWithHttpOperationResponse(vaultBaseUrl: string,
        keyName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the key.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedKeyBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinition
    name: 'getDeletedSasDefinition(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedSasDefinition(vaultBaseUrl: string,
        storageAccountName: string, sasDefinitionName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: sasDefinitionName
          type:
            - string
          description: |
            The name of the SAS definition.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedSasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinition_2
    name: >-
      getDeletedSasDefinition(string, string, string, Object,
      ServiceCallback<DeletedSasDefinitionBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedSasDefinition(vaultBaseUrl: string,
        storageAccountName: string, sasDefinitionName: string, options: Object,
        callback: ServiceCallback<DeletedSasDefinitionBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: sasDefinitionName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSasDefinitionBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinition_1
    name: >-
      getDeletedSasDefinition(string, string, string,
      ServiceCallback<DeletedSasDefinitionBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedSasDefinition(vaultBaseUrl: string,
        storageAccountName: string, sasDefinitionName: string, callback:
        ServiceCallback<DeletedSasDefinitionBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: sasDefinitionName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSasDefinitionBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitions
    name: 'getDeletedSasDefinitions(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedSasDefinitions(vaultBaseUrl: string,
        storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedSasDefinitionListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitions_2
    name: >-
      getDeletedSasDefinitions(string, string, Object,
      ServiceCallback<DeletedSasDefinitionListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedSasDefinitions(vaultBaseUrl: string,
        storageAccountName: string, options: Object, callback:
        ServiceCallback<DeletedSasDefinitionListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSasDefinitionListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSasDefinitionListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitions_1
    name: >-
      getDeletedSasDefinitions(string, string,
      ServiceCallback<DeletedSasDefinitionListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedSasDefinitions(vaultBaseUrl: string,
        storageAccountName: string, callback:
        ServiceCallback<DeletedSasDefinitionListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSasDefinitionListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSasDefinitionListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNext
    name: 'getDeletedSasDefinitionsNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedSasDefinitionsNext(nextPageLink: string, options?:
        Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedSasDefinitionListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNext_2
    name: >-
      getDeletedSasDefinitionsNext(string, Object,
      ServiceCallback<DeletedSasDefinitionListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedSasDefinitionsNext(nextPageLink: string, options:
        Object, callback: ServiceCallback<DeletedSasDefinitionListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSasDefinitionListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSasDefinitionListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNext_1
    name: >-
      getDeletedSasDefinitionsNext(string,
      ServiceCallback<DeletedSasDefinitionListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedSasDefinitionsNext(nextPageLink: string, callback:
        ServiceCallback<DeletedSasDefinitionListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSasDefinitionListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSasDefinitionListResult>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsNextWithHttpOperationResponse
    name: 'getDeletedSasDefinitionsNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        getDeletedSasDefinitionsNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-keyvault.DeletedSasDefinitionListResult>>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.getDeletedSasDefinitionsWithHttpOperationResponse
    name: 'getDeletedSasDefinitionsWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedSasDefinitionsWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-keyvault.DeletedSasDefinitionListResult>>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.getDeletedSasDefinitionWithHttpOperationResponse
    name: >-
      getDeletedSasDefinitionWithHttpOperationResponse(string, string, string,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedSasDefinitionWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, sasDefinitionName: string, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: sasDefinitionName
          type:
            - string
          description: |
            The name of the SAS definition.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-keyvault.DeletedSasDefinitionBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSecret
    name: 'getDeletedSecret(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedSecret(vaultBaseUrl: string, secretName: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: |
            The name of the secret.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedSecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSecret_2
    name: >-
      getDeletedSecret(string, string, Object,
      ServiceCallback<DeletedSecretBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedSecret(vaultBaseUrl: string, secretName: string,
        options: Object, callback: ServiceCallback<DeletedSecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSecret_1
    name: 'getDeletedSecret(string, string, ServiceCallback<DeletedSecretBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedSecret(vaultBaseUrl: string, secretName: string,
        callback: ServiceCallback<DeletedSecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSecrets
    name: 'getDeletedSecrets(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSecrets(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedSecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSecrets_2
    name: >-
      getDeletedSecrets(string, Object,
      ServiceCallback<DeletedSecretListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedSecrets(vaultBaseUrl: string, options: Object,
        callback: ServiceCallback<DeletedSecretListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSecretListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSecrets_1
    name: 'getDeletedSecrets(string, ServiceCallback<DeletedSecretListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedSecrets(vaultBaseUrl: string, callback:
        ServiceCallback<DeletedSecretListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSecretListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSecretsNext
    name: 'getDeletedSecretsNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getDeletedSecretsNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedSecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSecretsNext_2
    name: >-
      getDeletedSecretsNext(string, Object,
      ServiceCallback<DeletedSecretListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedSecretsNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<DeletedSecretListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSecretListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSecretsNext_1
    name: 'getDeletedSecretsNext(string, ServiceCallback<DeletedSecretListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedSecretsNext(nextPageLink: string, callback:
        ServiceCallback<DeletedSecretListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedSecretListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedSecretListResult>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.getDeletedSecretsNextWithHttpOperationResponse
    name: 'getDeletedSecretsNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedSecretsNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-keyvault.DeletedSecretListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSecretsWithHttpOperationResponse
    name: 'getDeletedSecretsWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedSecretsWithHttpOperationResponse(vaultBaseUrl:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-keyvault.DeletedSecretListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedSecretWithHttpOperationResponse
    name: 'getDeletedSecretWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedSecretWithHttpOperationResponse(vaultBaseUrl: string,
        secretName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: |
            The name of the secret.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedSecretBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccount
    name: 'getDeletedStorageAccount(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedStorageAccount(vaultBaseUrl: string,
        storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedStorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccount_2
    name: >-
      getDeletedStorageAccount(string, string, Object,
      ServiceCallback<DeletedStorageBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedStorageAccount(vaultBaseUrl: string,
        storageAccountName: string, options: Object, callback:
        ServiceCallback<DeletedStorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedStorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedStorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccount_1
    name: >-
      getDeletedStorageAccount(string, string,
      ServiceCallback<DeletedStorageBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedStorageAccount(vaultBaseUrl: string,
        storageAccountName: string, callback:
        ServiceCallback<DeletedStorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedStorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedStorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccounts
    name: 'getDeletedStorageAccounts(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedStorageAccounts(vaultBaseUrl: string, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedStorageListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccounts_2
    name: >-
      getDeletedStorageAccounts(string, Object,
      ServiceCallback<DeletedStorageListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedStorageAccounts(vaultBaseUrl: string, options:
        Object, callback: ServiceCallback<DeletedStorageListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedStorageListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedStorageListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccounts_1
    name: >-
      getDeletedStorageAccounts(string,
      ServiceCallback<DeletedStorageListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedStorageAccounts(vaultBaseUrl: string, callback:
        ServiceCallback<DeletedStorageListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedStorageListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedStorageListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNext
    name: 'getDeletedStorageAccountsNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedStorageAccountsNext(nextPageLink: string, options?:
        Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.DeletedStorageListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNext_2
    name: >-
      getDeletedStorageAccountsNext(string, Object,
      ServiceCallback<DeletedStorageListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedStorageAccountsNext(nextPageLink: string, options:
        Object, callback: ServiceCallback<DeletedStorageListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedStorageListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedStorageListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNext_1
    name: >-
      getDeletedStorageAccountsNext(string,
      ServiceCallback<DeletedStorageListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedStorageAccountsNext(nextPageLink: string, callback:
        ServiceCallback<DeletedStorageListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.DeletedStorageListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.DeletedStorageListResult>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.getDeletedStorageAccountsNextWithHttpOperationResponse
    name: 'getDeletedStorageAccountsNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        getDeletedStorageAccountsNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-keyvault.DeletedStorageListResult>>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.getDeletedStorageAccountsWithHttpOperationResponse
    name: 'getDeletedStorageAccountsWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        getDeletedStorageAccountsWithHttpOperationResponse(vaultBaseUrl: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-keyvault.DeletedStorageListResult>>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.getDeletedStorageAccountWithHttpOperationResponse
    name: 'getDeletedStorageAccountWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getDeletedStorageAccountWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.DeletedStorageBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKey
    name: 'getKey(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getKey(vaultBaseUrl: string, keyName: string, keyVersion:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the key to get.
        - id: keyVersion
          type:
            - string
          description: |
            Adding the version parameter retrieves a specific
            version of a key.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKey_2
    name: 'getKey(string, string, string, Object, ServiceCallback<KeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getKey(vaultBaseUrl: string, keyName: string, keyVersion:
        string, options: Object, callback: ServiceCallback<KeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKey_1
    name: 'getKey(string, string, string, ServiceCallback<KeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getKey(vaultBaseUrl: string, keyName: string, keyVersion:
        string, callback: ServiceCallback<KeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeys
    name: 'getKeys(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getKeys(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeys_2
    name: 'getKeys(string, Object, ServiceCallback<KeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getKeys(vaultBaseUrl: string, options: Object, callback:
        ServiceCallback<KeyListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeys_1
    name: 'getKeys(string, ServiceCallback<KeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getKeys(vaultBaseUrl: string, callback:
        ServiceCallback<KeyListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeysNext
    name: 'getKeysNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getKeysNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeysNext_2
    name: 'getKeysNext(string, Object, ServiceCallback<KeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getKeysNext(nextPageLink: string, options: Object, callback:
        ServiceCallback<KeyListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeysNext_1
    name: 'getKeysNext(string, ServiceCallback<KeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getKeysNext(nextPageLink: string, callback:
        ServiceCallback<KeyListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeysNextWithHttpOperationResponse
    name: 'getKeysNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getKeysNextWithHttpOperationResponse(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeysWithHttpOperationResponse
    name: 'getKeysWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getKeysWithHttpOperationResponse(vaultBaseUrl: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeyVersions
    name: 'getKeyVersions(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getKeyVersions(vaultBaseUrl: string, keyName: string, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the key.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeyVersions_2
    name: 'getKeyVersions(string, string, Object, ServiceCallback<KeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getKeyVersions(vaultBaseUrl: string, keyName: string, options:
        Object, callback: ServiceCallback<KeyListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeyVersions_1
    name: 'getKeyVersions(string, string, ServiceCallback<KeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getKeyVersions(vaultBaseUrl: string, keyName: string, callback:
        ServiceCallback<KeyListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeyVersionsNext
    name: 'getKeyVersionsNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getKeyVersionsNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeyVersionsNext_2
    name: 'getKeyVersionsNext(string, Object, ServiceCallback<KeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getKeyVersionsNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<KeyListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeyVersionsNext_1
    name: 'getKeyVersionsNext(string, ServiceCallback<KeyListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getKeyVersionsNext(nextPageLink: string, callback:
        ServiceCallback<KeyListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeyVersionsNextWithHttpOperationResponse
    name: 'getKeyVersionsNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getKeyVersionsNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeyVersionsWithHttpOperationResponse
    name: 'getKeyVersionsWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getKeyVersionsWithHttpOperationResponse(vaultBaseUrl: string,
        keyName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the key.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getKeyWithHttpOperationResponse
    name: 'getKeyWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName:
        string, keyVersion: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the key to get.
        - id: keyVersion
          type:
            - string
          description: |
            Adding the version parameter retrieves a specific
            version of a key.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSasDefinition
    name: 'getSasDefinition(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets information about a SAS definition for the specified storage account.
      This operation requires the storage/getsas permission.
    syntax:
      content: >-
        function getSasDefinition(vaultBaseUrl: string, storageAccountName:
        string, sasDefinitionName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: sasDefinitionName
          type:
            - string
          description: |
            The name of the SAS definition.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSasDefinition_2
    name: >-
      getSasDefinition(string, string, string, Object,
      ServiceCallback<SasDefinitionBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets information about a SAS definition for the specified storage account.
      This operation requires the storage/getsas permission.
    syntax:
      content: >-
        function getSasDefinition(vaultBaseUrl: string, storageAccountName:
        string, sasDefinitionName: string, options: Object, callback:
        ServiceCallback<SasDefinitionBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: sasDefinitionName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SasDefinitionBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSasDefinition_1
    name: >-
      getSasDefinition(string, string, string,
      ServiceCallback<SasDefinitionBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets information about a SAS definition for the specified storage account.
      This operation requires the storage/getsas permission.
    syntax:
      content: >-
        function getSasDefinition(vaultBaseUrl: string, storageAccountName:
        string, sasDefinitionName: string, callback:
        ServiceCallback<SasDefinitionBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: sasDefinitionName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SasDefinitionBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSasDefinitions
    name: 'getSasDefinitions(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      List storage SAS definitions for the given storage account. This operation
      requires the storage/listsas permission.
    syntax:
      content: >-
        function getSasDefinitions(vaultBaseUrl: string, storageAccountName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSasDefinitions_2
    name: >-
      getSasDefinitions(string, string, Object,
      ServiceCallback<SasDefinitionListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      List storage SAS definitions for the given storage account. This operation
      requires the storage/listsas permission.
    syntax:
      content: >-
        function getSasDefinitions(vaultBaseUrl: string, storageAccountName:
        string, options: Object, callback:
        ServiceCallback<SasDefinitionListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SasDefinitionListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSasDefinitions_1
    name: >-
      getSasDefinitions(string, string,
      ServiceCallback<SasDefinitionListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      List storage SAS definitions for the given storage account. This operation
      requires the storage/listsas permission.
    syntax:
      content: >-
        function getSasDefinitions(vaultBaseUrl: string, storageAccountName:
        string, callback: ServiceCallback<SasDefinitionListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SasDefinitionListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSasDefinitionsNext
    name: 'getSasDefinitionsNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      List storage SAS definitions for the given storage account. This operation
      requires the storage/listsas permission.
    syntax:
      content: 'function getSasDefinitionsNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSasDefinitionsNext_2
    name: >-
      getSasDefinitionsNext(string, Object,
      ServiceCallback<SasDefinitionListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      List storage SAS definitions for the given storage account. This operation
      requires the storage/listsas permission.
    syntax:
      content: >-
        function getSasDefinitionsNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<SasDefinitionListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SasDefinitionListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSasDefinitionsNext_1
    name: 'getSasDefinitionsNext(string, ServiceCallback<SasDefinitionListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      List storage SAS definitions for the given storage account. This operation
      requires the storage/listsas permission.
    syntax:
      content: >-
        function getSasDefinitionsNext(nextPageLink: string, callback:
        ServiceCallback<SasDefinitionListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SasDefinitionListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionListResult>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.getSasDefinitionsNextWithHttpOperationResponse
    name: 'getSasDefinitionsNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      List storage SAS definitions for the given storage account. This operation
      requires the storage/listsas permission.
    syntax:
      content: >-
        function getSasDefinitionsNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-keyvault.SasDefinitionListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSasDefinitionsWithHttpOperationResponse
    name: 'getSasDefinitionsWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      List storage SAS definitions for the given storage account. This operation
      requires the storage/listsas permission.
    syntax:
      content: >-
        function getSasDefinitionsWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<HttpOperationResponse<azure-keyvault.SasDefinitionListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSasDefinitionWithHttpOperationResponse
    name: 'getSasDefinitionWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets information about a SAS definition for the specified storage account.
      This operation requires the storage/getsas permission.
    syntax:
      content: >-
        function getSasDefinitionWithHttpOperationResponse(vaultBaseUrl: string,
        storageAccountName: string, sasDefinitionName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: sasDefinitionName
          type:
            - string
          description: |
            The name of the SAS definition.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SasDefinitionBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecret
    name: 'getSecret(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSecret(vaultBaseUrl: string, secretName: string,
        secretVersion: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: |
            The name of the secret.
        - id: secretVersion
          type:
            - string
          description: |
            The version of the secret.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecret_2
    name: 'getSecret(string, string, string, Object, ServiceCallback<SecretBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSecret(vaultBaseUrl: string, secretName: string,
        secretVersion: string, options: Object, callback:
        ServiceCallback<SecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: secretVersion
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecret_1
    name: 'getSecret(string, string, string, ServiceCallback<SecretBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSecret(vaultBaseUrl: string, secretName: string,
        secretVersion: string, callback: ServiceCallback<SecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: secretVersion
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecrets
    name: 'getSecrets(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSecrets(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecrets_2
    name: 'getSecrets(string, Object, ServiceCallback<SecretListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSecrets(vaultBaseUrl: string, options: Object, callback:
        ServiceCallback<SecretListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecrets_1
    name: 'getSecrets(string, ServiceCallback<SecretListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSecrets(vaultBaseUrl: string, callback:
        ServiceCallback<SecretListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretsNext
    name: 'getSecretsNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSecretsNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretsNext_2
    name: 'getSecretsNext(string, Object, ServiceCallback<SecretListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSecretsNext(nextPageLink: string, options: Object, callback:
        ServiceCallback<SecretListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretsNext_1
    name: 'getSecretsNext(string, ServiceCallback<SecretListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSecretsNext(nextPageLink: string, callback:
        ServiceCallback<SecretListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretsNextWithHttpOperationResponse
    name: 'getSecretsNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSecretsNextWithHttpOperationResponse(nextPageLink: string,
        options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SecretListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretsWithHttpOperationResponse
    name: 'getSecretsWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSecretsWithHttpOperationResponse(vaultBaseUrl: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SecretListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretVersions
    name: 'getSecretVersions(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSecretVersions(vaultBaseUrl: string, secretName: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: |
            The name of the secret.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretVersions_2
    name: >-
      getSecretVersions(string, string, Object,
      ServiceCallback<SecretListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSecretVersions(vaultBaseUrl: string, secretName: string,
        options: Object, callback: ServiceCallback<SecretListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretVersions_1
    name: 'getSecretVersions(string, string, ServiceCallback<SecretListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSecretVersions(vaultBaseUrl: string, secretName: string,
        callback: ServiceCallback<SecretListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretVersionsNext
    name: 'getSecretVersionsNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSecretVersionsNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretVersionsNext_2
    name: 'getSecretVersionsNext(string, Object, ServiceCallback<SecretListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSecretVersionsNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<SecretListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretVersionsNext_1
    name: 'getSecretVersionsNext(string, ServiceCallback<SecretListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSecretVersionsNext(nextPageLink: string, callback:
        ServiceCallback<SecretListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretListResult>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.getSecretVersionsNextWithHttpOperationResponse
    name: 'getSecretVersionsNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSecretVersionsNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SecretListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretVersionsWithHttpOperationResponse
    name: 'getSecretVersionsWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSecretVersionsWithHttpOperationResponse(vaultBaseUrl:
        string, secretName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: |
            The name of the secret.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SecretListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getSecretWithHttpOperationResponse
    name: 'getSecretWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getSecretWithHttpOperationResponse(vaultBaseUrl: string,
        secretName: string, secretVersion: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: |
            The name of the secret.
        - id: secretVersion
          type:
            - string
          description: |
            The version of the secret.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SecretBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getStorageAccount
    name: 'getStorageAccount(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets information about a specified storage account. This operation
      requires

      the storage/get permission.
    syntax:
      content: >-
        function getStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getStorageAccount_2
    name: 'getStorageAccount(string, string, Object, ServiceCallback<StorageBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets information about a specified storage account. This operation
      requires

      the storage/get permission.
    syntax:
      content: >-
        function getStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, options: Object, callback: ServiceCallback<StorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getStorageAccount_1
    name: 'getStorageAccount(string, string, ServiceCallback<StorageBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets information about a specified storage account. This operation
      requires

      the storage/get permission.
    syntax:
      content: >-
        function getStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, callback: ServiceCallback<StorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getStorageAccounts
    name: 'getStorageAccounts(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      List storage accounts managed by the specified key vault. This operation
      requires the storage/list permission.
    syntax:
      content: 'function getStorageAccounts(vaultBaseUrl: string, options?: Object)'
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.StorageListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getStorageAccounts_2
    name: 'getStorageAccounts(string, Object, ServiceCallback<StorageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      List storage accounts managed by the specified key vault. This operation
      requires the storage/list permission.
    syntax:
      content: >-
        function getStorageAccounts(vaultBaseUrl: string, options: Object,
        callback: ServiceCallback<StorageListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getStorageAccounts_1
    name: 'getStorageAccounts(string, ServiceCallback<StorageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      List storage accounts managed by the specified key vault. This operation
      requires the storage/list permission.
    syntax:
      content: >-
        function getStorageAccounts(vaultBaseUrl: string, callback:
        ServiceCallback<StorageListResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getStorageAccountsNext
    name: 'getStorageAccountsNext(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      List storage accounts managed by the specified key vault. This operation
      requires the storage/list permission.
    syntax:
      content: 'function getStorageAccountsNext(nextPageLink: string, options?: Object)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.StorageListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getStorageAccountsNext_2
    name: 'getStorageAccountsNext(string, Object, ServiceCallback<StorageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      List storage accounts managed by the specified key vault. This operation
      requires the storage/list permission.
    syntax:
      content: >-
        function getStorageAccountsNext(nextPageLink: string, options: Object,
        callback: ServiceCallback<StorageListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageListResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getStorageAccountsNext_1
    name: 'getStorageAccountsNext(string, ServiceCallback<StorageListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      List storage accounts managed by the specified key vault. This operation
      requires the storage/list permission.
    syntax:
      content: >-
        function getStorageAccountsNext(nextPageLink: string, callback:
        ServiceCallback<StorageListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageListResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageListResult>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.getStorageAccountsNextWithHttpOperationResponse
    name: 'getStorageAccountsNextWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      List storage accounts managed by the specified key vault. This operation
      requires the storage/list permission.
    syntax:
      content: >-
        function getStorageAccountsNextWithHttpOperationResponse(nextPageLink:
        string, options?: Object)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.StorageListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getStorageAccountsWithHttpOperationResponse
    name: 'getStorageAccountsWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      List storage accounts managed by the specified key vault. This operation
      requires the storage/list permission.
    syntax:
      content: >-
        function getStorageAccountsWithHttpOperationResponse(vaultBaseUrl:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.StorageListResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.getStorageAccountWithHttpOperationResponse
    name: 'getStorageAccountWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets information about a specified storage account. This operation
      requires

      the storage/get permission.
    syntax:
      content: >-
        function getStorageAccountWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.StorageBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.importCertificate
    name: 'importCertificate(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function importCertificate(vaultBaseUrl: string, certificateName:
        string, base64EncodedCertificate: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate.
        - id: base64EncodedCertificate
          type:
            - string
          description: >
            Base64 encoded representation of

            the certificate object to import. This certificate needs to contain
            the

            private key.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.importCertificate_2
    name: >-
      importCertificate(string, string, string, Object,
      ServiceCallback<CertificateBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function importCertificate(vaultBaseUrl: string, certificateName:
        string, base64EncodedCertificate: string, options: Object, callback:
        ServiceCallback<CertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: base64EncodedCertificate
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.importCertificate_1
    name: >-
      importCertificate(string, string, string,
      ServiceCallback<CertificateBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function importCertificate(vaultBaseUrl: string, certificateName:
        string, base64EncodedCertificate: string, callback:
        ServiceCallback<CertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: base64EncodedCertificate
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.importCertificateWithHttpOperationResponse
    name: 'importCertificateWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function importCertificateWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, base64EncodedCertificate: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate.
        - id: base64EncodedCertificate
          type:
            - string
          description: >
            Base64 encoded representation of

            the certificate object to import. This certificate needs to contain
            the

            private key.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.importKey
    name: 'importKey(string, string, JsonWebKey, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function importKey(vaultBaseUrl: string, keyName: string, key:
        JsonWebKey, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            Name for the imported key.
        - id: key
          type:
            - azure-keyvault.JsonWebKey
          description: |
            The Json web key
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.importKey_2
    name: 'importKey(string, string, JsonWebKey, Object, ServiceCallback<KeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function importKey(vaultBaseUrl: string, keyName: string, key:
        JsonWebKey, options: Object, callback: ServiceCallback<KeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: key
          type:
            - azure-keyvault.JsonWebKey
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.importKey_1
    name: 'importKey(string, string, JsonWebKey, ServiceCallback<KeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function importKey(vaultBaseUrl: string, keyName: string, key:
        JsonWebKey, callback: ServiceCallback<KeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: key
          type:
            - azure-keyvault.JsonWebKey
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.importKeyWithHttpOperationResponse
    name: 'importKeyWithHttpOperationResponse(string, string, JsonWebKey, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function importKeyWithHttpOperationResponse(vaultBaseUrl: string,
        keyName: string, key: JsonWebKey, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            Name for the imported key.
        - id: key
          type:
            - azure-keyvault.JsonWebKey
          description: |
            The Json web key
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.constructor
    name: 'KeyVaultClient(ServiceClientCredentials, AzureServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes a new instance of the KeyVaultClient class.
    syntax:
      content: >-
        new KeyVaultClient(credentials: ServiceClientCredentials, options?:
        AzureServiceClientOptions)
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: |
            Credentials needed for the client to connect to Azure.
        - id: options
          type:
            - AzureServiceClientOptions
          description: ''
          optional: true
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.longRunningOperationRetryTimeout
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'longRunningOperationRetryTimeout: number'
      return:
        type:
          - number
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.mergeCertificate
    name: 'mergeCertificate(string, string, Buffer[], Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function mergeCertificate(vaultBaseUrl: string, certificateName: string,
        x509Certificates: Buffer[], options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate.
        - id: x509Certificates
          type:
            - 'Buffer[]'
          description: |
            The certificate or the certificate chain to
            merge.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.mergeCertificate_2
    name: >-
      mergeCertificate(string, string, Buffer[], Object,
      ServiceCallback<CertificateBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function mergeCertificate(vaultBaseUrl: string, certificateName: string,
        x509Certificates: Buffer[], options: Object, callback:
        ServiceCallback<CertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: x509Certificates
          type:
            - 'Buffer[]'
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.mergeCertificate_1
    name: >-
      mergeCertificate(string, string, Buffer[],
      ServiceCallback<CertificateBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function mergeCertificate(vaultBaseUrl: string, certificateName: string,
        x509Certificates: Buffer[], callback:
        ServiceCallback<CertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: x509Certificates
          type:
            - 'Buffer[]'
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.mergeCertificateWithHttpOperationResponse
    name: >-
      mergeCertificateWithHttpOperationResponse(string, string, Buffer[],
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function mergeCertificateWithHttpOperationResponse(vaultBaseUrl: string,
        certificateName: string, x509Certificates: Buffer[], options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate.
        - id: x509Certificates
          type:
            - 'Buffer[]'
          description: |
            The certificate or the certificate chain to
            merge.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedCertificate
    name: 'purgeDeletedCertificate(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function purgeDeletedCertificate(vaultBaseUrl: string, certificateName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedCertificate_2
    name: 'purgeDeletedCertificate(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function purgeDeletedCertificate(vaultBaseUrl: string, certificateName:
        string, options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedCertificate_1
    name: 'purgeDeletedCertificate(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function purgeDeletedCertificate(vaultBaseUrl: string, certificateName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.purgeDeletedCertificateWithHttpOperationResponse
    name: 'purgeDeletedCertificateWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function purgeDeletedCertificateWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedKey
    name: 'purgeDeletedKey(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function purgeDeletedKey(vaultBaseUrl: string, keyName: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the key
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedKey_2
    name: 'purgeDeletedKey(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function purgeDeletedKey(vaultBaseUrl: string, keyName: string, options:
        Object, callback: ServiceCallback<void>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedKey_1
    name: 'purgeDeletedKey(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function purgeDeletedKey(vaultBaseUrl: string, keyName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedKeyWithHttpOperationResponse
    name: 'purgeDeletedKeyWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function purgeDeletedKeyWithHttpOperationResponse(vaultBaseUrl: string,
        keyName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the key
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedSecret
    name: 'purgeDeletedSecret(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function purgeDeletedSecret(vaultBaseUrl: string, secretName: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: |
            The name of the secret.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedSecret_2
    name: 'purgeDeletedSecret(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function purgeDeletedSecret(vaultBaseUrl: string, secretName: string,
        options: Object, callback: ServiceCallback<void>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedSecret_1
    name: 'purgeDeletedSecret(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function purgeDeletedSecret(vaultBaseUrl: string, secretName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedSecretWithHttpOperationResponse
    name: 'purgeDeletedSecretWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function purgeDeletedSecretWithHttpOperationResponse(vaultBaseUrl:
        string, secretName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: |
            The name of the secret.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedStorageAccount
    name: 'purgeDeletedStorageAccount(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function purgeDeletedStorageAccount(vaultBaseUrl: string,
        storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedStorageAccount_2
    name: 'purgeDeletedStorageAccount(string, string, Object, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function purgeDeletedStorageAccount(vaultBaseUrl: string,
        storageAccountName: string, options: Object, callback:
        ServiceCallback<void>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.purgeDeletedStorageAccount_1
    name: 'purgeDeletedStorageAccount(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function purgeDeletedStorageAccount(vaultBaseUrl: string,
        storageAccountName: string, callback: ServiceCallback<void>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<void>
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.purgeDeletedStorageAccountWithHttpOperationResponse
    name: >-
      purgeDeletedStorageAccountWithHttpOperationResponse(string, string,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        purgeDeletedStorageAccountWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<void>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedCertificate
    name: 'recoverDeletedCertificate(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function recoverDeletedCertificate(vaultBaseUrl: string,
        certificateName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the deleted certificate
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedCertificate_2
    name: >-
      recoverDeletedCertificate(string, string, Object,
      ServiceCallback<CertificateBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function recoverDeletedCertificate(vaultBaseUrl: string,
        certificateName: string, options: Object, callback:
        ServiceCallback<CertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedCertificate_1
    name: >-
      recoverDeletedCertificate(string, string,
      ServiceCallback<CertificateBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function recoverDeletedCertificate(vaultBaseUrl: string,
        certificateName: string, callback: ServiceCallback<CertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.recoverDeletedCertificateWithHttpOperationResponse
    name: 'recoverDeletedCertificateWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        recoverDeletedCertificateWithHttpOperationResponse(vaultBaseUrl: string,
        certificateName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the deleted certificate
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedKey
    name: 'recoverDeletedKey(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function recoverDeletedKey(vaultBaseUrl: string, keyName: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the deleted key.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedKey_2
    name: 'recoverDeletedKey(string, string, Object, ServiceCallback<KeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function recoverDeletedKey(vaultBaseUrl: string, keyName: string,
        options: Object, callback: ServiceCallback<KeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedKey_1
    name: 'recoverDeletedKey(string, string, ServiceCallback<KeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function recoverDeletedKey(vaultBaseUrl: string, keyName: string,
        callback: ServiceCallback<KeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedKeyWithHttpOperationResponse
    name: 'recoverDeletedKeyWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function recoverDeletedKeyWithHttpOperationResponse(vaultBaseUrl:
        string, keyName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the deleted key.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedSasDefinition
    name: 'recoverDeletedSasDefinition(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function recoverDeletedSasDefinition(vaultBaseUrl: string,
        storageAccountName: string, sasDefinitionName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: sasDefinitionName
          type:
            - string
          description: |
            The name of the SAS definition.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedSasDefinition_2
    name: >-
      recoverDeletedSasDefinition(string, string, string, Object,
      ServiceCallback<SasDefinitionBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function recoverDeletedSasDefinition(vaultBaseUrl: string,
        storageAccountName: string, sasDefinitionName: string, options: Object,
        callback: ServiceCallback<SasDefinitionBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: sasDefinitionName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SasDefinitionBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedSasDefinition_1
    name: >-
      recoverDeletedSasDefinition(string, string, string,
      ServiceCallback<SasDefinitionBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function recoverDeletedSasDefinition(vaultBaseUrl: string,
        storageAccountName: string, sasDefinitionName: string, callback:
        ServiceCallback<SasDefinitionBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: sasDefinitionName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SasDefinitionBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionBundle>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.recoverDeletedSasDefinitionWithHttpOperationResponse
    name: >-
      recoverDeletedSasDefinitionWithHttpOperationResponse(string, string,
      string, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        recoverDeletedSasDefinitionWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, sasDefinitionName: string, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: sasDefinitionName
          type:
            - string
          description: |
            The name of the SAS definition.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SasDefinitionBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedSecret
    name: 'recoverDeletedSecret(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function recoverDeletedSecret(vaultBaseUrl: string, secretName: string,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: |
            The name of the deleted secret.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedSecret_2
    name: >-
      recoverDeletedSecret(string, string, Object,
      ServiceCallback<SecretBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function recoverDeletedSecret(vaultBaseUrl: string, secretName: string,
        options: Object, callback: ServiceCallback<SecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedSecret_1
    name: 'recoverDeletedSecret(string, string, ServiceCallback<SecretBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function recoverDeletedSecret(vaultBaseUrl: string, secretName: string,
        callback: ServiceCallback<SecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.recoverDeletedSecretWithHttpOperationResponse
    name: 'recoverDeletedSecretWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function recoverDeletedSecretWithHttpOperationResponse(vaultBaseUrl:
        string, secretName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: |
            The name of the deleted secret.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SecretBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedStorageAccount
    name: 'recoverDeletedStorageAccount(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function recoverDeletedStorageAccount(vaultBaseUrl: string,
        storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedStorageAccount_2
    name: >-
      recoverDeletedStorageAccount(string, string, Object,
      ServiceCallback<StorageBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function recoverDeletedStorageAccount(vaultBaseUrl: string,
        storageAccountName: string, options: Object, callback:
        ServiceCallback<StorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.recoverDeletedStorageAccount_1
    name: >-
      recoverDeletedStorageAccount(string, string,
      ServiceCallback<StorageBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function recoverDeletedStorageAccount(vaultBaseUrl: string,
        storageAccountName: string, callback: ServiceCallback<StorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.recoverDeletedStorageAccountWithHttpOperationResponse
    name: >-
      recoverDeletedStorageAccountWithHttpOperationResponse(string, string,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        recoverDeletedStorageAccountWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.StorageBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.regenerateStorageAccountKey
    name: 'regenerateStorageAccountKey(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Regenerates the specified key value for the given storage account. This
      operation requires the storage/regeneratekey permission.
    syntax:
      content: >-
        function regenerateStorageAccountKey(vaultBaseUrl: string,
        storageAccountName: string, keyName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: keyName
          type:
            - string
          description: |
            The storage account key name.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.regenerateStorageAccountKey_2
    name: >-
      regenerateStorageAccountKey(string, string, string, Object,
      ServiceCallback<StorageBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Regenerates the specified key value for the given storage account. This
      operation requires the storage/regeneratekey permission.
    syntax:
      content: >-
        function regenerateStorageAccountKey(vaultBaseUrl: string,
        storageAccountName: string, keyName: string, options: Object, callback:
        ServiceCallback<StorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.regenerateStorageAccountKey_1
    name: >-
      regenerateStorageAccountKey(string, string, string,
      ServiceCallback<StorageBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Regenerates the specified key value for the given storage account. This
      operation requires the storage/regeneratekey permission.
    syntax:
      content: >-
        function regenerateStorageAccountKey(vaultBaseUrl: string,
        storageAccountName: string, keyName: string, callback:
        ServiceCallback<StorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.regenerateStorageAccountKeyWithHttpOperationResponse
    name: >-
      regenerateStorageAccountKeyWithHttpOperationResponse(string, string,
      string, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Regenerates the specified key value for the given storage account. This
      operation requires the storage/regeneratekey permission.
    syntax:
      content: >-
        function
        regenerateStorageAccountKeyWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, keyName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: keyName
          type:
            - string
          description: |
            The storage account key name.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.StorageBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreCertificate
    name: 'restoreCertificate(string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function restoreCertificate(vaultBaseUrl: string,
        certificateBundleBackup: Buffer, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateBundleBackup
          type:
            - Buffer
          description: |
            The backup blob associated with a
            certificate bundle.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreCertificate_2
    name: >-
      restoreCertificate(string, Buffer, Object,
      ServiceCallback<CertificateBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function restoreCertificate(vaultBaseUrl: string,
        certificateBundleBackup: Buffer, options: Object, callback:
        ServiceCallback<CertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateBundleBackup
          type:
            - Buffer
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreCertificate_1
    name: 'restoreCertificate(string, Buffer, ServiceCallback<CertificateBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function restoreCertificate(vaultBaseUrl: string,
        certificateBundleBackup: Buffer, callback:
        ServiceCallback<CertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateBundleBackup
          type:
            - Buffer
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreCertificateWithHttpOperationResponse
    name: 'restoreCertificateWithHttpOperationResponse(string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function restoreCertificateWithHttpOperationResponse(vaultBaseUrl:
        string, certificateBundleBackup: Buffer, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateBundleBackup
          type:
            - Buffer
          description: |
            The backup blob associated with a
            certificate bundle.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreKey
    name: 'restoreKey(string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function restoreKey(vaultBaseUrl: string, keyBundleBackup: Buffer,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyBundleBackup
          type:
            - Buffer
          description: |
            The backup blob associated with a key
            bundle.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreKey_2
    name: 'restoreKey(string, Buffer, Object, ServiceCallback<KeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function restoreKey(vaultBaseUrl: string, keyBundleBackup: Buffer,
        options: Object, callback: ServiceCallback<KeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyBundleBackup
          type:
            - Buffer
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreKey_1
    name: 'restoreKey(string, Buffer, ServiceCallback<KeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function restoreKey(vaultBaseUrl: string, keyBundleBackup: Buffer,
        callback: ServiceCallback<KeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyBundleBackup
          type:
            - Buffer
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreKeyWithHttpOperationResponse
    name: 'restoreKeyWithHttpOperationResponse(string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function restoreKeyWithHttpOperationResponse(vaultBaseUrl: string,
        keyBundleBackup: Buffer, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyBundleBackup
          type:
            - Buffer
          description: |
            The backup blob associated with a key
            bundle.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreSecret
    name: 'restoreSecret(string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function restoreSecret(vaultBaseUrl: string, secretBundleBackup: Buffer,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretBundleBackup
          type:
            - Buffer
          description: |
            The backup blob associated with a secret
            bundle.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreSecret_2
    name: 'restoreSecret(string, Buffer, Object, ServiceCallback<SecretBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function restoreSecret(vaultBaseUrl: string, secretBundleBackup: Buffer,
        options: Object, callback: ServiceCallback<SecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretBundleBackup
          type:
            - Buffer
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreSecret_1
    name: 'restoreSecret(string, Buffer, ServiceCallback<SecretBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function restoreSecret(vaultBaseUrl: string, secretBundleBackup: Buffer,
        callback: ServiceCallback<SecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretBundleBackup
          type:
            - Buffer
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreSecretWithHttpOperationResponse
    name: 'restoreSecretWithHttpOperationResponse(string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function restoreSecretWithHttpOperationResponse(vaultBaseUrl: string,
        secretBundleBackup: Buffer, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretBundleBackup
          type:
            - Buffer
          description: |
            The backup blob associated with a secret
            bundle.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SecretBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreStorageAccount
    name: 'restoreStorageAccount(string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function restoreStorageAccount(vaultBaseUrl: string,
        storageBundleBackup: Buffer, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageBundleBackup
          type:
            - Buffer
          description: |
            The backup blob associated with a
            storage account.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreStorageAccount_2
    name: >-
      restoreStorageAccount(string, Buffer, Object,
      ServiceCallback<StorageBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function restoreStorageAccount(vaultBaseUrl: string,
        storageBundleBackup: Buffer, options: Object, callback:
        ServiceCallback<StorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageBundleBackup
          type:
            - Buffer
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.restoreStorageAccount_1
    name: 'restoreStorageAccount(string, Buffer, ServiceCallback<StorageBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function restoreStorageAccount(vaultBaseUrl: string,
        storageBundleBackup: Buffer, callback: ServiceCallback<StorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageBundleBackup
          type:
            - Buffer
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.restoreStorageAccountWithHttpOperationResponse
    name: 'restoreStorageAccountWithHttpOperationResponse(string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function restoreStorageAccountWithHttpOperationResponse(vaultBaseUrl:
        string, storageBundleBackup: Buffer, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageBundleBackup
          type:
            - Buffer
          description: |
            The backup blob associated with a
            storage account.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.StorageBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setCertificateContacts
    name: 'setCertificateContacts(string, Contacts, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setCertificateContacts(vaultBaseUrl: string, contacts:
        Contacts, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: contacts
          type:
            - azure-keyvault.Contacts
          description: |
            The contacts for the key vault certificate.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.Contacts>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setCertificateContacts_2
    name: >-
      setCertificateContacts(string, Contacts, Object,
      ServiceCallback<Contacts>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setCertificateContacts(vaultBaseUrl: string, contacts:
        Contacts, options: Object, callback: ServiceCallback<Contacts>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: contacts
          type:
            - azure-keyvault.Contacts
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.Contacts>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.Contacts>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setCertificateContacts_1
    name: 'setCertificateContacts(string, Contacts, ServiceCallback<Contacts>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setCertificateContacts(vaultBaseUrl: string, contacts:
        Contacts, callback: ServiceCallback<Contacts>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: contacts
          type:
            - azure-keyvault.Contacts
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.Contacts>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.Contacts>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.setCertificateContactsWithHttpOperationResponse
    name: 'setCertificateContactsWithHttpOperationResponse(string, Contacts, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setCertificateContactsWithHttpOperationResponse(vaultBaseUrl:
        string, contacts: Contacts, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: contacts
          type:
            - azure-keyvault.Contacts
          description: |
            The contacts for the key vault certificate.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.Contacts>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setCertificateIssuer
    name: 'setCertificateIssuer(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setCertificateIssuer(vaultBaseUrl: string, issuerName: string,
        provider: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: issuerName
          type:
            - string
          description: |
            The name of the issuer.
        - id: provider
          type:
            - string
          description: |
            The issuer provider.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.IssuerBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setCertificateIssuer_2
    name: >-
      setCertificateIssuer(string, string, string, Object,
      ServiceCallback<IssuerBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setCertificateIssuer(vaultBaseUrl: string, issuerName: string,
        provider: string, options: Object, callback:
        ServiceCallback<IssuerBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: issuerName
          type:
            - string
          description: ''
        - id: provider
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.IssuerBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.IssuerBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setCertificateIssuer_1
    name: >-
      setCertificateIssuer(string, string, string,
      ServiceCallback<IssuerBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setCertificateIssuer(vaultBaseUrl: string, issuerName: string,
        provider: string, callback: ServiceCallback<IssuerBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: issuerName
          type:
            - string
          description: ''
        - id: provider
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.IssuerBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.IssuerBundle>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.setCertificateIssuerWithHttpOperationResponse
    name: >-
      setCertificateIssuerWithHttpOperationResponse(string, string, string,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setCertificateIssuerWithHttpOperationResponse(vaultBaseUrl:
        string, issuerName: string, provider: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: issuerName
          type:
            - string
          description: |
            The name of the issuer.
        - id: provider
          type:
            - string
          description: |
            The issuer provider.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.IssuerBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setSasDefinition
    name: 'setSasDefinition(string, string, string, string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates or updates a new SAS definition for the specified storage account.
      This operation requires the storage/setsas permission.
    syntax:
      content: >-
        function setSasDefinition(vaultBaseUrl: string, storageAccountName:
        string, sasDefinitionName: string, templateUri: string, sasType: string,
        validityPeriod: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: sasDefinitionName
          type:
            - string
          description: |
            The name of the SAS definition.
        - id: templateUri
          type:
            - string
          description: >
            The SAS definition token template signed with an

            arbitrary key.  Tokens created according to the SAS definition will
            have the

            same properties as the template.
        - id: sasType
          type:
            - string
          description: |
            The type of SAS token the SAS definition will
            create. Possible values include: 'account', 'service'
        - id: validityPeriod
          type:
            - string
          description: |
            The validity period of SAS tokens created
            according to the SAS definition.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setSasDefinition_2
    name: >-
      setSasDefinition(string, string, string, string, string, string, Object,
      ServiceCallback<SasDefinitionBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates or updates a new SAS definition for the specified storage account.
      This operation requires the storage/setsas permission.
    syntax:
      content: >-
        function setSasDefinition(vaultBaseUrl: string, storageAccountName:
        string, sasDefinitionName: string, templateUri: string, sasType: string,
        validityPeriod: string, options: Object, callback:
        ServiceCallback<SasDefinitionBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: sasDefinitionName
          type:
            - string
          description: ''
        - id: templateUri
          type:
            - string
          description: ''
        - id: sasType
          type:
            - string
          description: ''
        - id: validityPeriod
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SasDefinitionBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setSasDefinition_1
    name: >-
      setSasDefinition(string, string, string, string, string, string,
      ServiceCallback<SasDefinitionBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates or updates a new SAS definition for the specified storage account.
      This operation requires the storage/setsas permission.
    syntax:
      content: >-
        function setSasDefinition(vaultBaseUrl: string, storageAccountName:
        string, sasDefinitionName: string, templateUri: string, sasType: string,
        validityPeriod: string, callback: ServiceCallback<SasDefinitionBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: sasDefinitionName
          type:
            - string
          description: ''
        - id: templateUri
          type:
            - string
          description: ''
        - id: sasType
          type:
            - string
          description: ''
        - id: validityPeriod
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SasDefinitionBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setSasDefinitionWithHttpOperationResponse
    name: >-
      setSasDefinitionWithHttpOperationResponse(string, string, string, string,
      string, string, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates or updates a new SAS definition for the specified storage account.
      This operation requires the storage/setsas permission.
    syntax:
      content: >-
        function setSasDefinitionWithHttpOperationResponse(vaultBaseUrl: string,
        storageAccountName: string, sasDefinitionName: string, templateUri:
        string, sasType: string, validityPeriod: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: sasDefinitionName
          type:
            - string
          description: |
            The name of the SAS definition.
        - id: templateUri
          type:
            - string
          description: >
            The SAS definition token template signed with an

            arbitrary key.  Tokens created according to the SAS definition will
            have the

            same properties as the template.
        - id: sasType
          type:
            - string
          description: |
            The type of SAS token the SAS definition will
            create. Possible values include: 'account', 'service'
        - id: validityPeriod
          type:
            - string
          description: |
            The validity period of SAS tokens created
            according to the SAS definition.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SasDefinitionBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setSecret
    name: 'setSecret(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setSecret(vaultBaseUrl: string, secretName: string, value:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: |
            The name of the secret.
        - id: value
          type:
            - string
          description: |
            The value of the secret.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setSecret_2
    name: 'setSecret(string, string, string, Object, ServiceCallback<SecretBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setSecret(vaultBaseUrl: string, secretName: string, value:
        string, options: Object, callback: ServiceCallback<SecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: value
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setSecret_1
    name: 'setSecret(string, string, string, ServiceCallback<SecretBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setSecret(vaultBaseUrl: string, secretName: string, value:
        string, callback: ServiceCallback<SecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: value
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setSecretWithHttpOperationResponse
    name: 'setSecretWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setSecretWithHttpOperationResponse(vaultBaseUrl: string,
        secretName: string, value: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: |
            The name of the secret.
        - id: value
          type:
            - string
          description: |
            The value of the secret.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SecretBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setStorageAccount
    name: 'setStorageAccount(string, string, string, string, boolean, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates or updates a new storage account. This operation requires the
      storage/set permission.
    syntax:
      content: >-
        function setStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, resourceId: string, activeKeyName: string, autoRegenerateKey:
        boolean, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: resourceId
          type:
            - string
          description: |
            Storage account resource id.
        - id: activeKeyName
          type:
            - string
          description: |
            Current active storage account key name.
        - id: autoRegenerateKey
          type:
            - boolean
          description: |
            whether keyvault should manage the
            storage account for the user.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setStorageAccount_2
    name: >-
      setStorageAccount(string, string, string, string, boolean, Object,
      ServiceCallback<StorageBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates or updates a new storage account. This operation requires the
      storage/set permission.
    syntax:
      content: >-
        function setStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, resourceId: string, activeKeyName: string, autoRegenerateKey:
        boolean, options: Object, callback: ServiceCallback<StorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: resourceId
          type:
            - string
          description: ''
        - id: activeKeyName
          type:
            - string
          description: ''
        - id: autoRegenerateKey
          type:
            - boolean
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setStorageAccount_1
    name: >-
      setStorageAccount(string, string, string, string, boolean,
      ServiceCallback<StorageBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates or updates a new storage account. This operation requires the
      storage/set permission.
    syntax:
      content: >-
        function setStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, resourceId: string, activeKeyName: string, autoRegenerateKey:
        boolean, callback: ServiceCallback<StorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: resourceId
          type:
            - string
          description: ''
        - id: activeKeyName
          type:
            - string
          description: ''
        - id: autoRegenerateKey
          type:
            - boolean
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.setStorageAccountWithHttpOperationResponse
    name: >-
      setStorageAccountWithHttpOperationResponse(string, string, string, string,
      boolean, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates or updates a new storage account. This operation requires the
      storage/set permission.
    syntax:
      content: >-
        function setStorageAccountWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, resourceId: string, activeKeyName:
        string, autoRegenerateKey: boolean, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: resourceId
          type:
            - string
          description: |
            Storage account resource id.
        - id: activeKeyName
          type:
            - string
          description: |
            Current active storage account key name.
        - id: autoRegenerateKey
          type:
            - boolean
          description: |
            whether keyvault should manage the
            storage account for the user.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.StorageBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.sign
    name: 'sign(string, string, string, string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function sign(vaultBaseUrl: string, keyName: string, keyVersion: string,
        algorithm: string, value: Buffer, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the key.
        - id: keyVersion
          type:
            - string
          description: |
            The version of the key.
        - id: algorithm
          type:
            - string
          description: >
            The signing/verification algorithm identifier. For

            more information on possible algorithm types, see

            JsonWebKeySignatureAlgorithm. Possible values include: 'PS256',
            'PS384',

            'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384',
            'ES512',

            'ES256K'
        - id: value
          type:
            - Buffer
          description: |+

        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.sign_2
    name: >-
      sign(string, string, string, string, Buffer, Object,
      ServiceCallback<KeyOperationResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function sign(vaultBaseUrl: string, keyName: string, keyVersion: string,
        algorithm: string, value: Buffer, options: Object, callback:
        ServiceCallback<KeyOperationResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: algorithm
          type:
            - string
          description: ''
        - id: value
          type:
            - Buffer
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.sign_1
    name: >-
      sign(string, string, string, string, Buffer,
      ServiceCallback<KeyOperationResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function sign(vaultBaseUrl: string, keyName: string, keyVersion: string,
        algorithm: string, value: Buffer, callback:
        ServiceCallback<KeyOperationResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: algorithm
          type:
            - string
          description: ''
        - id: value
          type:
            - Buffer
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.signWithHttpOperationResponse
    name: >-
      signWithHttpOperationResponse(string, string, string, string, Buffer,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function signWithHttpOperationResponse(vaultBaseUrl: string, keyName:
        string, keyVersion: string, algorithm: string, value: Buffer, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the key.
        - id: keyVersion
          type:
            - string
          description: |
            The version of the key.
        - id: algorithm
          type:
            - string
          description: >
            The signing/verification algorithm identifier. For

            more information on possible algorithm types, see

            JsonWebKeySignatureAlgorithm. Possible values include: 'PS256',
            'PS384',

            'PS512', 'RS256', 'RS384', 'RS512', 'RSNULL', 'ES256', 'ES384',
            'ES512',

            'ES256K'
        - id: value
          type:
            - Buffer
          description: |+

        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyOperationResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.unwrapKey
    name: 'unwrapKey(string, string, string, string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function unwrapKey(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, value: Buffer, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the key.
        - id: keyVersion
          type:
            - string
          description: |
            The version of the key.
        - id: algorithm
          type:
            - string
          description: |
            algorithm identifier. Possible values include:
            'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'
        - id: value
          type:
            - Buffer
          description: |+

        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.unwrapKey_2
    name: >-
      unwrapKey(string, string, string, string, Buffer, Object,
      ServiceCallback<KeyOperationResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function unwrapKey(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, value: Buffer, options: Object, callback:
        ServiceCallback<KeyOperationResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: algorithm
          type:
            - string
          description: ''
        - id: value
          type:
            - Buffer
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.unwrapKey_1
    name: >-
      unwrapKey(string, string, string, string, Buffer,
      ServiceCallback<KeyOperationResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function unwrapKey(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, value: Buffer, callback:
        ServiceCallback<KeyOperationResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: algorithm
          type:
            - string
          description: ''
        - id: value
          type:
            - Buffer
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.unwrapKeyWithHttpOperationResponse
    name: >-
      unwrapKeyWithHttpOperationResponse(string, string, string, string, Buffer,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function unwrapKeyWithHttpOperationResponse(vaultBaseUrl: string,
        keyName: string, keyVersion: string, algorithm: string, value: Buffer,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the key.
        - id: keyVersion
          type:
            - string
          description: |
            The version of the key.
        - id: algorithm
          type:
            - string
          description: |
            algorithm identifier. Possible values include:
            'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'
        - id: value
          type:
            - Buffer
          description: |+

        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyOperationResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificate
    name: 'updateCertificate(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateCertificate(vaultBaseUrl: string, certificateName:
        string, certificateVersion: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate in the given key
            vault.
        - id: certificateVersion
          type:
            - string
          description: |
            The version of the certificate.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificate_2
    name: >-
      updateCertificate(string, string, string, Object,
      ServiceCallback<CertificateBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateCertificate(vaultBaseUrl: string, certificateName:
        string, certificateVersion: string, options: Object, callback:
        ServiceCallback<CertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: certificateVersion
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificate_1
    name: >-
      updateCertificate(string, string, string,
      ServiceCallback<CertificateBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateCertificate(vaultBaseUrl: string, certificateName:
        string, certificateVersion: string, callback:
        ServiceCallback<CertificateBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: certificateVersion
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificateIssuer
    name: 'updateCertificateIssuer(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateCertificateIssuer(vaultBaseUrl: string, issuerName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: issuerName
          type:
            - string
          description: |
            The name of the issuer.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.IssuerBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificateIssuer_2
    name: >-
      updateCertificateIssuer(string, string, Object,
      ServiceCallback<IssuerBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateCertificateIssuer(vaultBaseUrl: string, issuerName:
        string, options: Object, callback: ServiceCallback<IssuerBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: issuerName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.IssuerBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.IssuerBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificateIssuer_1
    name: 'updateCertificateIssuer(string, string, ServiceCallback<IssuerBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateCertificateIssuer(vaultBaseUrl: string, issuerName:
        string, callback: ServiceCallback<IssuerBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: issuerName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.IssuerBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.IssuerBundle>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.updateCertificateIssuerWithHttpOperationResponse
    name: 'updateCertificateIssuerWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateCertificateIssuerWithHttpOperationResponse(vaultBaseUrl:
        string, issuerName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: issuerName
          type:
            - string
          description: |
            The name of the issuer.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.IssuerBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificateOperation
    name: 'updateCertificateOperation(string, string, boolean, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateCertificateOperation(vaultBaseUrl: string,
        certificateName: string, cancellationRequested: boolean, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate.
        - id: cancellationRequested
          type:
            - boolean
          description: |
            Indicates if cancellation was
            requested on the certificate operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificateOperation>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificateOperation_2
    name: >-
      updateCertificateOperation(string, string, boolean, Object,
      ServiceCallback<CertificateOperation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateCertificateOperation(vaultBaseUrl: string,
        certificateName: string, cancellationRequested: boolean, options:
        Object, callback: ServiceCallback<CertificateOperation>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: cancellationRequested
          type:
            - boolean
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateOperation>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateOperation>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificateOperation_1
    name: >-
      updateCertificateOperation(string, string, boolean,
      ServiceCallback<CertificateOperation>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateCertificateOperation(vaultBaseUrl: string,
        certificateName: string, cancellationRequested: boolean, callback:
        ServiceCallback<CertificateOperation>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: cancellationRequested
          type:
            - boolean
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificateOperation>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificateOperation>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.updateCertificateOperationWithHttpOperationResponse
    name: >-
      updateCertificateOperationWithHttpOperationResponse(string, string,
      boolean, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function
        updateCertificateOperationWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, cancellationRequested: boolean,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate.
        - id: cancellationRequested
          type:
            - boolean
          description: |
            Indicates if cancellation was
            requested on the certificate operation.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateOperation>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificatePolicy
    name: 'updateCertificatePolicy(string, string, CertificatePolicy, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateCertificatePolicy(vaultBaseUrl: string, certificateName:
        string, certificatePolicy: CertificatePolicy, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate in the given
            vault.
        - id: certificatePolicy
          type:
            - azure-keyvault.CertificatePolicy
          description: |
            The policy for the certificate.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.CertificatePolicy>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificatePolicy_2
    name: >-
      updateCertificatePolicy(string, string, CertificatePolicy, Object,
      ServiceCallback<CertificatePolicy>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateCertificatePolicy(vaultBaseUrl: string, certificateName:
        string, certificatePolicy: CertificatePolicy, options: Object, callback:
        ServiceCallback<CertificatePolicy>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: certificatePolicy
          type:
            - azure-keyvault.CertificatePolicy
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificatePolicy>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificatePolicy>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificatePolicy_1
    name: >-
      updateCertificatePolicy(string, string, CertificatePolicy,
      ServiceCallback<CertificatePolicy>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateCertificatePolicy(vaultBaseUrl: string, certificateName:
        string, certificatePolicy: CertificatePolicy, callback:
        ServiceCallback<CertificatePolicy>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: certificateName
          type:
            - string
          description: ''
        - id: certificatePolicy
          type:
            - azure-keyvault.CertificatePolicy
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.CertificatePolicy>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.CertificatePolicy>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.updateCertificatePolicyWithHttpOperationResponse
    name: >-
      updateCertificatePolicyWithHttpOperationResponse(string, string,
      CertificatePolicy, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateCertificatePolicyWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, certificatePolicy: CertificatePolicy,
        options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate in the given
            vault.
        - id: certificatePolicy
          type:
            - azure-keyvault.CertificatePolicy
          description: |
            The policy for the certificate.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificatePolicy>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateCertificateWithHttpOperationResponse
    name: 'updateCertificateWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateCertificateWithHttpOperationResponse(vaultBaseUrl:
        string, certificateName: string, certificateVersion: string, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: certificateName
          type:
            - string
          description: |
            The name of the certificate in the given key
            vault.
        - id: certificateVersion
          type:
            - string
          description: |
            The version of the certificate.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.CertificateBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateKey
    name: 'updateKey(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateKey(vaultBaseUrl: string, keyName: string, keyVersion:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of key to update.
        - id: keyVersion
          type:
            - string
          description: |
            The version of the key to update.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateKey_2
    name: 'updateKey(string, string, string, Object, ServiceCallback<KeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateKey(vaultBaseUrl: string, keyName: string, keyVersion:
        string, options: Object, callback: ServiceCallback<KeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateKey_1
    name: 'updateKey(string, string, string, ServiceCallback<KeyBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateKey(vaultBaseUrl: string, keyName: string, keyVersion:
        string, callback: ServiceCallback<KeyBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateKeyWithHttpOperationResponse
    name: 'updateKeyWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateKeyWithHttpOperationResponse(vaultBaseUrl: string,
        keyName: string, keyVersion: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of key to update.
        - id: keyVersion
          type:
            - string
          description: |
            The version of the key to update.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateSasDefinition
    name: 'updateSasDefinition(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Updates the specified attributes associated with the given SAS definition.
      This operation requires the storage/setsas permission.
    syntax:
      content: >-
        function updateSasDefinition(vaultBaseUrl: string, storageAccountName:
        string, sasDefinitionName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: sasDefinitionName
          type:
            - string
          description: |
            The name of the SAS definition.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateSasDefinition_2
    name: >-
      updateSasDefinition(string, string, string, Object,
      ServiceCallback<SasDefinitionBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Updates the specified attributes associated with the given SAS definition.
      This operation requires the storage/setsas permission.
    syntax:
      content: >-
        function updateSasDefinition(vaultBaseUrl: string, storageAccountName:
        string, sasDefinitionName: string, options: Object, callback:
        ServiceCallback<SasDefinitionBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: sasDefinitionName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SasDefinitionBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateSasDefinition_1
    name: >-
      updateSasDefinition(string, string, string,
      ServiceCallback<SasDefinitionBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Updates the specified attributes associated with the given SAS definition.
      This operation requires the storage/setsas permission.
    syntax:
      content: >-
        function updateSasDefinition(vaultBaseUrl: string, storageAccountName:
        string, sasDefinitionName: string, callback:
        ServiceCallback<SasDefinitionBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: sasDefinitionName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SasDefinitionBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SasDefinitionBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateSasDefinitionWithHttpOperationResponse
    name: >-
      updateSasDefinitionWithHttpOperationResponse(string, string, string,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Updates the specified attributes associated with the given SAS definition.
      This operation requires the storage/setsas permission.
    syntax:
      content: >-
        function updateSasDefinitionWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, sasDefinitionName: string, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: sasDefinitionName
          type:
            - string
          description: |
            The name of the SAS definition.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SasDefinitionBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateSecret
    name: 'updateSecret(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSecret(vaultBaseUrl: string, secretName: string,
        secretVersion: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: |
            The name of the secret.
        - id: secretVersion
          type:
            - string
          description: |
            The version of the secret.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateSecret_2
    name: >-
      updateSecret(string, string, string, Object,
      ServiceCallback<SecretBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSecret(vaultBaseUrl: string, secretName: string,
        secretVersion: string, options: Object, callback:
        ServiceCallback<SecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: secretVersion
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateSecret_1
    name: 'updateSecret(string, string, string, ServiceCallback<SecretBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSecret(vaultBaseUrl: string, secretName: string,
        secretVersion: string, callback: ServiceCallback<SecretBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: secretName
          type:
            - string
          description: ''
        - id: secretVersion
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.SecretBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.SecretBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateSecretWithHttpOperationResponse
    name: 'updateSecretWithHttpOperationResponse(string, string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function updateSecretWithHttpOperationResponse(vaultBaseUrl: string,
        secretName: string, secretVersion: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: secretName
          type:
            - string
          description: |
            The name of the secret.
        - id: secretVersion
          type:
            - string
          description: |
            The version of the secret.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.SecretBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateStorageAccount
    name: 'updateStorageAccount(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates the specified attributes associated with the given storage
      account.

      This operation requires the storage/set/update permission.
    syntax:
      content: >-
        function updateStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateStorageAccount_2
    name: >-
      updateStorageAccount(string, string, Object,
      ServiceCallback<StorageBundle>)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates the specified attributes associated with the given storage
      account.

      This operation requires the storage/set/update permission.
    syntax:
      content: >-
        function updateStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, options: Object, callback: ServiceCallback<StorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.updateStorageAccount_1
    name: 'updateStorageAccount(string, string, ServiceCallback<StorageBundle>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates the specified attributes associated with the given storage
      account.

      This operation requires the storage/set/update permission.
    syntax:
      content: >-
        function updateStorageAccount(vaultBaseUrl: string, storageAccountName:
        string, callback: ServiceCallback<StorageBundle>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: storageAccountName
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.StorageBundle>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.StorageBundle>
    package: azure-keyvault
  - uid: >-
      azure-keyvault.KeyVaultClient.updateStorageAccountWithHttpOperationResponse
    name: 'updateStorageAccountWithHttpOperationResponse(string, string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates the specified attributes associated with the given storage
      account.

      This operation requires the storage/set/update permission.
    syntax:
      content: >-
        function updateStorageAccountWithHttpOperationResponse(vaultBaseUrl:
        string, storageAccountName: string, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: storageAccountName
          type:
            - string
          description: |
            The name of the storage account.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.StorageBundle>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.verify
    name: 'verify(string, string, string, string, Buffer, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function verify(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, digest: Buffer, signature: Buffer, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the key.
        - id: keyVersion
          type:
            - string
          description: |
            The version of the key.
        - id: algorithm
          type:
            - string
          description: >
            The signing/verification algorithm. For more

            information on possible algorithm types, see
            JsonWebKeySignatureAlgorithm.

            Possible values include: 'PS256', 'PS384', 'PS512', 'RS256',
            'RS384',

            'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K'
        - id: digest
          type:
            - Buffer
          description: |
            The digest used for signing.
        - id: signature
          type:
            - Buffer
          description: |
            The signature to be verified.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyVerifyResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.verify_2
    name: >-
      verify(string, string, string, string, Buffer, Buffer, Object,
      ServiceCallback<KeyVerifyResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function verify(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, digest: Buffer, signature: Buffer, options:
        Object, callback: ServiceCallback<KeyVerifyResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: algorithm
          type:
            - string
          description: ''
        - id: digest
          type:
            - Buffer
          description: ''
        - id: signature
          type:
            - Buffer
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyVerifyResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyVerifyResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.verify_1
    name: >-
      verify(string, string, string, string, Buffer, Buffer,
      ServiceCallback<KeyVerifyResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function verify(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, digest: Buffer, signature: Buffer, callback:
        ServiceCallback<KeyVerifyResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: algorithm
          type:
            - string
          description: ''
        - id: digest
          type:
            - Buffer
          description: ''
        - id: signature
          type:
            - Buffer
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyVerifyResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyVerifyResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.verifyWithHttpOperationResponse
    name: >-
      verifyWithHttpOperationResponse(string, string, string, string, Buffer,
      Buffer, Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function verifyWithHttpOperationResponse(vaultBaseUrl: string, keyName:
        string, keyVersion: string, algorithm: string, digest: Buffer,
        signature: Buffer, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the key.
        - id: keyVersion
          type:
            - string
          description: |
            The version of the key.
        - id: algorithm
          type:
            - string
          description: >
            The signing/verification algorithm. For more

            information on possible algorithm types, see
            JsonWebKeySignatureAlgorithm.

            Possible values include: 'PS256', 'PS384', 'PS512', 'RS256',
            'RS384',

            'RS512', 'RSNULL', 'ES256', 'ES384', 'ES512', 'ES256K'
        - id: digest
          type:
            - Buffer
          description: |
            The digest used for signing.
        - id: signature
          type:
            - Buffer
          description: |
            The signature to be verified.
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyVerifyResult>>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.wrapKey
    name: 'wrapKey(string, string, string, string, Buffer, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function wrapKey(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, value: Buffer, options?: Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the key.
        - id: keyVersion
          type:
            - string
          description: |
            The version of the key.
        - id: algorithm
          type:
            - string
          description: |
            algorithm identifier. Possible values include:
            'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'
        - id: value
          type:
            - Buffer
          description: |+

        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.wrapKey_2
    name: >-
      wrapKey(string, string, string, string, Buffer, Object,
      ServiceCallback<KeyOperationResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function wrapKey(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, value: Buffer, options: Object, callback:
        ServiceCallback<KeyOperationResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: algorithm
          type:
            - string
          description: ''
        - id: value
          type:
            - Buffer
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.wrapKey_1
    name: >-
      wrapKey(string, string, string, string, Buffer,
      ServiceCallback<KeyOperationResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function wrapKey(vaultBaseUrl: string, keyName: string, keyVersion:
        string, algorithm: string, value: Buffer, callback:
        ServiceCallback<KeyOperationResult>)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: ''
        - id: keyName
          type:
            - string
          description: ''
        - id: keyVersion
          type:
            - string
          description: ''
        - id: algorithm
          type:
            - string
          description: ''
        - id: value
          type:
            - Buffer
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-keyvault.KeyOperationResult>
          description: ''
      return:
        type:
          - Promise<azure-keyvault.KeyOperationResult>
    package: azure-keyvault
  - uid: azure-keyvault.KeyVaultClient.wrapKeyWithHttpOperationResponse
    name: >-
      wrapKeyWithHttpOperationResponse(string, string, string, string, Buffer,
      Object)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function wrapKeyWithHttpOperationResponse(vaultBaseUrl: string, keyName:
        string, keyVersion: string, algorithm: string, value: Buffer, options?:
        Object)
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: |
            The vault name, for example
            https://myvault.vault.azure.net.
        - id: keyName
          type:
            - string
          description: |
            The name of the key.
        - id: keyVersion
          type:
            - string
          description: |
            The version of the key.
        - id: algorithm
          type:
            - string
          description: |
            algorithm identifier. Possible values include:
            'RSA-OAEP', 'RSA-OAEP-256', 'RSA1_5'
        - id: value
          type:
            - Buffer
          description: |+

        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-keyvault.KeyOperationResult>>
    package: azure-keyvault
references:
  - uid: Promise<azure-keyvault.BackupCertificateResult>
    name: BackupCertificateResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BackupCertificateResult
        fullName: BackupCertificateResult
        uid: azure-keyvault.BackupCertificateResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.BackupCertificateResult>
    name: BackupCertificateResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BackupCertificateResult
        fullName: BackupCertificateResult
        uid: azure-keyvault.BackupCertificateResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.BackupCertificateResult>>
    name: BackupCertificateResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: BackupCertificateResult
        fullName: BackupCertificateResult
        uid: azure-keyvault.BackupCertificateResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.BackupKeyResult>
    name: BackupKeyResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BackupKeyResult
        fullName: BackupKeyResult
        uid: azure-keyvault.BackupKeyResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.BackupKeyResult>
    name: BackupKeyResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BackupKeyResult
        fullName: BackupKeyResult
        uid: azure-keyvault.BackupKeyResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.BackupKeyResult>>
    name: BackupKeyResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: BackupKeyResult
        fullName: BackupKeyResult
        uid: azure-keyvault.BackupKeyResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.BackupSecretResult>
    name: BackupSecretResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BackupSecretResult
        fullName: BackupSecretResult
        uid: azure-keyvault.BackupSecretResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.BackupSecretResult>
    name: BackupSecretResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BackupSecretResult
        fullName: BackupSecretResult
        uid: azure-keyvault.BackupSecretResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.BackupSecretResult>>
    name: BackupSecretResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: BackupSecretResult
        fullName: BackupSecretResult
        uid: azure-keyvault.BackupSecretResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.BackupStorageResult>
    name: BackupStorageResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: BackupStorageResult
        fullName: BackupStorageResult
        uid: azure-keyvault.BackupStorageResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.BackupStorageResult>
    name: BackupStorageResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BackupStorageResult
        fullName: BackupStorageResult
        uid: azure-keyvault.BackupStorageResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.BackupStorageResult>>
    name: BackupStorageResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: BackupStorageResult
        fullName: BackupStorageResult
        uid: azure-keyvault.BackupStorageResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.CertificateOperation>
    name: CertificateOperation>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CertificateOperation
        fullName: CertificateOperation
        uid: azure-keyvault.CertificateOperation
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.CertificateOperation>
    name: CertificateOperation>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CertificateOperation
        fullName: CertificateOperation
        uid: azure-keyvault.CertificateOperation
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.CertificateOperation>>
    name: CertificateOperation>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: CertificateOperation
        fullName: CertificateOperation
        uid: azure-keyvault.CertificateOperation
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.KeyBundle>
    name: KeyBundle>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: KeyBundle
        fullName: KeyBundle
        uid: azure-keyvault.KeyBundle
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.KeyBundle>
    name: KeyBundle>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: KeyBundle
        fullName: KeyBundle
        uid: azure-keyvault.KeyBundle
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.KeyBundle>>
    name: KeyBundle>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: KeyBundle
        fullName: KeyBundle
        uid: azure-keyvault.KeyBundle
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.KeyOperationResult>
    name: KeyOperationResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: KeyOperationResult
        fullName: KeyOperationResult
        uid: azure-keyvault.KeyOperationResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.KeyOperationResult>
    name: KeyOperationResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: KeyOperationResult
        fullName: KeyOperationResult
        uid: azure-keyvault.KeyOperationResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.KeyOperationResult>>
    name: KeyOperationResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: KeyOperationResult
        fullName: KeyOperationResult
        uid: azure-keyvault.KeyOperationResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.DeletedCertificateBundle>
    name: DeletedCertificateBundle>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedCertificateBundle
        fullName: DeletedCertificateBundle
        uid: azure-keyvault.DeletedCertificateBundle
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.DeletedCertificateBundle>
    name: DeletedCertificateBundle>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeletedCertificateBundle
        fullName: DeletedCertificateBundle
        uid: azure-keyvault.DeletedCertificateBundle
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-keyvault.Contacts>
    name: Contacts>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Contacts
        fullName: Contacts
        uid: azure-keyvault.Contacts
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.Contacts>
    name: Contacts>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Contacts
        fullName: Contacts
        uid: azure-keyvault.Contacts
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.Contacts>>
    name: Contacts>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: Contacts
        fullName: Contacts
        uid: azure-keyvault.Contacts
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.IssuerBundle>
    name: IssuerBundle>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: IssuerBundle
        fullName: IssuerBundle
        uid: azure-keyvault.IssuerBundle
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.IssuerBundle>
    name: IssuerBundle>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: IssuerBundle
        fullName: IssuerBundle
        uid: azure-keyvault.IssuerBundle
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.IssuerBundle>>
    name: IssuerBundle>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: IssuerBundle
        fullName: IssuerBundle
        uid: azure-keyvault.IssuerBundle
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.DeletedCertificateBundle>>
    name: DeletedCertificateBundle>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeletedCertificateBundle
        fullName: DeletedCertificateBundle
        uid: azure-keyvault.DeletedCertificateBundle
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.DeletedKeyBundle>
    name: DeletedKeyBundle>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedKeyBundle
        fullName: DeletedKeyBundle
        uid: azure-keyvault.DeletedKeyBundle
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.DeletedKeyBundle>
    name: DeletedKeyBundle>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeletedKeyBundle
        fullName: DeletedKeyBundle
        uid: azure-keyvault.DeletedKeyBundle
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.DeletedKeyBundle>>
    name: DeletedKeyBundle>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeletedKeyBundle
        fullName: DeletedKeyBundle
        uid: azure-keyvault.DeletedKeyBundle
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.DeletedSasDefinitionBundle>
    name: DeletedSasDefinitionBundle>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedSasDefinitionBundle
        fullName: DeletedSasDefinitionBundle
        uid: azure-keyvault.DeletedSasDefinitionBundle
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.DeletedSasDefinitionBundle>
    name: DeletedSasDefinitionBundle>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeletedSasDefinitionBundle
        fullName: DeletedSasDefinitionBundle
        uid: azure-keyvault.DeletedSasDefinitionBundle
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.DeletedSasDefinitionBundle>>
    name: DeletedSasDefinitionBundle>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeletedSasDefinitionBundle
        fullName: DeletedSasDefinitionBundle
        uid: azure-keyvault.DeletedSasDefinitionBundle
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.DeletedSecretBundle>
    name: DeletedSecretBundle>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedSecretBundle
        fullName: DeletedSecretBundle
        uid: azure-keyvault.DeletedSecretBundle
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.DeletedSecretBundle>
    name: DeletedSecretBundle>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeletedSecretBundle
        fullName: DeletedSecretBundle
        uid: azure-keyvault.DeletedSecretBundle
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.DeletedSecretBundle>>
    name: DeletedSecretBundle>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeletedSecretBundle
        fullName: DeletedSecretBundle
        uid: azure-keyvault.DeletedSecretBundle
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.DeletedStorageBundle>
    name: DeletedStorageBundle>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedStorageBundle
        fullName: DeletedStorageBundle
        uid: azure-keyvault.DeletedStorageBundle
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.DeletedStorageBundle>
    name: DeletedStorageBundle>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeletedStorageBundle
        fullName: DeletedStorageBundle
        uid: azure-keyvault.DeletedStorageBundle
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.DeletedStorageBundle>>
    name: DeletedStorageBundle>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeletedStorageBundle
        fullName: DeletedStorageBundle
        uid: azure-keyvault.DeletedStorageBundle
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.CertificateBundle>
    name: CertificateBundle>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CertificateBundle
        fullName: CertificateBundle
        uid: azure-keyvault.CertificateBundle
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.CertificateBundle>
    name: CertificateBundle>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CertificateBundle
        fullName: CertificateBundle
        uid: azure-keyvault.CertificateBundle
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-keyvault.CertificateIssuerListResult>
    name: CertificateIssuerListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CertificateIssuerListResult
        fullName: CertificateIssuerListResult
        uid: azure-keyvault.CertificateIssuerListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.CertificateIssuerListResult>
    name: CertificateIssuerListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CertificateIssuerListResult
        fullName: CertificateIssuerListResult
        uid: azure-keyvault.CertificateIssuerListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.CertificateIssuerListResult>>
    name: CertificateIssuerListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: CertificateIssuerListResult
        fullName: CertificateIssuerListResult
        uid: azure-keyvault.CertificateIssuerListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.CertificatePolicy>
    name: CertificatePolicy>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CertificatePolicy
        fullName: CertificatePolicy
        uid: azure-keyvault.CertificatePolicy
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.CertificatePolicy>
    name: CertificatePolicy>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CertificatePolicy
        fullName: CertificatePolicy
        uid: azure-keyvault.CertificatePolicy
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.CertificatePolicy>>
    name: CertificatePolicy>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: CertificatePolicy
        fullName: CertificatePolicy
        uid: azure-keyvault.CertificatePolicy
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.CertificateListResult>
    name: CertificateListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: CertificateListResult
        fullName: CertificateListResult
        uid: azure-keyvault.CertificateListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.CertificateListResult>
    name: CertificateListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CertificateListResult
        fullName: CertificateListResult
        uid: azure-keyvault.CertificateListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.CertificateListResult>>
    name: CertificateListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: CertificateListResult
        fullName: CertificateListResult
        uid: azure-keyvault.CertificateListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.CertificateBundle>>
    name: CertificateBundle>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: CertificateBundle
        fullName: CertificateBundle
        uid: azure-keyvault.CertificateBundle
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.DeletedCertificateListResult>
    name: DeletedCertificateListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedCertificateListResult
        fullName: DeletedCertificateListResult
        uid: azure-keyvault.DeletedCertificateListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.DeletedCertificateListResult>
    name: DeletedCertificateListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeletedCertificateListResult
        fullName: DeletedCertificateListResult
        uid: azure-keyvault.DeletedCertificateListResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-keyvault.DeletedCertificateListResult>>
    name: DeletedCertificateListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeletedCertificateListResult
        fullName: DeletedCertificateListResult
        uid: azure-keyvault.DeletedCertificateListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.DeletedKeyListResult>
    name: DeletedKeyListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedKeyListResult
        fullName: DeletedKeyListResult
        uid: azure-keyvault.DeletedKeyListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.DeletedKeyListResult>
    name: DeletedKeyListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeletedKeyListResult
        fullName: DeletedKeyListResult
        uid: azure-keyvault.DeletedKeyListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.DeletedKeyListResult>>
    name: DeletedKeyListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeletedKeyListResult
        fullName: DeletedKeyListResult
        uid: azure-keyvault.DeletedKeyListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.DeletedSasDefinitionListResult>
    name: DeletedSasDefinitionListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedSasDefinitionListResult
        fullName: DeletedSasDefinitionListResult
        uid: azure-keyvault.DeletedSasDefinitionListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.DeletedSasDefinitionListResult>
    name: DeletedSasDefinitionListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeletedSasDefinitionListResult
        fullName: DeletedSasDefinitionListResult
        uid: azure-keyvault.DeletedSasDefinitionListResult
      - name: '>'
        fullName: '>'
  - uid: >-
      Promise<HttpOperationResponse<azure-keyvault.DeletedSasDefinitionListResult>>
    name: DeletedSasDefinitionListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeletedSasDefinitionListResult
        fullName: DeletedSasDefinitionListResult
        uid: azure-keyvault.DeletedSasDefinitionListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.DeletedSecretListResult>
    name: DeletedSecretListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedSecretListResult
        fullName: DeletedSecretListResult
        uid: azure-keyvault.DeletedSecretListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.DeletedSecretListResult>
    name: DeletedSecretListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeletedSecretListResult
        fullName: DeletedSecretListResult
        uid: azure-keyvault.DeletedSecretListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.DeletedSecretListResult>>
    name: DeletedSecretListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeletedSecretListResult
        fullName: DeletedSecretListResult
        uid: azure-keyvault.DeletedSecretListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.DeletedStorageListResult>
    name: DeletedStorageListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedStorageListResult
        fullName: DeletedStorageListResult
        uid: azure-keyvault.DeletedStorageListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.DeletedStorageListResult>
    name: DeletedStorageListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DeletedStorageListResult
        fullName: DeletedStorageListResult
        uid: azure-keyvault.DeletedStorageListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.DeletedStorageListResult>>
    name: DeletedStorageListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: DeletedStorageListResult
        fullName: DeletedStorageListResult
        uid: azure-keyvault.DeletedStorageListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.KeyListResult>
    name: KeyListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: KeyListResult
        fullName: KeyListResult
        uid: azure-keyvault.KeyListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.KeyListResult>
    name: KeyListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: KeyListResult
        fullName: KeyListResult
        uid: azure-keyvault.KeyListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.KeyListResult>>
    name: KeyListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: KeyListResult
        fullName: KeyListResult
        uid: azure-keyvault.KeyListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.SasDefinitionBundle>
    name: SasDefinitionBundle>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SasDefinitionBundle
        fullName: SasDefinitionBundle
        uid: azure-keyvault.SasDefinitionBundle
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.SasDefinitionBundle>
    name: SasDefinitionBundle>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SasDefinitionBundle
        fullName: SasDefinitionBundle
        uid: azure-keyvault.SasDefinitionBundle
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.SasDefinitionBundle>>
    name: SasDefinitionBundle>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: SasDefinitionBundle
        fullName: SasDefinitionBundle
        uid: azure-keyvault.SasDefinitionBundle
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.SasDefinitionListResult>
    name: SasDefinitionListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SasDefinitionListResult
        fullName: SasDefinitionListResult
        uid: azure-keyvault.SasDefinitionListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.SasDefinitionListResult>
    name: SasDefinitionListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SasDefinitionListResult
        fullName: SasDefinitionListResult
        uid: azure-keyvault.SasDefinitionListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.SasDefinitionListResult>>
    name: SasDefinitionListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: SasDefinitionListResult
        fullName: SasDefinitionListResult
        uid: azure-keyvault.SasDefinitionListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.SecretBundle>
    name: SecretBundle>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SecretBundle
        fullName: SecretBundle
        uid: azure-keyvault.SecretBundle
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.SecretBundle>
    name: SecretBundle>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SecretBundle
        fullName: SecretBundle
        uid: azure-keyvault.SecretBundle
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-keyvault.SecretListResult>
    name: SecretListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SecretListResult
        fullName: SecretListResult
        uid: azure-keyvault.SecretListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.SecretListResult>
    name: SecretListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SecretListResult
        fullName: SecretListResult
        uid: azure-keyvault.SecretListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.SecretListResult>>
    name: SecretListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: SecretListResult
        fullName: SecretListResult
        uid: azure-keyvault.SecretListResult
      - name: '>>'
        fullName: '>>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.SecretBundle>>
    name: SecretBundle>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: SecretBundle
        fullName: SecretBundle
        uid: azure-keyvault.SecretBundle
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.StorageBundle>
    name: StorageBundle>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: StorageBundle
        fullName: StorageBundle
        uid: azure-keyvault.StorageBundle
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.StorageBundle>
    name: StorageBundle>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: StorageBundle
        fullName: StorageBundle
        uid: azure-keyvault.StorageBundle
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.StorageBundle>>
    name: StorageBundle>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: StorageBundle
        fullName: StorageBundle
        uid: azure-keyvault.StorageBundle
      - name: '>>'
        fullName: '>>'
  - uid: Promise<azure-keyvault.StorageListResult>
    name: StorageListResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: StorageListResult
        fullName: StorageListResult
        uid: azure-keyvault.StorageListResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.StorageListResult>
    name: StorageListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: StorageListResult
        fullName: StorageListResult
        uid: azure-keyvault.StorageListResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.StorageListResult>>
    name: StorageListResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: StorageListResult
        fullName: StorageListResult
        uid: azure-keyvault.StorageListResult
      - name: '>>'
        fullName: '>>'
  - uid: azure-keyvault.JsonWebKey
    name: JsonWebKey
    spec.typeScript:
      - name: JsonWebKey
        fullName: JsonWebKey
        uid: azure-keyvault.JsonWebKey
  - uid: azure-keyvault.Contacts
    name: Contacts
    spec.typeScript:
      - name: Contacts
        fullName: Contacts
        uid: azure-keyvault.Contacts
  - uid: azure-keyvault.CertificatePolicy
    name: CertificatePolicy
    spec.typeScript:
      - name: CertificatePolicy
        fullName: CertificatePolicy
        uid: azure-keyvault.CertificatePolicy
  - uid: Promise<azure-keyvault.KeyVerifyResult>
    name: KeyVerifyResult>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: KeyVerifyResult
        fullName: KeyVerifyResult
        uid: azure-keyvault.KeyVerifyResult
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-keyvault.KeyVerifyResult>
    name: KeyVerifyResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: KeyVerifyResult
        fullName: KeyVerifyResult
        uid: azure-keyvault.KeyVerifyResult
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-keyvault.KeyVerifyResult>>
    name: KeyVerifyResult>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: KeyVerifyResult
        fullName: KeyVerifyResult
        uid: azure-keyvault.KeyVerifyResult
      - name: '>>'
        fullName: '>>'
